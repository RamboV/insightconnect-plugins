# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Look up a CIDR address in the database"


class Input:
    CIDR = "cidr"
    DAYS = "days"
    

class Output:
    ADDRESSSPACEDESC = "addressSpaceDesc"
    MAXADDRESS = "maxAddress"
    MINADDRESS = "minAddress"
    NETMASK = "netmask"
    NETWORKADDRESS = "networkAddress"
    NUMPOSSIBLEHOSTS = "numPossibleHosts"
    REPORTEDIPS = "reportedIPs"
    

class CheckCidrInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "cidr": {
      "type": "string",
      "title": "CIDR",
      "description": "IPv4 address block in CIDR notation e.g. 207.126.144.0/20",
      "order": 1
    },
    "days": {
      "type": "string",
      "title": "Days",
      "description": "Check for CIDR reports in the last x days",
      "default": "30",
      "order": 2
    }
  },
  "required": [
    "cidr",
    "days"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckCidrOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "addressSpaceDesc": {
      "type": "string",
      "title": "Address Space Description",
      "description": "Address space description",
      "order": 3
    },
    "maxAddress": {
      "type": "string",
      "title": "Maximum Address",
      "description": "Maximum address",
      "order": 2
    },
    "minAddress": {
      "type": "string",
      "title": "Minimum Address",
      "description": "Minimum address",
      "order": 4
    },
    "netmask": {
      "type": "string",
      "title": "Netmask",
      "description": "Netmask",
      "order": 5
    },
    "networkAddress": {
      "type": "string",
      "title": "Network Address",
      "description": "Network address",
      "order": 1
    },
    "numPossibleHosts": {
      "type": "integer",
      "title": "Number of Hosts",
      "description": "Number of possible hosts",
      "order": 6
    },
    "reportedIPs": {
      "type": "array",
      "title": "Reported IPs",
      "description": "List of reported IPs",
      "items": {
        "$ref": "#/definitions/reportedIPs"
      },
      "order": 7
    }
  },
  "definitions": {
    "reportedIPs": {
      "type": "object",
      "title": "reportedIPs",
      "properties": {
        "CountryCode": {
          "type": "string",
          "title": "Country Code",
          "order": 1
        },
        "IP": {
          "type": "string",
          "title": "IP",
          "order": 2
        },
        "IsWhitelisted": {
          "type": "integer",
          "title": "Is Whitelisted",
          "order": 3
        },
        "MostRecentReport": {
          "type": "string",
          "title": "Most Recent Report",
          "order": 4
        },
        "NumReports": {
          "type": "integer",
          "title": "Number of Reports",
          "order": 5
        },
        "Public": {
          "type": "integer",
          "title": "Public",
          "order": 6
        },
        "abuseConfidenceScore": {
          "type": "integer",
          "title": "Abuse Confidence Score",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
