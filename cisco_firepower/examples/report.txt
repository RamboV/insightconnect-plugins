asset_id,host_name,ip_address,mac_address,last_assessed_for_vulnerabilities,asset_riskscore,vulnerability_description,vulnerability_title,vulnerability_severity,vulnerability_riskscore
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,289.45306396484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0758: Windows GDI Information Disclosure Vulnerability,Severe,263.9537353515625
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).</p>
  ",OpenSSL Timing vulnerability in ECDSA signature generation (CVE-2018-0735),Severe,297.138153076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Internet Explorer. The vulnerability could allow remote code execution if a user views a specially crafted webpage using an affected version of Internet Explorer. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-021: Security Update for Internet Explorer (2965111),Critical,892.3052978515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8694: Windows Kernel Elevation of Privilege Vulnerability,Severe,446.14996337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0272: Windows SMB Remote Code Execution Vulnerability,Critical,569.629638671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle sandbox checks. An attacker who successfully exploited this vulnerability could potentially read data outside their expected limits.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application.
The security update addresses the vulnerability by correcting how CLFS handles sandbox checks.
</p>
  ",Microsoft CVE-2019-1282: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files. The vulnerability could allow elevation of privilege if an attacker can successfully exploit it.
An attacker who successfully exploited the vulnerability could gain greater access to sensitive information and system functionality. To exploit the vulnerability, an attacker could run a specially crafted application.
The security update addresses the vulnerability by correcting the way that WER handles and executes files.
</p>
  ",Microsoft CVE-2019-1319: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0625: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      A Domain Name Server (DNS) amplification attack is a popular form of
      distributed denial of service (DDoS) that relies on the use of publically
      accessible open DNS servers to overwhelm a victim system with DNS response
      traffic.
    </p>
    
<p>
      A Domain Name Server (DNS) Amplification attack is a popular form of
      Distributed Denial of Service (DDoS), in which attackers use publically
      accessible open DNS servers to flood a target system with DNS response traffic.
      The primary technique consists of an attacker sending a DNS name lookup request
      to an open DNS server with the source address spoofed to be the target&#39;s
      address. When the DNS server sends the DNS record response, it is sent instead
      to the target. Attackers will typically submit a request for as much zone
      information as possible to maximize the amplification effect. In most attacks
      of this type observed by US-CERT, the spoofed queries sent by the attacker are
      of the type, &quot;ANY&quot; which returns all known information about a DNS zone in a
      single request. Because the size of the response is considerably larger than
      the request, the attacker is able to increase the amount of traffic directed at
      the victim. By leveraging a botnet to produce a large number of spoofed DNS
      queries, an attacker can create an immense amount of traffic with little
      effort. Additionally, because the responses are legitimate data coming from
      valid servers, it is extremely difficult to prevent these types of attacks.
      While the attacks are difficult to stop, network operators can apply several
      possible mitigation strategies.
    </p>
    
<p>
      While the most common form of this attack that US-CERT has observed
      involves DNS servers configured to allow unrestricted recursive resolution for
      any client on the Internet, attacks can also involve authoritative name servers
      that do not provide recursive resolution. The attack method is similar to open
      recursive resolvers, but is more difficult to mitigate since even a server
      configured with best practices can still be used in an attack. In the case of
      authoritative servers, mitigation should focus on using Response Rate Limiting
      to restrict the amount of traffic.
    </p>
  ",DNS Traffic Amplification,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-11852: Windows GDI Information Disclosure Vulnerability,Moderate,285.60906982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Virtual Secure Mode improperly handles objects in memory. A locally-authenticated attacker who successfully exploited this vulnerability could be able to read sensitive information on the target system.</p>
  ",MS16-137: Security Update for Windows Authentication Methods (3199173),Severe,600.8841552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0901: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the HTTP protocol stack (HTTP.sys) that is caused when HTTP.sys improperly parses specially crafted HTTP requests. An attacker who successfully exploited this vulnerability could execute arbitrary code in the context of the System account.</p>
  ",MS15-034: Vulnerability in HTTP.sys Could Allow Remote Code Execution (3042553),Critical,830.30413818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8573: Win32k Elevation of Privilege Vulnerability,Severe,468.31146240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0760: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2020-0608: Win32k Information Disclosure Vulnerability,Moderate,172.271163940429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0882: Windows GDI Information Disclosure Vulnerability,Severe,263.9537353515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1016: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2017-11815: Windows SMB Information Disclosure Vulnerability,Severe,287.9210205078125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>named in ISC BIND 9.x before 9.9.9-P4, 9.10.x before 9.10.4-P4, and 9.11.x before 9.11.0-P1 allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a DNAME record in the answer section of a response to a recursive query, related to db.c and resolver.c.</p>
  ",ISC BIND: A problem handling responses containing a DNAME answer can lead to an assertion failure (CVE-2016-8864),Severe,169.583908081054688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the (Human Interface Device) HID Parser Library driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how the HID Parser Library handles objects in memory.
</p>
  ",Microsoft CVE-2018-8169: HIDParser Elevation of Privilege Vulnerability,Severe,380.913330078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8330: Windows Kernel Information Disclosure Vulnerability,Moderate,264.8238525390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0576: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1049: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two publicly disclosed vulnerabilities in Microsoft Windows. The vulnerabilities could allow remote code execution if a user opened a specially crafted fax cover page file (.cov) using the Windows Fax Cover Page Editor. An attacker who successfully exploited either of these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS11-024: Vulnerabilities in Windows Fax Cover Page Editor Could Allow Remote Code Execution (2527308),Critical,817.814208984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      Insight Agent on Windows systems searches for local dependencies in several locations, including in directories in the system PATH variable. As this can include arbitrary directories, and the Agent doesn&#39;t specify the directories to search, an attacker with local admin access could place a (potentially malicious) DLL in a directory in that path, causing the Agent to load that library.
    </p>
  ",Rapid7 Insight Agent: CVE-2017-5252: Insight Agent on Windows is vulnerable to loading malicious libraries placed in its dependency search path,Severe,429.046173095703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8681: Windows GDI+ Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A race condition that could lead to a remote code execution vulnerability exists in NetBT Session Services when NetBT fails to maintain certain sequencing requirements. To exploit the vulnerability, an attacker needs to be able to send specially crafted NetBT Session Service packets to an impacted system.
An attacker who successfully exploits the vulnerability could execute arbitrary code on the target.
The security update addresses the vulnerability by correcting how NetBT sequences certain operations.
</p>
  ",Microsoft CVE-2017-0161: NetBIOS Remote Code Execution Vulnerability,Severe,451.345947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0269: Windows SMB Denial of Service Vulnerability,Severe,124.001007080078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0715: Windows Hyper-V Denial of Service Vulnerability,Severe,100.109153747558594
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2019-0719: Hyper-V Remote Code Execution Vulnerability,Critical,268.703521728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1469: Win32k Information Disclosure Vulnerability,Moderate,180.099716186523438
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The expression specified in &lt;FilesMatch&gt; could match &#39;$&#39; to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.</p>
  ",Apache HTTPD: <FilesMatch> bypass with a trailing newline in the file name (CVE-2017-15715),Severe,417.888153076171875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The expression specified in &lt;FilesMatch&gt; could match &#39;$&#39; to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.</p>
  ",Apache HTTPD: <FilesMatch> bypass with a trailing newline in the file name (CVE-2017-15715),Severe,417.888153076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8578: Win32k Elevation of Privilege Vulnerability,Critical,557.82623291015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk. 
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8540 Microsoft Malware Protection Engine Remote Code Execution Vulnerability,Critical,597.9896240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way some ActiveX objects are instantiated. An attacker who successfully exploited this vulnerability could gain access to protected memory contents.
To exploit this vulnerability, an attacker would need to convince a user to open a malicious document that could then instantiate the vulnerable object. This security update addresses the vulnerability by correcting how these objects are instantiated.
</p>
  ",Microsoft CVE-2017-0242: Microsoft ActiveX Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Edge improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that enables an attacker to execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website that is designed to exploit the vulnerability through Microsoft Edge, and then convince a user to view the website. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements by adding specially crafted content that could exploit the vulnerability. In all cases, however, an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by way of enticement in an email or Instant Messenger message, or by getting them to open an attachment sent through email.
The security update addresses the vulnerability by modifying how Microsoft Edge handles objects in memory.
</p>
  ",Microsoft CVE-2017-0238: Microsoft Edge Memory Corruption Vulnerability,Critical,488.47320556640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft XML Core Services. The vulnerability could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS12-043: Vulnerability in Microsoft XML Core Services Could Allow Remote Code Execution (2722479),Critical,909.460205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Network Driver Interface Specification (NDIS) when ndis.sys fails to check the length of a buffer prior to copying memory to it.
To exploit the vulnerability, in a local attack scenario, an attacker could run a specially crafted application to elevate the attacker&#39;s privilege level. An attacker who successfully exploited this vulnerability could run processes in an elevated context. However, an attacker must first gain access to the local system with the ability to execute a malicious application in order to exploit this vulnerability.
The security update addresses the vulnerability by changing how ndis.sys validates buffer length.
</p>
  ",Microsoft CVE-2018-8342: Windows NDIS Elevation of Privilege Vulnerability,Severe,420.458648681640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1256: Win32k Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll)  when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2019-1412: OpenType Font Driver Information Disclosure Vulnerability,Moderate,186.259323120117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework and .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Framework (or .NET core) application.
The update addresses the vulnerability by correcting how .NET Framework and .NET Core applications handle RegEx string processing.
</p>
  ",Microsoft CVE-2019-0820: .NET Framework and .NET Core Denial of Service Vulnerability,Severe,150.4931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0848: Win32k Information Disclosure Vulnerability,Moderate,231.031356811523438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft software. The vulnerability could allow remote code execution if a user views a specially crafted Web page that uses a specific binary behavior in Internet Explorer. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. This update also includes kill bits for four third-party ActiveX controls.</p>
  ",MS11-090: Cumulative Security Update of ActiveX Kill Bits (2618451),Critical,795.57781982421875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  When generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.</p>
  ",Apache HTTPD: Weak Digest auth nonce generation in mod_auth_digest (CVE-2018-1312),Severe,417.888153076171875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  When generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.</p>
  ",Apache HTTPD: Weak Digest auth nonce generation in mod_auth_digest (CVE-2018-1312),Severe,417.888153076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2017-11784: Windows Kernel Information Disclosure Vulnerability,Moderate,323.4075927734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel API enforces permissions. An attacker who successfully exploited the vulnerability could impersonate processes, interject cross-process communication, or interrupt system functionality.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly enforces permissions.
</p>
  ",Microsoft CVE-2017-0050: Windows Elevation of Privilege Vulnerability,Severe,575.44146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-0155: Win32k Elevation of Privilege Vulnerability,Severe,489.433746337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when &quot;Windows Theme API&quot; does not properly decompress files.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a victim user must open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and then convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force a user to visit the website. Instead, an attacker would have to convince a user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by helping to ensure that &quot;Windows Theme API&quot; properly decompresses files.
</p>
  ",Microsoft CVE-2018-8413: Windows Theme API Remote Code Execution Vulnerability,Critical,482.8240966796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8404: Win32k Elevation of Privilege Vulnerability,Severe,420.458648681640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in the p2pimsvc service where an attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the p2pimsvc service handles processes these requests.
</p>
  ",Microsoft CVE-2019-1168: Microsoft Windows p2pimsvc Elevation of Privilege Vulnerability,Severe,314.917999267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1242: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).</p>
  ",OpenSSL ECDSA remote timing attack (CVE-2019-1547),Moderate,152.952468872070312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory, aka &#39;GDI+ Remote Code Execution Vulnerability&#39;. This CVE ID is unique from CVE-2020-0881.</p>
  ",Microsoft CVE-2020-0883: GDI+ Remote Code Execution Vulnerability,Critical,315.58282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Shell improperly handles objects in memory. An attacker who successfully exploited this vulnerability could cause arbitrary code to execute in the context of the current user. If a user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS15-109: Security Update for Windows Shell to Address Remote Code Execution (3096443),Critical,660.875732421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-8695: Windows Uniscribe Information Disclosure Vulnerability,Moderate,299.681304931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"Microsoft is announcing the release of SHA-2 code sign support for Windows 7 SP1, and Windows Server 2008 R2 SP1. Please see 2019 SHA-2 Code Signing Support requirement for Windows and WSUS for more information.",Microsoft ADV190009: Microsoft ADV190009: SHA-2 Code Sign Support Advisory,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability.

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-8332: Win32k Graphics Remote Code Execution Vulnerability,Critical,466.59368896484375
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>Buffer overflow in redis-cli of Redis before 4.0.10 and 5.x before 5.0 RC3 allows an attacker to achieve code execution and escalate to higher privileges via a crafted command line. NOTE: It is unclear whether there are any common situations in which redis-cli is used with, for example, a -h (aka hostname) argument from an untrusted source.</p>
  ",Redis: Improper Restriction of Operations within the Bounds of a Memory Buffer (CVE-2018-12326),Severe,383.82861328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0632: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles authentication requests. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
An attacker could exploit this vulnerability by running a specially crafted application on the victim system.
The update addresses the vulnerability by correcting the way Windows handles authentication requests.
</p>
  ",Microsoft CVE-2019-0543: Microsoft Windows Elevation of Privilege Vulnerability,Severe,333.623565673828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2019-0821: Windows SMB Information Disclosure Vulnerability,Severe,226.971817016601562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in the Network Location Awareness (NLA) service that could unintentionally relax the firewall policy and/or configuration of certain services. This could increase the surface exposed to an attacker. The vulnerability is caused when the NLA service fails to properly validate whether a domain-connected computer is connected to the domain or to an untrusted network. The update addresses the vulnerability by forcing mutual authentication via Kerberos.</p>
  ",MS15-005: Vulnerability in Network Location Awareness Service Could Allow Security Feature Bypass (3022777),Severe,402.359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-079: Cumulative Security Update for Internet Explorer (3082442),Critical,703.53466796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft browsers improperly handle redirect requests. The vulnerability allows Microsoft browsers to bypass CORS redirect restrictions, and to follow redirect requests that should otherwise be ignored. An attacker who successfully exploited the vulnerability could force the browser to send data that would otherwise be restricted to a destination website of the attacker&#39;s choice.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Microsoft browsers and then convince a user to view the website. The attacker could also take advantage of compromised websites, and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how affected Microsoft browsers handle redirect requests.
</p>
  ",Microsoft CVE-2017-8592: Microsoft Browser Security Feature Bypass Vulnerability,Severe,364.294708251953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Graphics Component (GDI32.dll) fails to properly handle objects in memory, allowing an attacker to retrieve information that could lead to an Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited this vulnerability could cause an information disclosure to bypass the ASLR security feature that protects users from a broad class of vulnerabilities. </p>
  ",MS16-074: Security Update for Microsoft Graphics Component  (3164036),Severe,594.53204345703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when LDAP request buffer lengths are improperly calculated. In a remote attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to send malicious traffic to a Domain Controller. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
The update addresses the vulnerability by correcting how LDAP request buffer lengths are calculated.
</p>
  ",Microsoft CVE-2017-0166: LDAP Elevation of Privilege Vulnerability,Critical,574.75091552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0268: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
        The server is not configured with support for any modern, secure ciphers and only supports ciphers known to be weak against attack.
    </p>
  ",TLS/SSL Server Does Not Support Any Strong Cipher Algorithms,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-8344: Microsoft Graphics Remote Code Execution Vulnerability,Critical,473.22650146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote unauthenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-8589: Windows Search Remote Code Execution Vulnerability,Critical,759.23455810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2017-8624: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,509.06878662109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Elevation of privilege vulnerabilities exist when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS16-039: Security Update for Microsoft Graphics Component  (3148522),Critical,668.77490234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when the XmlLite runtime (XmlLite.dll) improperly parses XML input. An attacker who successfully exploited this vulnerability could cause a denial of service against an XML application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an XML application.
The update addresses the vulnerability by correcting how the XmlLite runtime parses XML input.
</p>
  ",Microsoft CVE-2019-1187: XmlLite Runtime Denial of Service Vulnerability,Severe,148.057449340820312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2019-1290: Remote Desktop Client Remote Code Execution Vulnerability,Critical,370.824737548828125
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).</p>
  ",OpenSSL Fork Protection (CVE-2019-1549),Severe,441.6854248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0719: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Terminal Services component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The update addresses the vulnerability by correcting how the Terminal Services component handle objects in memory.
</p>
  ",Microsoft CVE-2019-0839: Windows Information Disclosure Vulnerability,Moderate,231.031356811523438
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
        Allowing nameservers to process recursive queries coming from any system
        may, in certain situations, help attackers conduct denial of service or
        cache poisoning attacks.
     </p>
  ",Nameserver Processes Recursive Queries,Severe,199.82763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Microsoft Common Console Document (.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to open the file.
The update addresses the vulnerability by modifying the way that the Microsoft Common Console Document (.msc) parses XML input.
</p>
  ",Microsoft CVE-2017-8557: Windows System Information Console Information Disclosure Vulnerability,Moderate,336.377716064453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8120: Win32k Elevation of Privilege Vulnerability,Severe,511.372406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Windows Netlogon improperly handles a secure communications channel. An attacker who successfully exploited the vulnerability could downgrade aspects of the connection allowing for further modification of the transmission.
To exploit the vulnerability, an attacker would require an active man in the middle attack to be in place for the targeted traffic.
The update addresses the vulnerability by modifying how Netlogon handles these connections, accounting for potential attack through a man in the middle.
</p>
  ",Microsoft CVE-2019-1424: NetLogon Security Feature Bypass Vulnerability,Severe,291.426361083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1458: Win32k Elevation of Privilege Vulnerability,Severe,275.777679443359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory, aka &#39;Windows Search Indexer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0666, CVE-2020-0667, CVE-2020-0735.</p>
  ",Microsoft CVE-2020-0752: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0898: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>For configurations enabling support for HTTP/2, SSL client certificate validation was not enforced if configured, allowing clients unauthorized access to protected resources over HTTP/2. This issue affected releases 2.4.18 and 2.4.20 only.</p>
  ",Apache HTTPD: TLS/SSL X.509 client certificate auth bypass with HTTP/2 (CVE-2016-4979),Severe,214.294326782226562
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>For configurations enabling support for HTTP/2, SSL client certificate validation was not enforced if configured, allowing clients unauthorized access to protected resources over HTTP/2. This issue affected releases 2.4.18 and 2.4.20 only.</p>
  ",Apache HTTPD: TLS/SSL X.509 client certificate auth bypass with HTTP/2 (CVE-2016-4979),Severe,214.294326782226562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0279: Windows SMB Remote Code Execution Vulnerability,Severe,471.203857421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in StructuredQuery when the software fails to properly handle objects in memory.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability typically requires that a user open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) containing a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force users to visit the website. Instead, an attacker would have to convince users to click a link, typically by way of an enticement in an email or instant message, and then convince them to open the specially crafted file.
Note that where severity is indicated as Critical in the Affected Products table, the Preview Pane is an attack vector.
The security update addresses the vulnerability by correcting how StructuredQuery handles objects in memory.
</p>
  ",Microsoft CVE-2018-0825: StructuredQuery Remote Code Execution Vulnerability,Critical,419.949432373046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8224: Windows Kernel Elevation of Privilege Vulnerability,Severe,380.913330078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1151: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>An Integer Overflow issue was discovered in the struct library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2, leading to a failure of bounds checking.</p>
  ",Redis: Integer Overflow or Wraparound (CVE-2018-11219),Critical,602.02813720703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0579: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0596: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0849: Windows GDI Information Disclosure Vulnerability,Severe,270.104248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0795: MS XML Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine, when rendered in Internet Explorer, handles objects in memory. In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit this vulnerability.</p>
  ",MS15-065: Security Update for Internet Explorer (3076321),Critical,672.9681396484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-044: Vulnerability in .NET Framework Could Allow Remote Code Execution (2538814),Severe,675.11572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Windows DNS resolution. The vulnerability could allow remote code execution if an attacker gained access to the network and then created a custom program to send specially crafted LLMNR broadcast queries to the target systems. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed. In this case, the LLMNR ports should be blocked from the Internet.</p>
  ",MS11-030: Vulnerability in DNS Resolution Could Allow Remote Code Execution (2509553),Critical,735.145751953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-8675: Win32k Elevation of Privilege Vulnerability,Severe,453.0826416015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way Windows DirectShow handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a target system.
In a web-based attack scenario, an attacker could host a website used to attempt to exploit the vulnerability. Additionally, compromised websites and websites that accept or host user-provided content could contain specially crafted content that could be used to exploit the vulnerability. However, in all cases, an attacker would have no way to force users to view attacker-controlled content. Instead, an attacker would have to convince users to take action. For example, an attacker could trick users into clicking a link that takes them to the attacker&#39;s site.
The security update addresses the vulnerability by correcting how Windows DirectShow handles objects in memory.
</p>
  ",Microsoft CVE-2017-0042: Windows DirectShow Information Disclosure Vulnerability,Moderate,352.9422607421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. In a web browsing attack scenario, an attacker could host a website that contains a webpage that is used to exploit this vulnerability. In addition, compromised websites and websites that accept or host user-provided content or advertisements could contain specially crafted content that could exploit this vulnerability. In all cases, however, an attacker would have no way to force users to visit these websites. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes users to the attacker&#39;s website.</p>
  ",MS12-025: Vulnerability in .NET Framework Could Allow Remote Code Execution (2671605),Critical,816.57421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0755: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8392: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,466.59368896484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,700.81011962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0598: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the wlansvc.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the wlansvc.dll properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1085: Windows WLAN Service Elevation of Privilege Vulnerability,Severe,269.645721435546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An authentication bypass vulnerability exists in Windows Communication Foundation (WCF) and Windows Identity Foundation (WIF), allowing signing of SAML tokens with arbitrary symmetric keys. This vulnerability allows an attacker to impersonate another user, which can lead to elevation of privileges. The vulnerability exists in WCF, WIF 3.5 and above in .NET Framework, WIF 1.0 component in Windows, WIF Nuget package, and WIF implementation in SharePoint.
An unauthenticated attacker can exploit this by signing a SAML token with any arbitrary symmetric key.
This security update addresses the issue by ensuring all versions of WCF and WIF validate the key used to sign SAML tokens correctly.
</p>
  ",Microsoft CVE-2019-1006: WCF/WIF SAML Token Authentication Bypass Vulnerability,Severe,186.260177612304688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows its:// protocol handler unnecessarily sends traffic to a remote site in order to determine the zone of a provided URL. This could potentially result in the disclosure of sensitive information to a malicious site.
To exploit the vulnerability an attacker would have to trick a user into browsing to a malicious website or to an SMB or UNC path destination.  An attacker who successfully tricked a user into disclosing the user&#39;s NTLM hash could attempt a brute-force attack to disclose the corresponding hash password.
The security update addresses the vulnerability by correcting how the Windows its:// protocol handler determines the zone of a request.
</p>
  ",Microsoft CVE-2017-11927: Microsoft Windows Information Disclosure Vulnerability,Severe,344.3370361328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8539: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.356521606445312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and twenty-three privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-010: Cumulative Security Update for Internet Explorer (2909921),Critical,731.75994873046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Video Control fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-131: Security Update for Microsoft Video Control (3199151),Critical,601.6043701171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way the Windows Graphics Component handles objects in memory. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince a user to open the document file.

Note that for affected Microsoft Office products, the Preview Pane is an attack vector.
The security update addresses the vulnerability by correcting how the Windows Graphics Component handles objects in the memory.
</p>
  ",Microsoft CVE-2017-0014: Windows Graphics Component Remote Code Execution Vulnerability,Critical,540.44287109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0278: Windows SMB Remote Code Execution Vulnerability,Severe,471.203857421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2018-0868: Windows Installer Elevation of Privilege Vulnerability,Severe,406.1339111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1432: DirectWrite Information Disclosure Vulnerability,Severe,230.073455810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Backup Service improperly handles file operations.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows Backup Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0703: Windows Backup Service Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0580: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0906: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2019-0767: Windows Kernel Information Disclosure Vulnerability,Moderate,236.443801879882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1016: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.890167236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0280: Windows SMB Denial of Service Vulnerability,Severe,217.001800537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft .NET Framework (and .NET Core) components do not completely validate certificates.
An attacker could present a certificate that is marked invalid for a specific use, but the component uses it for that purpose. This action disregards the Enhanced Key Usage taggings.
The security update addresses the vulnerability by helping to ensure that .NET Framework (and .NET Core) components completely validate certificates.
</p>
  ",Microsoft CVE-2017-0248: .NET Security Feature Bypass Vulnerability,Severe,208.013946533203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A spoofing vulnerability exists when Microsoft browsers render SmartScreen Filter. An attacker who successfully exploited this vulnerability could trick a user by redirecting the user to a specially crafted website. The specially crafted website could then either spoof content or serve as a pivot to chain an attack with other vulnerabilities in web services.
To exploit the vulnerability, the user must click a specially crafted URL. In an email attack scenario, an attacker could send an email message containing the specially crafted URL to the user in an attempt to convince the user to click it.
In a web-based attack scenario, an attacker could host a specially crafted website designed to appear as a legitimate website to the user. However, the attacker would have no way to force the user to visit the specially crafted website. The attacker would have to convince the user to visit the specially crafted website, typically by way of enticement in an email or Instant Messenger message, and then convince the user to interact with content on the website. The update addresses the vulnerability by correcting how Microsoft browsers parse HTML.
</p>
  ",Microsoft CVE-2017-0231: Microsoft Browser Spoofing Vulnerability,Severe,155.001266479492188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0975: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A tampering vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLM MIC (Message Integrity Check) protection. An attacker who successfully exploited this vulnerability could gain the ability to downgrade NTLM security features.
To exploit this vulnerability, the attacker would need to tamper with the NTLM exchange. The attacker could then modify flags of the NTLM packet without invalidating the signature.
The update addresses the vulnerability by hardening NTLM MIC protection on the server-side.
</p>
  ",Microsoft CVE-2019-1166: Windows NTLM Tampering Vulnerability,Severe,98.685028076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0578: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0847: Jet Database Engine Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow security feature bypass if a user visits a specially crafted website. In a web-browsing attack scenario, an attacker who successfully exploited this vulnerability could bypass the Address Space Layout Randomization (ASLR) security feature, which helps protect users from a broad class of vulnerabilities. The security feature bypass by itself does not allow arbitrary code execution. However, an attacker could use this ASLR bypass vulnerability in conjunction with another vulnerability, such as a remote code execution vulnerability, that could take advantage of the ASLR bypass to run arbitrary code.</p>
  ",MS14-046: Vulnerability in .NET Framework Could Allow Security Feature Bypass (2984625),Severe,465.572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0072: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0113: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1250: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,269.333587646484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0851: Jet Database Engine Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows fails to properly handle uninitialized memory when parsing certain, specially crafted TIFF image format files. The vulnerability could allow information disclosure if an attacker runs a specially crafted application on an affected system. </p>
  ",MS15-016: Vulnerability in Microsoft Graphics Component Could Allow Information Disclosure (3029944),Severe,452.01922607421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in PowerShell when PSObject wraps a CIM Instance. An attacker who successfully exploited this vulnerability could execute malicious code on a vulnerable system.
In an attack scenario, an attacker could execute malicious code in a PowerShell remote session.
The update addresses the vulnerability by correcting how PowerShell deserializes user supplied scripts.
</p>
  ",Microsoft CVE-2017-8565: Windows PowerShell Remote Code Execution Vulnerability,Critical,557.82623291015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2017-0005: Windows GDI Elevation of Privilege Vulnerability,Severe,535.66790771484375
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>The IIS default installation or &quot;Welcome&quot; page is installed
      on this server.  This usually indicates a newly installed server
      which has not yet been configured properly and which may not be
      known about.</p>
    

<p>In many cases, IIS is installed by default and the user
      may not be aware that the web server is running.  These servers
      are rarely patched and rarely monitored, providing hackers with
      a convenient target that is not likely to trip any alarms.</p>
  ",Microsoft IIS default installation/welcome page installed,Severe,590.12451171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET (or .NET core) application.
The update addresses the vulnerability by correcting how .NET and .NET Core applications handle XML document processing.
</p>
  ",Microsoft CVE-2018-0765: .NET and .NET Core Denial of Service Vulnerability,Severe,159.296859741210938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Kernel API improperly handles registry objects in memory. An attacker who successfully exploited the vulnerability could gain elevated privileges on a targeted system.
A locally authenticated attacker could exploit this vulnerability by running a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly handles objects in memory.
</p>
  ",Microsoft CVE-2018-8410: Windows Registry Elevation of Privilege Vulnerability,Severe,439.4647216796875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</p>
  ",Apache HTTPD: mod_rewrite potential open redirect (CVE-2019-10098),Severe,298.344757080078125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</p>
  ",Apache HTTPD: mod_rewrite potential open redirect (CVE-2019-10098),Severe,298.344757080078125
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.</p>
  ",Redis: Information Exposure (CVE-2013-7458),Moderate,379.09967041015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.
An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
The attacker could present to the user a removable drive, or remote share, that contains a malicious .LNK file and an associated malicious binary. When the user opens this drive(or remote share) in Windows Explorer, or any other application that parses the .LNK file, the malicious binary will execute code of the attacker&#8217;s choice, on the target system.
The security update addresses the vulnerability by correcting the processing of shortcut LNK references.
</p>
  ",Microsoft CVE-2019-1280: LNK Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework checks the source markup of a file.
</p>
  ",Microsoft CVE-2020-0605: .NET Framework Remote Code Execution Vulnerability,Critical,333.14886474609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Remote Desktop Services &#226;&#8364;&#8220; formerly known as Terminal Services &#226;&#8364;&#8220; when an authenticated attacker abuses clipboard redirection, aka &#39;Remote Desktop Services&#194; Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0655: Remote Desktop Services Remote Code Execution Vulnerability,Critical,168.7576904296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the Microsoft Active Accessibility component. The vulnerability could allow remote code execution if an attacker convinces a user to open a legitimate file that is located in the same network directory as a specially crafted dynamic link library (DLL) file. Then, while opening the legitimate file, the Microsoft Active Accessibility component could attempt to load the DLL file and execute any code it contained. For an attack to be successful, a user must visit an untrusted remote file system location or WebDAV share and open a document from this location that is then loaded by a vulnerable application.</p>
  ",MS11-075: Vulnerability in Microsoft Active Accessibility Could Allow Remote Code Execution (2623699),Critical,799.60589599609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-11849: Windows Kernel Information Disclosure Vulnerability,Moderate,285.60906982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves fourteen privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-056: Cumulative Security Update for Internet Explorer (2987107),Critical,739.6947021484375
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
        The server is using a common or default prime number as a parameter during the Diffie-Hellman key exchange.
        This makes the secure session vulnerable to a precomputation attack. An attacker can spend a significant amount
        of time to generate a lookup/rainbow table for a particular prime number. This lookup table can then be used to obtain
        the shared secret for the handshake and decrypt the session.
    </p>
  ",TLS/SSL Server Is Using Commonly Used Prime Numbers,Moderate,169.93206787109375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
        The server is using a common or default prime number as a parameter during the Diffie-Hellman key exchange.
        This makes the secure session vulnerable to a precomputation attack. An attacker can spend a significant amount
        of time to generate a lookup/rainbow table for a particular prime number. This lookup table can then be used to obtain
        the shared secret for the handshake and decrypt the session.
    </p>
  ",TLS/SSL Server Is Using Commonly Used Prime Numbers,Moderate,169.93206787109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in the Remote Desktop Protocol. The more severe of these vulnerabilities could allow remote code execution if an attacker sends a sequence of specially crafted RDP packets to an affected system. By default, the Remote Desktop Protocol (RDP) is not enabled on any Windows operating system. Systems that do not have RDP enabled are not at risk.</p>
  ",MS12-020: Vulnerabilities in Remote Desktop Could Allow Remote Code Execution (2671387),Critical,818.24627685546875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>By design, BIND is intended to limit the number of TCP clients that can be connected at any given time. The number of allowed connections is a tunable parameter which, if unset, defaults to a conservative value for most servers. Unfortunately, the code which was intended to limit the number of simultaneous connections contained an error which could be exploited to grow the number of simultaneous connections beyond this limit. Versions affected: BIND 9.9.0 -&gt; 9.10.8-P1, 9.11.0 -&gt; 9.11.6, 9.12.0 -&gt; 9.12.4, 9.14.0. BIND 9 Supported Preview Edition versions 9.9.3-S1 -&gt; 9.11.5-S3, and 9.11.5-S5. Versions 9.13.0 -&gt; 9.13.7 of the 9.13 development branch are also affected. Versions prior to BIND 9.9.0 have not been evaluated for vulnerability to CVE-2018-5743.</p>
  ",ISC BIND: Limiting simultaneous TCP clients is ineffective (CVE-2018-5743),Severe,88.2797622680664062
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.722274780273438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Remote Procedure Call runtime improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Remote Procedure Call runtime i initializes objects in memory.
</p>
  ",Microsoft CVE-2018-8407: Remote Procedure Call runtime Information Disclosure Vulnerability,Moderate,258.57489013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when Windows fails to properly handle certain symbolic links. An attacker who successfully exploited this vulnerability could potentially set certain items to run at a higher level and thereby elevate permissions.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows handles symbolic links.
</p>
  ",Microsoft CVE-2020-0635: Windows Elevation of Privilege Vulnerability,Severe,263.79022216796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly handles objects in memory, aka &#39;Windows UPnP Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0783.</p>
  ",Microsoft CVE-2020-0781: Windows UPnP Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.781829833984375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.781829833984375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.781829833984375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.33 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerabilty hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.</p>
  ",Apache HTTPD: Possible write of after free on HTTP/2 stream shutdown (CVE-2018-1302),Severe,109.970558166503906
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.33 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerabilty hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.</p>
  ",Apache HTTPD: Possible write of after free on HTTP/2 stream shutdown (CVE-2018-1302),Severe,109.970558166503906
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-11851: Windows GDI Information Disclosure Vulnerability,Moderate,285.60906982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Information Disclosure vulnerability exists when the HTTP.sys server application component improperly handles objects in memory.
An attacker who successfully exploited this vulnerability could obtain information to further compromise the HTTP.sys server application system.
A remote unauthenticated attacker could exploit this vulnerability by issuing a request to the HTTP.sys server application.
The update addresses the vulnerability by correcting how the HTTP.sys server application handles objects in memory.
</p>
  ",Microsoft CVE-2017-8582: Http.sys Information Disclosure Vulnerability,Severe,364.294708251953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.</p>
  ",MS16-135: Security Update for Windows Kernel-Mode Drivers (3199135),Severe,600.8841552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET (or .NET core) application.
The update addresses the vulnerability by correcting how .NET and .NET Core applications handle XML document processing.
</p>
  ",Microsoft CVE-2018-0764: .NET and .NET Core Denial of Service Vulnerability,Severe,161.774627685546875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>&quot;managed-keys&quot; is a feature which allows a BIND resolver to automatically maintain the keys used by trust anchors which operators configure for use in DNSSEC validation. Due to an error in the managed-keys feature it is possible for a BIND server which uses managed-keys to exit due to an assertion failure if, during key rollover, a trust anchor&#39;s keys are replaced with keys which use an unsupported algorithm. Versions affected: BIND 9.9.0 -&gt; 9.10.8-P1, 9.11.0 -&gt; 9.11.5-P1, 9.12.0 -&gt; 9.12.3-P1, and versions 9.9.3-S1 -&gt; 9.11.5-S3 of BIND 9 Supported Preview Edition. Versions 9.13.0 -&gt; 9.13.6 of the 9.13 development branch are also affected. Versions prior to BIND 9.9.0 have not been evaluated for vulnerability to CVE-2018-5745.</p>
  ",ISC BIND: An assertion failure can occur if a trust anchor rolls over to an unsupported key algorithm when using managed-keys (CVE-2018-5745),Severe,64.2015533447265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in &quot;Microsoft COM for Windows&quot; when it fails to properly handle serialized objects.
An attacker who successfully exploited the vulnerability could use a specially crafted file or script to perform actions. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file that is designed to exploit the vulnerability. However, an attacker would have no way to force the user to visit the website. Instead, an attacker would have to convince the user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by correcting how &quot;Microsoft COM for Windows&quot; handles serialized objects.
</p>
  ",Microsoft CVE-2018-8349: Microsoft COM for Windows Remote Code Execution Vulnerability,Critical,473.22650146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Microsoft has deprecated the Document Signing functionality in XPS Viewer. This functionality relied upon the SHA-1 algorithm and is part of our overall effort to remove this algorithm from our products. This change impacts XPS Viewer on all supported versions of Windows.
FAQ
1. I need to use this deprecated functionality. Is there a way to enable it?
Yes. Please create the following registry entry:
[HKEY_CURRENT_USER\Software\Microsoft\XPSViewer] &quot;EnableDigitalSignatures&quot;=dword:00000001
2. What risks am I accepting by using SHA-1 based document signing?
SHA-1 is a legacy cryptographic hash that many in the security community believe is no longer secure. Using the SHA-1 hashing algorithm in document signing could allow an attacker to spoof content, perform phishing attacks, or otherwise manipulate content of a document. Microsoft, in collaboration with other members of the industry, is working to phase out the SHA-1 algorithm and to warn consumers of the possible risk when they encounter websites using the SHA-1 algorithm.
</p>
  ",Microsoft ADV180005: Document signing deprecation in XPS Viewer,Severe,342.178741455078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows when the Windows SMB Client kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could potentially disclose contents of System memory.
To exploit this vulnerability, an attacker would have to log on to the system first and then run a specially crafted application in user mode.
The security update addresses the vulnerability by correcting how the Windows SMB Client kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1293: Windows SMB Client Driver Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0788, CVE-2020-0877.</p>
  ",Microsoft CVE-2020-0887: Win32k Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in .NET Framework and Visual Studio software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework or Visual Studio. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework and Visual Studio check the source markup of a file.
</p>
  ",Microsoft CVE-2019-0613: .NET Framework and Visual Studio Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0792: MS XML Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Information disclosure vulnerabilities exist when Microsoft XML Core Services (MSXML) explicitly allows the use of Secure Sockets Layer (SSL) 2.0. An attacker who successfully exploited these vulnerabilities could decrypt portions of encrypted network information traffic.</p>
  ",MS15-084: Vulnerabilities in XML Core Services Could Allow Information Disclosure (3080129),Severe,437.09979248046875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
         The database allows any remote system the ability to connect to it. It is 
         recommended to limit direct access to trusted systems because databases may 
         contain sensitive data, and new vulnerabilities and exploits are discovered 
         routinely for them. For this reason, it is a violation of PCI DSS section 
         1.3.6 to have databases listening on ports accessible from the Internet, 
         even when protected with secure authentication mechanisms.
      </p>
  ",Database Open Access,Severe,575.5721435546875
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
         The database allows any remote system the ability to connect to it. It is 
         recommended to limit direct access to trusted systems because databases may 
         contain sensitive data, and new vulnerabilities and exploits are discovered 
         routinely for them. For this reason, it is a violation of PCI DSS section 
         1.3.6 to have databases listening on ports accessible from the Internet, 
         even when protected with secure authentication mechanisms.
      </p>
  ",Database Open Access,Severe,575.5721435546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2017-11824: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,446.14996337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0273: Windows SMB Denial of Service Vulnerability,Severe,124.001007080078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Function Discovery Service handles objects in memory, aka &#39;Windows Function Discovery Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0679, CVE-2020-0682.</p>
  ",Microsoft CVE-2020-0680: Windows Function Discovery Service Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0597: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0902: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could set the short name of a file with a long name to an arbitrary short name, overriding the file system with limited privileges.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0796: Windows Elevation of Privilege Vulnerability,Moderate,101.723876953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework and Microsoft Silverlight. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs) or Silverlight applications. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-039: Vulnerability in .NET Framework and Microsoft Silverlight Could Allow Remote Code Execution (2514842),Critical,806.74053955078125
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
3,integrations-idr-collector.vuln.lax.rapid7.com,10.4.22.91,00:50:56:94:90:7f,2020-06-16 08:02:19.066,0,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
10,ivm-agent-ub18.vuln.lax.rapid7.com,10.4.29.57,00:50:56:94:a8:d1,2020-06-16 08:03:34.834,0,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Video Control fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-122: Security Update for Microsoft Video Control (3195360),Critical,606.256591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Common Log File System (CLFS)&#160;driver improperly handles objects in memory.&#160;In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to bypass security measures on the affected system allowing further exploitation.</p>
  ",MS16-153: Security Update for Common Log File System Driver (3207328),Moderate,364.034912109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0125: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2019-1438: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0584: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the IOleCvt interface renders ASP webpage content. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit the vulnerability through Microsoft browsers and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the browser rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The update addresses the vulnerability by correcting methods exposed when the IOleCvt interface is invoked.
</p>
  ",Microsoft CVE-2019-0845: Windows IOleCvt Interface Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1073: Windows Kernel Information Disclosure Vulnerability,Moderate,212.878204345703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the way that the Windows Code Integrity Module performs hashing.
An attacker who successfully exploited the vulnerability could cause a system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
An attacker could host a specially crafted file in a website or SMB share. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically via an enticement in email or instant message, or by getting them to open an email attachment.
The security update addresses the vulnerability by modifying how the Code Integrity Module performs hashing.
</p>
  ",Microsoft CVE-2018-1040: Windows Code Integrity Module Denial of Service Vulnerability,Severe,147.663726806640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in RPC if the server has Routing and Remote Access enabled. An attacker who successfully exploited this vulnerability could execute code on the target system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to run a specially crafted application against an RPC server which has Routing and Remote Access enabled. Routing and Remote Access is a non-default configuration; systems without it enabled are not vulnerable.
The security update addresses the vulnerability by correcting how the Routing and Remote Access service handles requests.
</p>
  ",Microsoft CVE-2017-11885: Windows RRAS Service Remote Code Execution Vulnerability,Critical,461.0682373046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-11847: Windows Kernel Elevation of Privilege Vulnerability,Critical,533.0087890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Information disclosure vulnerability exists in Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (KASLR) bypass. An attacker who successfully exploited this vulnerability could retrieve the memory address of a kernel object.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2017-8687: Win32k Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Microsoft JET Database Engine.
An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open/import a specially crafted Microsoft JET Database Engine file. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted file to the user, and then convince the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8423: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,459.862274169921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote authenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2018-8450: Windows Search Remote Code Execution Vulnerability,Critical,382.321746826171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Windows Deployment Services TFTP Server handles objects in memory.
An attacker who successfully exploited the vulnerability could execute arbitrary code with elevated permissions on a target system.
To exploit the vulnerability, an attacker could create a specially crafted request, causing Windows to execute arbitrary code with elevated permissions.
The security update addresses the vulnerability by correcting how Windows Deployment Services TFTP Server handles objects in memory.
</p>
  ",Microsoft CVE-2018-8476: Windows Deployment Services TFTP Server Remote Code Execution Vulnerability,Critical,712.15679931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8622: Windows Kernel Information Disclosure Vulnerability,Moderate,253.491928100585938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0720: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows fails to properly handle uninitialized memory when parsing certain, specially crafted PNG image format files. The vulnerability could allow information disclosure if an attacker convinces a user to visit a website that contains specially crafted PNG images. </p>
  ",MS15-024: Vulnerability in PNG Processing Could Allow Information Disclosure (3035132),Severe,449.816192626953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Microsoft Windows, Internet Explorer, and Microsoft Office when files at a medium integrity level become accessible to Internet Explorer running in Enhanced Protection Mode (EPM). </p>
  ",MS15-088: Unsafe Command Line Parameter Passing Could Allow Information Disclosure (3082458),Severe,459.451202392578125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  Malicious input to mod_auth_digest will cause the server to crash, and each instance continues to crash even for subsequently valid requests.</p>
  ",Apache HTTPD: DoS vulnerability in mod_auth_digest (CVE-2016-2161),Severe,168.78704833984375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  Malicious input to mod_auth_digest will cause the server to crash, and each instance continues to crash even for subsequently valid requests.</p>
  ",Apache HTTPD: DoS vulnerability in mod_auth_digest (CVE-2016-2161),Severe,168.78704833984375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The HTTP TRACE method is normally used to return the full HTTP request back to the requesting client for proxy-debugging purposes.  An attacker can create a webpage using XMLHTTP, ActiveX, or XMLDOM to cause a client to issue a TRACE request and capture the client&#39;s cookies.  This effectively results in a Cross-Site Scripting attack.</p>
  ",HTTP TRACE Method Enabled,Severe,689.2169189453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to crash. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-11781: Windows SMB Denial of Service Vulnerability,Critical,286.24249267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0114: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows fails to properly validate input before loading type libraries. An attacker could use this vulnerability to elevate their privilege level.
To exploit this vulnerability an attacker would first need to have access to the local system and have the ability to execute a malicious application.
The update corrects how Windows validates permissions when loading type libraries.
</p>
  ",Microsoft CVE-2017-0214: Windows COM Elevation of Privilege Vulnerability,Severe,432.077911376953125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_crypto.  Review your web server configuration for validation.  Prior to Apache HTTP release 2.4.25, mod_sessioncrypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC. An authentication tag (SipHash MAC) is now added to prevent such attacks.</p>
  ",Apache HTTPD: Padding Oracle in Apache mod_session_crypto (CVE-2016-0736),Severe,515.78594970703125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_crypto.  Review your web server configuration for validation.  Prior to Apache HTTP release 2.4.25, mod_sessioncrypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC. An authentication tag (SipHash MAC) is now added to prevent such attacks.</p>
  ",Apache HTTPD: Padding Oracle in Apache mod_session_crypto (CVE-2016-0736),Severe,515.78594970703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly validates hyperlinks before loading executable libraries.
An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The updates address the vulnerability by correcting how Internet Explorer validates hyperlinks before loading executable libraries.
</p>
  ",Microsoft CVE-2018-8316: Internet Explorer Remote Code Execution Vulnerability,Critical,369.66021728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2018-8494: MS XML Remote Code Execution Vulnerability,Critical,459.862274169921875
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).</p>
  ",OpenSSL Padding Oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey (CVE-2019-1563),Severe,241.793350219726562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2020-0615: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,172.271163940429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user or application runs or installs a specially crafted, signed portable executable (PE) file on an affected system. </p>
  ",MS13-098: Vulnerability in Windows Could Allow Remote Code Execution (2893294),Critical,695.8289794921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Microsoft .NET Framework that could allow an unauthenticated attacker to degrade the performance of a .NET-enabled website and disrupt the availability of applications that use Microsoft .NET Framework. The vulnerability exists when Microsoft .NET Framework attempts to decrypt certain specially crafted XML data. </p>
  ",MS15-048: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (3057134),Critical,681.0059814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory. This vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-093: Security Update for Internet Explorer (3088903),Critical,668.3857421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1096: Win32k Information Disclosure Vulnerability,Moderate,212.878204345703125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  The value placeholder in [Proxy-]Authorization headers of type &#39;Digest&#39; was not initialized or reset before or between successive key=value assignments. by mod_auth_digest. Providing an initial key with no &#39;=&#39; assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault.</p>
  ",Apache HTTPD: Uninitialized memory reflection in mod_auth_digest (CVE-2017-9788),Severe,561.81219482421875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  The value placeholder in [Proxy-]Authorization headers of type &#39;Digest&#39; was not initialized or reset before or between successive key=value assignments. by mod_auth_digest. Providing an initial key with no &#39;=&#39; assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault.</p>
  ",Apache HTTPD: Uninitialized memory reflection in mod_auth_digest (CVE-2017-9788),Severe,561.81219482421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file leading to memory corruption.
    </p>
    
<p>
      An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
      To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
      If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
  ",Microsoft CVE-2017-0290: Malware Protection Engine Remote Code Execution Vulnerability (Security Advisory 4022344),Critical,601.3046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Remote Desktop Protocol (RDP) when an attacker connects to the target system using RDP and sends specially crafted requests. An attacker who successfully exploited this vulnerability could cause the RDP service on the target system to stop responding.
To exploit this vulnerability, an attacker would need to run a specially crafted application against a server which provides Remote Desktop Protocol (RDP) services.
The update addresses the vulnerability by correcting how RDP handles connection requests.
</p>
  ",Microsoft CVE-2018-0976: Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability,Severe,85.4857177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
        Only the most current version of Internet Explorer for a supported Windows operating system receives security updates. 
        It is recommended to upgrade to the latest version.
     </p>
  ",Obsolete Version of Microsoft Internet Explorer,Critical,913.3096923828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows that allows a sandbox escape. An attacker who successfully exploited the vulnerability could use the sandbox escape to elevate privileges on an affected system.
This vulnerability by itself does not allow arbitrary code execution. However, the vulnerability could allow arbitrary code to run if an attacker uses it in combination with another vulnerability, such as a remote code execution vulnerability or another elevation of privilege vulnerability, that can leverage the elevated privileges when code execution is attempted.
The security update addresses the vulnerability by correcting how Windows parses files.
</p>
  ",Microsoft CVE-2018-8468: Windows Elevation of Privilege Vulnerability,Severe,126.964271545410156
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file leading to memory corruption.
      An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
      To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
      If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
  ",Microsoft CVE-2019-1255: Malware Protection Engine Remote Code Execution Vulnerability,Severe,146.921218872070312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1362: Win32k Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1395: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when MSI packages process symbolic links, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0686.</p>
  ",Microsoft CVE-2020-0683: Windows Installer Elevation of Privilege Vulnerability,Severe,260.982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. An attacker who successfully exploited this vulnerability could take complete control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-078: Vulnerability in Microsoft Font Driver Could Allow Remote Code Execution (3079904),Critical,684.16790771484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a legitimate rich text format file (.rtf), text file (.txt), or Word document (.doc) that is located in the same network directory as a specially crafted dynamic link library (DLL) file. An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS11-071: Vulnerability in Windows Components Could Allow Remote Code Execution (2570947),Critical,801.229736328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Shell improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code and take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
In a web-based attack scenario, an attacker could host a website used to attempt to exploit the vulnerability. In addition, compromised websites and websites that accept or host user-provided content could contain specially crafted content that could exploit this vulnerability. An attacker would have no way to force users to visit a specially crafted website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email or instant message that takes them to the attacker&#39;s site.
The security update fixes this vulnerability by correcting how Windows Shell handles objects in memory.
</p>
  ",Microsoft CVE-2017-11819: Windows Shell Remote Code Execution Vulnerability,Critical,452.040771484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by preventing out-of-bound memory access.
</p>
  ",Microsoft CVE-2017-0076: Hyper-V Denial of Service Vulnerability,Moderate,125.266159057617188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0276: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1144: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
17,qradar-7-2-6.vuln.lax.rapid7.com,10.4.22.151,00:50:56:94:aa:8c,2020-06-16 08:02:48.069,1046.80760192871094,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.727813720703125
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.727813720703125
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.727813720703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory via the Microsoft Windows Text Services Framework. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer, and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. In all cases, however, an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by an enticement in an email or instant message, or by getting them to open an attachment sent through email.
The security update addresses the vulnerability by modifying how the Microsoft Windows Text Services Framework handles objects in memory.
</p>
  ",Microsoft CVE-2017-8727: Internet Explorer Memory Corruption Vulnerability,Critical,452.040771484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit the vulnerability, an attacker would have to either log on locally to an affected system, or convince a locally authenticated user to execute a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8486: Win32k Information Disclosure Vulnerability,Moderate,305.8360595703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Shell does not properly validate file copy destinations.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and then convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force a user to visit the website. Instead, an attacker would have to convince a user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by helping to ensure that Windows Shell validates file copy destinations.
</p>
  ",Microsoft CVE-2018-0883: Windows Shell Remote Code Execution Vulnerability,Critical,412.523529052734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.
An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
The attacker could present to the user a removable drive, or remote share, that contains a malicious .LNK file and an associated malicious binary. When the user opens this drive(or remote share) in Windows Explorer, or any other application that parses the .LNK file, the malicious binary will execute code of the attacker&#8217;s choice, on the target system.
The security update addresses the vulnerability by correcting the processing of shortcut LNK references.
</p>
  ",Microsoft CVE-2018-8346: LNK Remote Code Execution Vulnerability,Critical,473.22650146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1228: Windows Kernel Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1240: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Remote Desktop Protocol (RDP) when an attacker connects to the target system using RDP and sends specially crafted requests. An attacker who successfully exploited this vulnerability could cause the RDP service on the target system to stop responding.
To exploit this vulnerability, an attacker would need to run a specially crafted application against a server which provides Remote Desktop Protocol (RDP) services.
The update addresses the vulnerability by correcting how RDP handles connection requests.
</p>
  ",Microsoft CVE-2019-1326: Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability,Critical,256.373870849609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLMv2 protection if a client is also sending LMv2 responses. An attacker who successfully exploited this vulnerability could gain the ability to downgrade NTLM security features.
To exploit this vulnerability, the attacker would need to be able to modify NTLM traffic exchange.
The update addresses the vulnerability by hardening NTLMv2 protection on the server-side.
</p>
  ",Microsoft CVE-2019-1338: Windows NTLM Security Feature Bypass Vulnerability,Severe,98.685028076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information vulnerability exists when Windows Modules Installer Service improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to read the contents of a log file on disk.
To exploit the vulnerability, an attacker would have to log onto an affected system and run a specially crafted application.
The update addresses the vulnerability by changing the way Windows Modules Installer Service discloses file information.
</p>
  ",Microsoft CVE-2019-1418: Windows Modules Installer Service Information Disclosure Vulnerability,Moderate,186.259323120117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in the MHTML protocol handler in Microsoft Windows. The vulnerability could allow information disclosure if a user visited a specially crafted Web site. In a Web-based attack scenario, a Web site could contain a specially crafted link that is used to exploit this vulnerability. An attacker would have to convince users to visit the Web site and open the specially crafted link.</p>
  ",MS11-026: Vulnerability in MHTML Could Allow Information Disclosure (2503658),Severe,228.674179077148438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
        Microsoft is aware of a new publicly disclosed class of vulnerabilities referred to as &#39;speculative execution side-channel attacks&#39; that affect many modern processors and operating systems including Intel, AMD, and ARM. Note: this issue will affect other systems such as Android, Chrome, iOS, MacOS, so we advise customers to seek out guidance from those vendors.

        An attacker who successfully exploited these vulnerabilities may be able to read privileged data across trust boundaries. In shared resource environments (such as exists in some cloud services configurations), these vulnerabilities could allow one virtual machine to improperly access information from another. In non-browsing scenarios on standalone systems, an attacker would need prior access to the system or an ability to run code on the system to leverage these vulnerabilities.

        Microsoft has released updates to help mitigate these vulnerabilities. To get all available protections, firmware (microcode) and software updates are required. This may include microcode from device OEMs and in some cases updates to AV software as well. In some cases, installing these updates will have a performance impact. We have also taken action to secure our cloud services.

        Microsoft has no information to indicate that these vulnerabilities have been used to attack customers at this time. Microsoft continues working closely with industry partners including chip makers, hardware OEMs, and app vendors to protect customers.

        Please review Microsoft Security Advisory ADV180002 for more details.
    </p>
  ",Microsoft CVE-2017-5715: Guidance to mitigate speculative execution side-channel vulnerabilities,Severe,346.502777099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Volume Manager Extension Driver component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how Volume Manager Extension Driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-8668: Volume Manager Extension Driver Information Disclosure Vulnerability,Moderate,332.453094482421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Windows DNS Server if the server is configured to answer version queries. An attacker who successfully exploited this vulnerability could cause the DNS Server service to become nonresponsive.
An attacker could exploit this vulnerability by sending malicious DNS queries, resulting in denial of service.
The update addresses the vulnerability by correcting how Windows DNS Server processes DNS queries.
</p>
  ",Microsoft CVE-2017-0171: Windows DNS Server Denial of Service Vulnerability,Severe,124.001007080078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0761: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1143: Windows Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel handles objects in memory, aka &#39;Windows Kernel Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0669, CVE-2020-0670, CVE-2020-0671, CVE-2020-0672.</p>
  ",Microsoft CVE-2020-0668: Windows Kernel Elevation of Privilege Vulnerability,Severe,230.911361694335938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Windows Deployment Services TFTP Server handles objects in memory.
An attacker who successfully exploited the vulnerability could execute arbitrary code with elevated permissions on a target system.
To exploit the vulnerability, an attacker could create a specially crafted request, causing Windows to execute arbitrary code with elevated permissions.
The security update addresses the vulnerability by correcting how Windows Deployment Services TFTP Server handles objects in memory.
</p>
  ",Microsoft CVE-2019-0603: Windows Deployment Services TFTP Server Remote Code Execution Vulnerability,Critical,290.63104248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Common Controls when it accesses an object in memory that has not been correctly initialized or has been deleted. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited this vulnerability could take complete control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker could exploit the vulnerability by convincing a user to click a specially crafted link, or a link to specially crafted content. The vulnerability is then triggered when the user invokes F12 Developer Tools in Internet Explorer. </p>
  ",MS15-060: Vulnerability in Microsoft Common Controls Could Allow Remote Code Execution (3059317),Critical,677.46661376953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Microsoft Web Distributed Authoring and Versioning (WebDAV) client that is caused when it explicitly allows the use of Secure Socket Layer (SSL) 2.0. An attacker who successfully exploited this vulnerability could decrypt portions of encrypted traffic. </p>
  ",MS15-089: Vulnerability in WebDAV Could Allow Information Disclosure  (3076949),Moderate,399.232086181640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists where a NETLOGON message is able to obtain the session key and sign messages.
To exploit this vulnerability, an attacker could send a specially crafted authentication request. An attacker who successfully exploited this vulnerability could access another machine using the original user privileges.
The issue has been addressed by changing how NTLM validates network authentication messages.
</p>
  ",Microsoft CVE-2019-1019: Microsoft Windows Security Feature Bypass Vulnerability,Severe,214.84954833984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and seventeen privately reported vulnerabilities in Internet Explorer. These vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-012: Cumulative Security Update for Internet Explorer (2925418),Critical,881.19921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by preventing out-of-bound memory access.
</p>
  ",Microsoft CVE-2017-0099: Hyper-V Denial of Service Vulnerability,Moderate,113.407318115234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2017-0163: Hyper-V Remote Code Execution Vulnerability,Severe,472.95623779296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0128: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the JScript and VBScript scripting engines on 64-bit versions of Microsoft Windows. The vulnerability could allow remote code execution if a user visited a specially crafted website. An attacker would have no way to force users to visit the website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes users to the attacker&#39;s website.</p>
  ",MS12-056: Vulnerability in JScript and VBScript Engines Could Allow Remote Code Execution (2706045),Critical,778.64935302734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2018-0844: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,385.55914306640625
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582763671875
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582763671875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582763671875
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582763671875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll) when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code and take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, an attacker would first have to log on to a target system and then run a specially crafted application.
The security update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2018-0788: OpenType Font Driver Elevation of Privilege Vulnerability,Severe,424.465911865234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8207: Windows Kernel Information Disclosure Vulnerability,Moderate,248.759719848632812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8596: Windows GDI Information Disclosure Vulnerability,Severe,290.186309814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1047: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft WordPad parses specially crafted files.
Exploitation of this vulnerability requires that a user open a specially crafted file with an affected version of Microsoft WordPad. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted file to the user and then convincing the user to open the file.
The update addresses the vulnerability by correcting the way that Microsoft WordPad parses specially crafted files, and by enabling API functionality in Windows that Microsoft WordPad will leverage to resolve the identified issue.
</p>
  ",Microsoft CVE-2017-8588: WordPad Remote Code Execution Vulnerability,Critical,473.92596435546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0088: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-0190: Windows GDI Information Disclosure Vulnerability,Moderate,344.999053955078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and one privately reported vulnerability in Microsoft Windows. The more severe of these vulnerabilities could allow remote code execution if a user opens a specially crafted document or visits a malicious webpage that embeds TrueType or OpenType font files. An attacker would have to convince users to visit the website, typically by getting them to click a link in an email message that takes them to the attacker&#39;s website.</p>
  ",MS12-078: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2783534),Critical,852.7821044921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Windows DirectWrite. In an Instant Messenger-based attack scenario, the vulnerability could allow denial of service if an attacker sends a specially crafted sequence of Unicode characters directly to an Instant Messenger client. The target application could become unresponsive when DirectWrite renders the specially crafted sequence of Unicode characters. </p>
  ",MS12-019: Vulnerability in DirectWrite Could Allow Denial of Service (2665364),Severe,171.8677978515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when VBScript improperly discloses the contents of its memory, which could provide an attacker with information to further compromise the user&#8217;s computer or data.
To exploit the vulnerability, an attacker must know the memory address of where the object was created.
The update addresses the vulnerability by changing the way certain functions handle objects in memory.
</p>
  ",Microsoft CVE-2018-0847: Windows Scripting Engine Memory Corruption Vulnerability,Severe,335.693328857421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application or to convince a user to open a specific file on a network share. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-1346: Windows Denial of Service Vulnerability,Severe,138.159042358398438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1358: Jet Database Engine Remote Code Execution Vulnerability,Critical,362.66748046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0599: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1093: DirectWrite Information Disclosure Vulnerability,Moderate,212.878204345703125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.33, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.</p>
  ",Apache HTTPD: Possible out of bound access after failure in reading the HTTP request (CVE-2018-1301),Severe,109.970558166503906
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>A specially crafted request could have crashed the Apache HTTP Server prior to version 2.4.33, due to an out of bound access after a size limit is reached by reading the HTTP header. This vulnerability is considered very hard if not impossible to trigger in non-debug mode (both log and build level), so it is classified as low risk for common server usage.</p>
  ",Apache HTTPD: Possible out of bound access after failure in reading the HTTP request (CVE-2018-1301),Severe,109.970558166503906
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two publicly disclosed vulnerabilities and one privately reported vulnerability in Microsoft .NET Framework. The most severe vulnerability could allow elevation of privilege if a user visits a specially crafted website or a website containing specially crafted web content. In all cases, however, an attacker would have no way to force users to visit such websites. Instead, an attacker would have to convince users to visit the compromised website, typically by getting them to click a link in an email message or in an Instant Messenger message that takes them to the attacker&#39;s website.</p>
  ",MS14-009: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2916607),Critical,813.97601318359375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>Web servers that respond to the OPTIONS HTTP method expose what other methods are supported by the web server, allowing attackers to narrow and intensify their efforts.</p>
  ",HTTP OPTIONS Method Enabled,Moderate,569.89208984375
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>Web servers that respond to the OPTIONS HTTP method expose what other methods are supported by the web server, allowing attackers to narrow and intensify their efforts.</p>
  ",HTTP OPTIONS Method Enabled,Moderate,569.89208984375
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>Web servers that respond to the OPTIONS HTTP method expose what other methods are supported by the web server, allowing attackers to narrow and intensify their efforts.</p>
  ",HTTP OPTIONS Method Enabled,Moderate,569.89208984375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>Web servers that respond to the OPTIONS HTTP method expose what other methods are supported by the web server, allowing attackers to narrow and intensify their efforts.</p>
  ",HTTP OPTIONS Method Enabled,Moderate,569.89208984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1396: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0675, CVE-2020-0676, CVE-2020-0677, CVE-2020-0748, CVE-2020-0755.</p>
  ",Microsoft CVE-2020-0756: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network Connections Service handles objects in memory, aka &#39;Windows Network Connections Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0778, CVE-2020-0802, CVE-2020-0803, CVE-2020-0845.</p>
  ",Microsoft CVE-2020-0804: Windows Network Connections Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if an attacker sends a specially crafted web request to an ASP.NET web application running on an affected system. An attacker could exploit this vulnerability without authentication to run arbitrary code.</p>
  ",MS13-083: Vulnerability in Windows Common Control Library Could Allow Remote Code Execution (2864058),Critical,841.424072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the Windows Bluetooth Stack. The vulnerability could allow remote code execution if an attacker sent a series of specially crafted Bluetooth packets to an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. This vulnerability only affects systems with Bluetooth capability.</p>
  ",MS11-053: Vulnerability in Bluetooth Stack Could Allow Remote Code Execution (2566220),Critical,827.45062255859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk. 
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8538: Microsoft Malware Protection Engine Remote Code Execution Vulnerability,Critical,566.6690673828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by preventing out-of-bound memory access.
</p>
  ",Microsoft CVE-2017-0097: Hyper-V Denial of Service Vulnerability,Moderate,113.407318115234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open or preview a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2017-0250: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,552.4530029296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerability in the Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also be used by Windows .NET Framework applications to bypass Code Access Security (CAS) restrictions. In a web browsing attack scenario, an attacker could host a website that contains a webpage that is used to exploit this vulnerability. In addition, compromised websites and websites that accept or host user-provided content or advertisements could contain specially crafted content that could exploit this vulnerability. In all cases, however, an attacker would have no way to force users to visit these websites. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes users to the attacker&#39;s website.</p>
  ",MS12-038: Vulnerability in .NET Framework Could Allow Remote Code Execution (2706726),Critical,783.1595458984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1149: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-1162: Windows ALPC Elevation of Privilege Vulnerability,Severe,314.917999267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0895: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0808: Win32k Elevation of Privilege Vulnerability,Severe,383.08001708984375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The OpenSSL DSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.1a (Affected 1.1.1). Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.0.2q (Affected 1.0.2-1.0.2p).</p>
  ",OpenSSL Timing vulnerability in DSA signature generation (CVE-2018-0734),Severe,296.978271484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves seventeen privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-065: Cumulative Security Update for Internet Explorer (3003057),Critical,702.78009033203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the ATMFD component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#226;s system. </p>
  ",MS16-132: Security Update for Microsoft Graphics Component (3199120),Critical,601.6043701171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Windows OLE fails to properly validate user input. An attacker could exploit the vulnerability to execute malicious code.</p>
  ",MS16-044: Security Update for Windows OLE (3146706),Critical,634.87677001953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0123: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user browses to a folder that contains a file or subfolder with a specially crafted name. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-081: Vulnerability in Windows File Handling Component Could Allow Remote Code Execution (2758857),Critical,769.48931884765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-0960: Windows Kernel Information Disclosure Vulnerability,Moderate,295.521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1393: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0774, CVE-2020-0874, CVE-2020-0879, CVE-2020-0882.</p>
  ",Microsoft CVE-2020-0880: Windows GDI Information Disclosure Vulnerability,Severe,206.094894409179688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0554: Windows Kernel Information Disclosure Vulnerability,Moderate,248.333282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8677: Windows GDI+ Information Disclosure Vulnerability,Moderate,327.4649658203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Color Management Module (ICM32.dll) handles objects in memory. This vulnerability allows an attacker to retrieve information to bypass usermode ASLR (Address Space Layout Randomization) on a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
The security update addresses the vulnerability by correcting how Color Management Module handles objects in memory.
</p>
  ",Microsoft CVE-2018-0741: Microsoft Color Management Information Disclosure Vulnerability,Moderate,281.225799560546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726.</p>
  ",Microsoft CVE-2020-0731: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0724: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations.To exploit the vulnerability, an attacker would require unprivileged execution on the victim system, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0779, CVE-2020-0798, CVE-2020-0814, CVE-2020-0842.</p>
  ",Microsoft CVE-2020-0843: Windows Installer Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2019-0662: GDI+ Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0893: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in rpcss.dll when the RPC service Activation Kernel improperly handles an RPC request.
To exploit this vulnerability, a low level authenticated attacker could run a specially crafted application.
The security update addresses this vulnerability by correcting how rpcss.dll handles these requests.
</p>
  ",Microsoft CVE-2019-1089: Windows RPCSS Elevation of Privilege Vulnerability,Severe,325.969757080078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1015: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.890167236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2017-8552: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,522.67578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0111: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in Windows when a DCOM object in Helppane.exe, configured to run as the interactive user, fails to properly authenticate the client. An attacker who successfully exploited the vulnerability could run arbitrary code in another user&#39;s session.
To exploit the vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability after another user logged on to the same system via Terminal Services or Fast User Switching.
The update addresses the vulnerability by correcting how Helppane.exe authenticates the client.
</p>
  ",Microsoft CVE-2017-0100: Windows COM Session Elevation of Privilege Vulnerability,Severe,443.110321044921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists within the open-source libjpeg image-processing library where it fails to properly handle objects in memory, allowing an attacker to retrieve information that could lead to an Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited this vulnerability could cause information to be disclosed that could allow for bypassing the ASLR security feature that protects users from a broad class of vulnerabilities.
The security feature bypass itself does not allow arbitrary code execution. However, an attacker could use the ASLR bypass vulnerability in conjunction with another vulnerability, such as a remote code execution vulnerability, that could take advantage of the ASLR bypass to run arbitrary code.
To exploit this vulnerability, an attacker could convince a user to run a specially crafted application. The security update addresses the vulnerability by correcting how libjpeg handles objects in memory.
</p>
  ",Microsoft CVE-2013-6629: libjpeg Information Disclosure Vulnerability,Severe,500.711639404296875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
       The SSL protocol, as used in certain configurations of Microsoft Windows and browsers such as Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera (and other products negotiating SSL connections) encrypts data by using CBC mode with chained initialization vectors. This potentially allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &quot;BEAST&quot; attack. By supporting the affected protocols and ciphers, the server is enabling the clients in to being exploited.
    </p>
  ",TLS/SSL Server is enabling the BEAST attack,Severe,523.61572265625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
       The SSL protocol, as used in certain configurations of Microsoft Windows and browsers such as Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera (and other products negotiating SSL connections) encrypts data by using CBC mode with chained initialization vectors. This potentially allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &quot;BEAST&quot; attack. By supporting the affected protocols and ciphers, the server is enabling the clients in to being exploited.
    </p>
  ",TLS/SSL Server is enabling the BEAST attack,Severe,523.61572265625
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
       The SSL protocol, as used in certain configurations of Microsoft Windows and browsers such as Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera (and other products negotiating SSL connections) encrypts data by using CBC mode with chained initialization vectors. This potentially allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &quot;BEAST&quot; attack. By supporting the affected protocols and ciphers, the server is enabling the clients in to being exploited.
    </p>
  ",TLS/SSL Server is enabling the BEAST attack,Severe,523.61572265625
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
       The SSL protocol, as used in certain configurations of Microsoft Windows and browsers such as Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera (and other products negotiating SSL connections) encrypts data by using CBC mode with chained initialization vectors. This potentially allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &quot;BEAST&quot; attack. By supporting the affected protocols and ciphers, the server is enabling the clients in to being exploited.
    </p>
  ",TLS/SSL Server is enabling the BEAST attack,Severe,523.61572265625
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
       The SSL protocol, as used in certain configurations of Microsoft Windows and browsers such as Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera (and other products negotiating SSL connections) encrypts data by using CBC mode with chained initialization vectors. This potentially allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a &quot;BEAST&quot; attack. By supporting the affected protocols and ciphers, the server is enabling the clients in to being exploited.
    </p>
  ",TLS/SSL Server is enabling the BEAST attack,Severe,523.61572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0897: Windows Kernel Information Disclosure Vulnerability,Moderate,287.498443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8442: Windows Kernel Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory, aka &#39;Windows Graphics Component Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0715, CVE-2020-0792.</p>
  ",Microsoft CVE-2020-0745: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0844: Windows Kernel Information Disclosure Vulnerability,Moderate,231.031356811523438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1012: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.890167236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in Internet Explorer that allows for bypassing Mixed Content warnings. This could allow for the loading of unsecure content (HTTP) from secure locations (HTTPS).
In a web-based attack scenario, an attacker could host a malicious website that is designed to exploit the security feature bypass. Alternatively, in an email or instant message attack scenario, the attacker could send the targeted user a specially crafted .url file that is designed to exploit the bypass. Additionally, compromised websites or websites that accept or host user-provided content could contain specially crafted content to exploit the security feature bypass. However, in all cases an attacker would have no way to force a user to view attacker-controlled content. Instead, an attacker would have to convince a user to take action. For example, an attacker could entice a user to either click a link that directs the user to the attacker&#39;s site or send a malicious attachment.
The security update addresses the security feature bypass by correcting how Internet Explorer handles mixed content.
</p>
  ",Microsoft CVE-2017-0064: Internet Explorer Security Feature Bypass Vulnerability,Severe,155.001266479492188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"Multiple information disclosure vulnerabilities exist in the way that the Color Management Module (ICM32.dll) handles objects in memory. These vulnerabilities allow an attacker to retrieve information to bypass usermode&#160;ASLR (Address Space Layout Randomization) on a targeted system. By itself, the information disclosures do not allow arbitrary code execution; however, they could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
The security update addresses the vulnerability by correcting how Color Management Module handles objects in memory.",Microsoft CVE-2017-0063: Microsoft Color Management Information Disclosure Vulnerability,Severe,399.540924072265625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>A failure to free memory can occur when processing messages having a specific combination of EDNS options. Versions affected are: BIND 9.10.7 -&gt; 9.10.8-P1, 9.11.3 -&gt; 9.11.5-P1, 9.12.0 -&gt; 9.12.3-P1, and versions 9.10.7-S1 -&gt; 9.11.5-S3 of BIND 9 Supported Preview Edition. Versions 9.13.0 -&gt; 9.13.6 of the 9.13 development branch are also affected.</p>
  ",ISC BIND: A specially crafted packet can cause named to leak memory (CVE-2018-5744),Severe,152.43963623046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when NTFS improperly checks access. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how NTFS checks access.
</p>
  ",Microsoft CVE-2018-8411: NTFS Elevation of Privilege Vulnerability,Severe,431.1929931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8443: Windows Kernel Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Transaction Manager improperly handles objects in memory.  An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application.
The security update addresses the vulnerability by correcting how the Transaction Manager handles objects in memory.
</p>
  ",Microsoft CVE-2019-1219: Windows Transaction Manager Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows attempts to access a specially crafted .msc file to retrieve the icon information, and then fails to properly validate a destination buffer, resulting in a denial of service. An unauthenticated attacker could exploit this vulnerability by convincing a user to open a share containing a specially crafted .msc file. However, the attacker has no means to force a user to visit the share or view the file.</p>
  ",MS15-054: Vulnerability in Microsoft Management Console File Format Could Allow Denial of Service (3051768),Moderate,135.410446166992188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the way the Local Security Authority Subsystem Service (LSASS) handles authentication requests.  An attacker who successfully exploited the vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.  </p>
  ",MS17-004: Security Update for Local Security Authority Subsystem Service (3216771),Critical,294.797760009765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2017-8707: Hyper-V Information Disclosure Vulnerability,Moderate,295.890716552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0090: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user or application runs or installs a specially crafted, signed portable executable (PE) file on an affected system.</p>
  ",MS12-024: Vulnerability in Windows Could Allow Remote Code Execution (2653956),Critical,787.66302490234375
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>networking.c in Redis before 3.2.7 allows &quot;Cross Protocol Scripting&quot; because it lacks a check for POST and Host: strings, which are not valid in the Redis protocol (but commonly occur when an attack triggers an HTTP request to the Redis TCP port).</p>
  ",Redis: Security Features (CVE-2016-10517),Severe,350.863983154296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1406: Jet Database Engine Remote Code Execution Vulnerability,Critical,352.29998779296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Task Scheduler improperly discloses credentials to Windows Credential Manager. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
&#160;
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability.
&#160;
The security update addresses the vulnerability by changing how Task Scheduler handles credentials.
</p>
  ",Microsoft CVE-2019-0838: Windows Information Disclosure Vulnerability,Moderate,231.031356811523438
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      The TLS server uses a Diffie-Hellman group with a prime modulus of less than 2048 bits in length.
      Current estimates are that that an academic team can break a 768-bit prime and that a state-level actor
      can break a 1024-bit prime.
    </p>
  ",Diffie-Hellman group smaller than 2048 bits,Moderate,169.93206787109375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
      The TLS server uses a Diffie-Hellman group with a prime modulus of less than 2048 bits in length.
      Current estimates are that that an academic team can break a 768-bit prime and that a state-level actor
      can break a 1024-bit prime.
    </p>
  ",Diffie-Hellman group smaller than 2048 bits,Moderate,169.93206787109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A spoofing vulnerability exists in Microsoft&#39;s implementation of the Bluetooth stack. An attacker who successfully exploited this vulnerability could perform a man-in-the-middle attack and force a user&#39;s computer to unknowingly route traffic through the attacker&#39;s computer. The attacker can then monitor and read the traffic before sending it on to the intended recipient.
To exploit the vulnerability, the attacker needs to be within the physical proximity of the targeted user, and the user&#39;s computer needs to have Bluetooth enabled. The attacker can then initiate a Bluetooth connection to the target computer without the user&#39;s knowledge.
The security update addresses the vulnerability by correcting how Windows handles Bluetooth requests.
</p>
  ",Microsoft CVE-2017-8628: Microsoft Bluetooth Driver Spoofing Vulnerability,Severe,382.04248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-0299: Windows Kernel Information Disclosure Vulnerability,Moderate,335.5172119140625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>Apache HTTP Server, prior to release 2.4.25 (2.2.32), accepted a broad pattern of unusual whitespace patterns from the user-agent, including bare CR, FF, VTAB in parsing the request line and request header lines, as well as HTAB in parsing the request line. Any bare CR present in request lines was treated as whitespace and remained in the request field member &quot;the_request&quot;, while a bare CR in the request header field name would be honored as whitespace, and a bare CR in the request header field value was retained the input headers array. Implied additional whitespace was accepted in the request line and prior to the &#39;:&#39; delimiter of any request header lines. RFC7230 Section 3.5 calls out some of these whitespace exceptions, and section 3.2.3 eliminated and clarified the role of implied whitespace in the grammer of this specification. Section 3.1.1 requires exactly one single SP between the method and request-target, and between the request-target and HTTP-version, followed immediately by a CRLF sequence. None of these fields permit any (unencoded) CTL character whatsoever. Section 3.2.4 explicitly disallowed any whitespace from the request header field prior to the &#39;:&#39; character, while Section 3.2 disallows all CTL characters in the request header line other than the HTAB character as whitespace. These defects represent a security concern when httpd is participating in any chain of proxies or interacting with back-end application servers, either through mod_proxy or using conventional CGI mechanisms. In each case where one agent accepts such CTL characters and does not treat them as whitespace, there is the possiblity in a proxy chain of generating two responses from a server behind the uncautious proxy agent. In a sequence of two requests, this results in request A to the first proxy being interpreted as requests A + A&#39; by the backend server, and if requests A and B were submitted to the first proxy in a keepalive connection, the proxy may interpret response A&#39; as the response to request B, polluting the cache or potentially serving the A&#39; content to a different downstream user-agent. These defects are addressed with the release of Apache HTTP Server 2.4.25 and coordinated by a new directive; HttpProtocolOptions Strict which is the default behavior of 2.4.25 and later. By toggling from &#39;Strict&#39; behavior to &#39;Unsafe&#39; behavior, some of the restrictions may be relaxed to allow some invalid HTTP/1.1 clients to communicate with the server, but this will reintroduce the possibility of the problems described in this assessment. Note that relaxing the behavior to &#39;Unsafe&#39; will still not permit raw CTLs other than HTAB (where permitted), but will allow other RFC requirements to not be enforced, such as exactly two SP characters in the request line.</p>
  ",Apache HTTPD: Apache HTTP Request Parsing Whitespace Defects (CVE-2016-8743),Severe,210.98382568359375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>Apache HTTP Server, prior to release 2.4.25 (2.2.32), accepted a broad pattern of unusual whitespace patterns from the user-agent, including bare CR, FF, VTAB in parsing the request line and request header lines, as well as HTAB in parsing the request line. Any bare CR present in request lines was treated as whitespace and remained in the request field member &quot;the_request&quot;, while a bare CR in the request header field name would be honored as whitespace, and a bare CR in the request header field value was retained the input headers array. Implied additional whitespace was accepted in the request line and prior to the &#39;:&#39; delimiter of any request header lines. RFC7230 Section 3.5 calls out some of these whitespace exceptions, and section 3.2.3 eliminated and clarified the role of implied whitespace in the grammer of this specification. Section 3.1.1 requires exactly one single SP between the method and request-target, and between the request-target and HTTP-version, followed immediately by a CRLF sequence. None of these fields permit any (unencoded) CTL character whatsoever. Section 3.2.4 explicitly disallowed any whitespace from the request header field prior to the &#39;:&#39; character, while Section 3.2 disallows all CTL characters in the request header line other than the HTAB character as whitespace. These defects represent a security concern when httpd is participating in any chain of proxies or interacting with back-end application servers, either through mod_proxy or using conventional CGI mechanisms. In each case where one agent accepts such CTL characters and does not treat them as whitespace, there is the possiblity in a proxy chain of generating two responses from a server behind the uncautious proxy agent. In a sequence of two requests, this results in request A to the first proxy being interpreted as requests A + A&#39; by the backend server, and if requests A and B were submitted to the first proxy in a keepalive connection, the proxy may interpret response A&#39; as the response to request B, polluting the cache or potentially serving the A&#39; content to a different downstream user-agent. These defects are addressed with the release of Apache HTTP Server 2.4.25 and coordinated by a new directive; HttpProtocolOptions Strict which is the default behavior of 2.4.25 and later. By toggling from &#39;Strict&#39; behavior to &#39;Unsafe&#39; behavior, some of the restrictions may be relaxed to allow some invalid HTTP/1.1 clients to communicate with the server, but this will reintroduce the possibility of the problems described in this assessment. Note that relaxing the behavior to &#39;Unsafe&#39; will still not permit raw CTLs other than HTAB (where permitted), but will allow other RFC requirements to not be enforced, such as exactly two SP characters in the request line.</p>
  ",Apache HTTPD: Apache HTTP Request Parsing Whitespace Defects (CVE-2016-8743),Severe,210.98382568359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"A remote code execution vulnerability exists in Remote Desktop Services &#8211; formerly known as Terminal Services &#8211; when an unauthenticated attacker connects to the target system using RDP and sends specially crafted requests. This vulnerability is pre-authentication and requires no user interaction. An attacker who successfully exploited this vulnerability could execute arbitrary code on the target system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. To exploit this vulnerability, an attacker would need to send a specially crafted request to the target systems Remote Desktop Service via RDP. The update addresses the vulnerability by correcting how Remote Desktop Services handles connection requests.",Microsoft CVE-2019-1182: Remote Desktop Services Remote Code Execution Vulnerability,Critical,680.13897705078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows Media Player when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a specifically crafted file.
The update addresses the vulnerability by correcting how Windows Media Player handles objects in memory.
</p>
  ",Microsoft CVE-2019-1480: Windows Media Player Information Disclosure Vulnerability,Severe,224.566131591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0628: Win32k Information Disclosure Vulnerability,Moderate,241.77685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could take control of an affected system.
To exploit the vulnerability, an authenticated attacker could connect via the Windows Remote Registry Service, causing Windows to execute arbitrary code.
The security update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-0856: Windows Remote Code Execution Vulnerability,Critical,339.046844482421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in the Microsoft Windows Ancillary Function Driver (AFD). The vulnerability could allow elevation of privilege if an attacker logs on to a user&#39;s system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the vulnerability.</p>
  ",MS11-046: Vulnerability in Ancillary Function Driver Could Allow Elevation of Privilege (2503665),Severe,823.49871826171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-0058: Win32k Information Disclosure Vulnerability,Moderate,345.50628662109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-0062: Windows GDI Information Disclosure Vulnerability,Moderate,349.82391357421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Windows improperly handles NetBIOS packets. An attacker who successfully exploited this vulnerability could cause a target computer to become completely unresponsive.
A remote unauthenticated attacker could exploit this vulnerability by sending a series of TCP packets to a target system, resulting in a permanent denial of service condition.
The update addresses the vulnerability by correcting how the Windows network stack handles NetBIOS traffic.
</p>
  ",Microsoft CVE-2017-0174: Windows NetBIOS Denial of Service Vulnerability,Severe,237.8682861328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2017-0109: Hyper-V Remote Code Execution Vulnerability,Severe,520.96490478515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2018-0817: Windows GDI Elevation of Privilege Vulnerability,Severe,406.1339111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8424: Windows GDI Information Disclosure Vulnerability,Severe,304.714263916015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1439: Windows GDI Information Disclosure Vulnerability,Severe,230.073455810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2020-0639: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,172.271163940429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,730.192138671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft Office Access Connectivity Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Microsoft Office Access Connectivity Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0673: Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0581: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0909: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting the manner in which the Microsoft Malware Protection Engine scans specially crafted files.
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-11937: Malware Protection Engine Remote Code Execution Vulnerability,Critical,528.50384521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2017-11762: Microsoft Graphics Remote Code Execution Vulnerability,Severe,446.7508544921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
Note that where the severity is indicated as Critical in the Affected Products table, the Preview Pane is an attack vector for this vulnerability.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-8676: Windows GDI+ Information Disclosure Vulnerability,Moderate,327.4649658203125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>All known variants of Windows since Windows XP include a &quot;ForceGuest&quot; 
      operating mode whereby the CIFS service allows unauthenticated users to connect 
      to the service with limited access.</p>
   
<p>The &quot;ForceGuest&quot; mode is enabled by default on some installations
      which aren&#39;t joined to a domain and have Simple File Sharing enabled.</p>
   
<p>This operating mode accepts any set of login credentials, but forces
      the logged on user to operate under the access restrictions of a guest
      user on the system.</p>
  ",Invalid CIFS Logins Permitted,Critical,748.046142578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a specially crafted media file that is hosted on a website or sent as an email attachment. An attacker who successfully exploited the vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-013: Vulnerability in C Run-Time Library Could Allow Remote Code Execution (2654428),Critical,791.4134521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Remote Assistance incorrectly processes XML External Entities (XXE).
An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this condition, an attacker would need to send a specially crafted Remote Assistance invitation file to a user. A attacker could then steal text files from known locations on the victim&#39;s machine, under the context of the user, or alternatively, steal text information from URLs accessible to the victim. The stolen information could be submitted as part of the URL in HTTP request(s) to the attacker.
In all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action.
Note that the information disclosure vulnerability by itself would not be sufficient for an attacker to compromise a system. However, an attacker could combine this vulnerability with additional vulnerabilities to further exploit the system.
The update addresses the vulnerability by correcting how Windows Remote Assistance processes XML External Entities (XXE).
</p>
  ",Microsoft CVE-2018-0878: Windows Remote Assistance Information Disclosure Vulnerability,Moderate,291.393646240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2018-8167: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,323.23858642578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Win32k.sys.
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to Win32k.
</p>
  ",Microsoft CVE-2018-8589: Windows Win32k Elevation of Privilege Vulnerability,Severe,395.94281005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,149.756134033203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,287.40606689453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Task Scheduler due to a known invalid task being present on certain systems. An attacker who successfully exploited the vulnerability could cause Task Scheduler to run a specially crafted application in the context of the System account. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-037: Vulnerability in Windows Task Scheduler Could Allow Elevation of Privilege (3046269),Severe,656.74810791015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed and twenty-five privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-051: Cumulative Security Update for Internet Explorer (2976627),Critical,712.90753173828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who
successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability.

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.


The security update addresses the vulnerabilities by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2017-8682: Win32k Graphics Remote Code Execution Vulnerability,Critical,575.6861572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2018-8339: Windows Installer Elevation of Privilege Vulnerability,Severe,362.7296142578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1285: Win32k Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1466: Windows GDI Information Disclosure Vulnerability,Severe,224.566131591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory, aka &#39;Windows Search Indexer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0667, CVE-2020-0735, CVE-2020-0752.</p>
  ",Microsoft CVE-2020-0666: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Telephony Service improperly discloses the contents of its memory, aka &#39;Windows Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0698: Windows Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,759.81427001953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2017-11763: Microsoft Graphics Remote Code Execution Vulnerability,Severe,446.7508544921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two publicly disclosed vulnerabilities and fifty-eight privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-035: Cumulative Security Update for Internet Explorer (2969262),Critical,847.42266845703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege if an attacker logs onto a system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit this vulnerability.</p>
  ",MS14-040: Vulnerability in Ancillary Function Driver (AFD) Could Allow Elevation of Privilege (2975684),Severe,730.12884521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-0830: Windows Kernel Information Disclosure Vulnerability,Moderate,270.14111328125
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",SSH Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",SSH Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",SSH Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",SSH Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,767.26715087890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that ActiveX Data Objects (ADO) handle objects in memory. An attacker who successfully exploited the vulnerability could execute arbitrary code with the victim user&#8217;s privileges.
An attacker could craft a website that exploits the vulnerability and then convince a victim user to visit the website.
The security update addresses the vulnerability by modifying how ActiveX Data Objects handle objects in memory.
</p>
  ",Microsoft CVE-2019-0888: ActiveX Data Objects (ADO) Remote Code Execution Vulnerability,Critical,396.518402099609375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session.  Review your web server configuration for validation.  When mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a &quot;Session&quot; header. This comes from the &quot;HTTP_SESSION&quot; variable name used by mod_session to forward its data to CGIs, since the prefix &quot;HTTP_&quot; is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications. The severity is set to Moderate because &quot;SessionEnv on&quot; is not a default nor common configuration, it should be considered more severe when this is the case though, because of the possible remote exploitation.</p>
  ",Apache HTTPD: Tampering of mod_session data for CGI applications (CVE-2018-1283),Severe,107.985885620117188
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session.  Review your web server configuration for validation.  When mod_session is configured to forward its session data to CGI applications (SessionEnv on, not the default), a remote user may influence their content by using a &quot;Session&quot; header. This comes from the &quot;HTTP_SESSION&quot; variable name used by mod_session to forward its data to CGIs, since the prefix &quot;HTTP_&quot; is also used by the Apache HTTP Server to pass HTTP header fields, per CGI specifications. The severity is set to Moderate because &quot;SessionEnv on&quot; is not a default nor common configuration, it should be considered more severe when this is the case though, because of the possible remote exploitation.</p>
  ",Apache HTTPD: Tampering of mod_session data for CGI applications (CVE-2018-1283),Severe,107.985885620117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Denial Of Service vulnerability exists when Windows Explorer attempts to open a non-existent file. An attacker who successfully exploited this vulnerability could cause a denial of service.
A attacker could exploit this vulnerability by hosting a specially crafted web site and convince a user to browse to the page, containing the reference to the non-existing file, and cause the victim&#39;s system to stop responding. An attacker could not force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action. For example, an attacker could trick a user into clicking a link that takes the user to the attacker&#39;s site
The update addresses the vulnerability by correcting how Windows Explorer handles open attempts for non-existent files.
</p>
  ",Microsoft CVE-2017-8587: Windows Explorer Denial of Service Vulnerability,Severe,121.431556701660156
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0127: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0277: Windows SMB Remote Code Execution Vulnerability,Severe,471.203857421875
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      An obsolete version of the Microsoft SQL database server is running. Note: When the support period ends for a Microsoft SQL Server product, no further patches will be provided even for serious security problems.
   </p>
  ",Microsoft SQL Server Obsolete Version,Critical,913.81317138671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the rpcss.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the rpcss.dll properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1177: Windows Elevation of Privilege Vulnerability,Severe,260.50360107421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft Office Access Connectivity Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Microsoft Office Access Connectivity Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0671: Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Microsoft is aware of a denial of service vulnerability (named &quot;FragmentSmack&quot; CVE-2018-5391) affecting Windows systems. An attacker could send many 8-byte sized IP fragments with random starting offsets, but withhold the last fragment and exploit the worst-case complexity of linked lists in reassembling IP fragments. A system under attack would become unresponsive with 100% CPU utilization but would recover as soon as the attack terminated.
Recommended actions
To protect your system from this vulnerability, Microsoft recommends that you take the following actions:

Register for security notifications mailer to be alerted of content changes to this advisory.  See Microsoft Technical Security Notifications.
Test and apply security updates. See the Affected Products table to download and install the updates.
If you cannot apply the security updates immediately, you can apply the workaround described in FAQ #1.

FAQ
1. What workaround(s) exist for this vulnerability?
The following commands disable packet reassembly. Any out-of-order packets are dropped. There is a potential for packet loss when discarding out-of-order packets. Valid scenarios should not exceed more than 50 out-of-order fragments.
We recommend testing prior to updating production systems.

Netsh int ipv4 set global reassemblylimit=0
Netsh int ipv6 set global reassemblylimit=0


Further netsh guidance can be found at netsh.
2. Is Azure affected?
Azure fabric layer protections mitigate this vulnerability. This is blocked before traffic reaches Azure VMs.
3. What can I do at the perimeter to block this attack?
Review the perimeter device guidance and modify reassembly packet limits similar to the commands listed in FAQ #1.
</p>
  ",Microsoft CVE-2018-5391: Windows Denial of Service Vulnerability,Critical,273.871673583984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist in the way that Microsoft browsers access objects in memory. The vulnerabilities could corrupt memory in a way that could allow an attacker to execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerabilities could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-142: Cumulative Security Update for Internet Explorer (3198467),Critical,568.47930908203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-0038: Windows GDI Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Microsoft Windows NT provides a feature called &quot;Automatic logon&quot;, which allows
      a user to automatically log on to his local workstation without entering
      a password. This feature, while convenient, compromises the physical
      security of the workstation. Furthermore, it stores the autologin
      username and password in plaintext in the Windows registry:</p>
    

<pre>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon</pre>
    

<p>NOTE: In pre-SP4 versions of Windows NT4, the registry ACLs were
      incorrectly set on the relevant registry key, allowing any user to
      read the username and password.</p>
  ",Windows autologin enabled,Severe,883.78485107421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the way that Windows handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
The security update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2018-8116: Microsoft Graphics Component Denial of Service Vulnerability,Moderate,98.5071563720703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Windows Domain Name System (DNS) DNSAPI.dll when it fails to properly handle DNS responses. An attacker who successfully exploited the vulnerability could cause a system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
To exploit the vulnerability, the attacker would use a malicious DNS server to send corrupted DNS responses to the target.
The update addresses the vulnerability by modifying how Windows DNSAPI.dll handles DNS responses.
</p>
  ",Microsoft CVE-2018-8304: Windows DNSAPI Denial of Service Vulnerability,Severe,183.383163452148438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows CSC Service improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows CSC Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0769.</p>
  ",Microsoft CVE-2020-0771: Windows CSC Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      The remote host responded with a UDP packet whose IP ID was zero.
      Normally the IP ID should be set to a unique value and is used in the
      reconstruction of fragmented packets.  Generally this behavior is only
      seen with systems derived from a Linux kernel, which may allow an
      attacker to fingerprint the target&#39;s operating system.
    </p>
  ",UDP IP ID Zero,Moderate,0
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      The remote host responded with a UDP packet whose IP ID was zero.
      Normally the IP ID should be set to a unique value and is used in the
      reconstruction of fragmented packets.  Generally this behavior is only
      seen with systems derived from a Linux kernel, which may allow an
      attacker to fingerprint the target&#39;s operating system.
    </p>
  ",UDP IP ID Zero,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Microsoft IIS Server fails to properly sanitize a specially crafted request. An attacker who successfully exploited this vulnerability could then perform cross-site scripting attacks on affected systems and run script in the security context of the current user. These attacks could allow the attacker to read content that the attacker is not authorized to read, use the victim&#39;s identity to take actions on behalf of the victim, and inject malicious content in the victim&#8217;s browser.
For this vulnerability to be exploited, a user must click a specially crafted URL.
In an email attack scenario, an attacker could exploit the vulnerability by sending an email message containing the specially crafted URL to the user and by convincing the user to click on the specially crafted URL.
In a web-based attack scenario, an attacker would have to host a website that contains a specially crafted URL. In addition, compromised websites and websites that accept or host user-provided content could contain specially crafted content that could exploit this vulnerability. An attacker would have no way to force users to visit a specially crafted website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email or instant message that directs them to the affected website by way of a specially crafted URL.
The security update addresses the vulnerability by correcting how Microsoft IIS Server sanitizes web requests.
</p>
  ",Microsoft CVE-2017-0055: Microsoft IIS Server XSS Elevation of Privilege Vulnerability,Severe,166.475387573242188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0274: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2018-0811: Windows Kernel Information Disclosure Vulnerability,Moderate,299.9879150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8446: Windows Kernel Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations.
To exploit the vulnerability, an attacker would require unprivileged execution on the victim system. After successfully exploiting the vulnerability, an attacker could run arbitrary code with elevated privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the way Windows Installer handles certain filesystem operations.
</p>
  ",Microsoft CVE-2019-1415: Windows Installer Elevation of Privilege Vulnerability,Severe,235.928466796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2019-1433: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0755: Windows Kernel Information Disclosure Vulnerability,Moderate,236.443801879882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-106: Cumulative Security Update for Internet Explorer (3096441),Critical,695.08734130859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass exists when the VBScript engine fails to use the Address Space Layout Randomization (ASLR) security feature, allowing an attacker to more reliably predict the memory offsets of specific instructions in a given call stack. The security feature bypass by itself does not allow arbitrary code execution. However, an attacker could use the ASLR bypass in conjunction with another vulnerability, such as a remote code execution vulnerability, that could take advantage of the ASLR bypass to more reliably run arbitrary code on a target system. </p>
  ",MS15-043: Cumulative Security Update for Internet Explorer (3049563),Critical,681.0059814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves vulnerabilities in Microsoft Windows. The more severe of these vulnerabilities could allow elevation of privilege if an attacker logs on locally and runs arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials and be able to log on locally to exploit this vulnerability. The vulnerability cannot be exploited remotely or by anonymous users.</p>
  ",MS15-051: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Elevation of Privilege (3057191),Severe,693.96832275390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft Windows. The vulnerabilities could allow denial of service if an attacker sends a sequence of specially crafted Internet Control Message Protocol (ICMP) messages to a target system or sends a specially crafted URL request to a server that is serving Web content and has the URL-based Quality of Service (QoS) feature enabled. </p>
  ",MS11-064: Vulnerabilities in TCP/IP Stack Could Allow Denial of Service (2563894),Critical,335.170989990234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2017-8590: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,426.078460693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Kernel properly handles objects in memory.
</p>
  ",Microsoft CVE-2018-0742: Windows Kernel Elevation of Privilege Vulnerability,Severe,385.55914306640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Microsoft .NET Framework that could allow an attacker to access information in multi-tenant environments. The vulnerability is caused when .NET Framework is used in high-load/high-density network connections where content from one stream can blend into another stream.
To exploit the vulnerability, an attacker who can access one tenant in a high-load/high-density environment could potentially trigger multi-tenanted data exposure from one customer to another.
The security update addresses the vulnerability by correcting the way .NET Framework handles high-load/high-density network connections.
</p>
  ",Microsoft CVE-2018-8360: .NET Framework Information Disclosure Vulnerability,Severe,471.40869140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2019-1397: Windows Hyper-V Remote Code Execution Vulnerability,Critical,230.513198852539062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by resolving a number of conditions where Hyper-V would fail to prevent a guest operating system from sending malicious requests.
</p>
  ",Microsoft CVE-2019-1399: Windows Hyper-V Denial of Service Vulnerability,Severe,87.8145599365234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0676, CVE-2020-0677, CVE-2020-0748, CVE-2020-0755, CVE-2020-0756.</p>
  ",Microsoft CVE-2020-0675: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploits this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting the way in which the Windows Graphics Component handles objects in memory, preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2018-1008: Graphics Component Font Parsing Elevation of Privilege Vulnerability,Severe,398.50238037109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine renders when handling objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user.</p>
  ",MS16-001: Cumulative Security Update for Internet Explorer (3124903),Critical,585.29364013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2017-0182: Windows Hyper-V Denial of Service Vulnerability,Severe,184.626907348632812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when ActiveX Installer service may allow access to files without proper authentication. An attacker who successfully exploited the vulnerability could potentially access unauthorized files.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application on the victim system.
The update addresses the vulnerability by validated file permissions before accessing them.
</p>
  ",Microsoft CVE-2019-1382: Microsoft ActiveX Installer Service Elevation of Privilege Vulnerability,Moderate,186.259323120117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network Connections Service handles objects in memory, aka &#39;Windows Network Connections Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0802, CVE-2020-0803, CVE-2020-0804, CVE-2020-0845.</p>
  ",Microsoft CVE-2020-0778: Windows Network Connections Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0859: Win32k Elevation of Privilege Vulnerability,Severe,353.766754150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when Windows fails to properly handle certain symbolic links. An attacker who successfully exploited this vulnerability could potentially set certain items to run at a higher level and thereby elevate permissions.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows handles symbolic links.
</p>
  ",Microsoft CVE-2019-0936: Windows Elevation of Privilege Vulnerability,Severe,343.2332763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the .NET Framework validates the number of objects in memory before copying those objects into an array. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS15-101: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (3089662),Critical,665.595458984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0089: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0120: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-0750: Windows GDI Information Disclosure Vulnerability,Moderate,310.716827392578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1154: Windows Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A tampering vulnerability exists when Microsoft IIS Server improperly handles malformed request headers, aka &#39;Microsoft IIS Server Tampering Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0645: Microsoft IIS Server Tampering Vulnerability,Severe,177.461669921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0615: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      This system enables, but does not require SMB signing.  SMB signing
      allows the recipient of SMB packets to confirm their authenticity and
      helps prevent man in the middle attacks against SMB.   SMB signing can be
      configured in one of three ways: disabled entirely (least secure),
      enabled, and required (most secure).
    </p>
  ",SMB signing not required,Severe,837.05517578125
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      This system enables, but does not require SMB signing.  SMB signing
      allows the recipient of SMB packets to confirm their authenticity and
      helps prevent man in the middle attacks against SMB.   SMB signing can be
      configured in one of three ways: disabled entirely (least secure),
      enabled, and required (most secure).
    </p>
  ",SMB signing not required,Severe,837.05517578125
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
    
<p>
      This system enables, but does not require SMB signing.  SMB signing
      allows the recipient of SMB packets to confirm their authenticity and
      helps prevent man in the middle attacks against SMB.   SMB signing can be
      configured in one of three ways: disabled entirely (least secure),
      enabled, and required (most secure).
    </p>
  ",SMB signing not required,Severe,837.05517578125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      This system enables, but does not require SMB signing.  SMB signing
      allows the recipient of SMB packets to confirm their authenticity and
      helps prevent man in the middle attacks against SMB.   SMB signing can be
      configured in one of three ways: disabled entirely (least secure),
      enabled, and required (most secure).
    </p>
  ",SMB signing not required,Severe,837.05517578125
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      This system enables, but does not require SMB signing.  SMB signing
      allows the recipient of SMB packets to confirm their authenticity and
      helps prevent man in the middle attacks against SMB.   SMB signing can be
      configured in one of three ways: disabled entirely (least secure),
      enabled, and required (most secure).
    </p>
  ",SMB signing not required,Severe,837.05517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2017-11880: Windows Kernel Information Disclosure Vulnerability,Moderate,285.60906982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Shell does not properly validate file copy destinations.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and then convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force a user to visit the website. Instead, an attacker would have to convince a user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by helping to ensure that Windows Shell validates file copy destinations.
</p>
  ",Microsoft CVE-2017-8699: Windows Shell Remote Code Execution Vulnerability,Critical,458.88702392578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple elevation of privilege vulnerabilities exist in Microsoft Windows when a Windows kernel API improperly allows a user to access sensitive registry information. To exploit the vulnerabilities, a locally authenticated attacker would need to run a specially crafted application.</p>
  ",MS16-124: Security Update for Windows Registry (3193227),Severe,417.54583740234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-0175: Windows Kernel Information Disclosure Vulnerability,Moderate,344.999053955078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege if an attacker logs on to a system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit this vulnerability.</p>
  ",MS12-033: Vulnerability in Windows Partition Manager Could Allow Elevation of Privilege (2690533),Severe,769.95440673828125
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      Transport Layer Security (TLS) versions 1.0 (RFC 2246) and 1.1 (RFC 4346) include cipher suites based on the
      3DES (Triple Data Encryption Standard) algorithm.
      Since 3DES only provides an effective security of 112 bits, it is considered close to end of life by some agencies. Consequently, the 3DES algorithm is not included in the specifications for TLS version 1.3.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",TLS/SSL Server Supports 3DES Cipher Suite,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists where a NETLOGON message is able to obtain the session key and sign messages.
To exploit this vulnerability, an attacker could send a specially crafted authentication request. An attacker who successfully exploited this vulnerability could access another machine using the original user privileges.
The issue has been addressed by changing how NTLM validates network authentication messages.
</p>
  ",Microsoft CVE-2019-1384: Microsoft Windows Security Feature Bypass Vulnerability,Severe,222.274459838867188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles hard links, aka &#39;Windows Hard Link Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0840, CVE-2020-0841, CVE-2020-0896.</p>
  ",Microsoft CVE-2020-0849: Windows Hard Link Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,121.694366455078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,894.94451904296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0905: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Remote Desktop Services &#8211; formerly known as Terminal Services &#8211; when an unauthenticated attacker connects to the target system using RDP and sends specially crafted requests. This vulnerability is pre-authentication and requires no user interaction. An attacker who successfully exploited this vulnerability could execute arbitrary code on the target system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to send a specially crafted request to the target systems Remote Desktop Service via RDP.
The update addresses the vulnerability by correcting how Remote Desktop Services handles connection requests.

      This is also known as BlueKeep.
</p>
  ",Microsoft CVE-2019-0708: Remote Desktop Services Remote Code Execution Vulnerability,Critical,698.7655029296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when NTFS improperly checks access. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how NTFS checks access.
</p>
  ",Microsoft CVE-2018-1036: NTFS Elevation of Privilege Vulnerability,Severe,380.913330078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-028: Vulnerability in .NET Framework Could Allow Remote Code Execution (2484015),Critical,810.4608154296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-11853: Windows Kernel Information Disclosure Vulnerability,Severe,348.087371826171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft .NET Framework processes untrusted input. An attacker who successfully exploited this vulnerability in software using the .NET framework could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, an attacker would first need to convince the user to open a malicious document or application.
The security update addresses the vulnerability by correcting how .NET validates untrusted input.
</p>
  ",Microsoft CVE-2017-8759: .NET Framework Remote Code Execution Vulnerability,Critical,575.6861572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2018-0816: Windows GDI Elevation of Privilege Vulnerability,Severe,406.1339111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the way that Windows SNMP Service handles malformed SNMP traps.
An attacker who successfully exploited the vulnerability could cause a target system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
The security update addresses the vulnerability by correcting how Windows SNMP Service processes SNMP traps.
</p>
  ",Microsoft CVE-2018-0967: Windows SNMP Service Denial of Service Vulnerability,Severe,149.600021362304688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in .NET Framework which could allow an attacker to elevate their privilege level.
To exploit the vulnerability, an attacker would first have to access the local machine, and then run a malicious program.
The update addresses the vulnerability by correcting how .NET Framework activates COM objects.
</p>
  ",Microsoft CVE-2018-8202: .NET Framework Elevation of Privilege Vulnerability,Severe,429.57867431640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Text Service Framework (TSF) when the TSF server process does not validate the source of input or commands it receives. An attacker who successfully exploited this vulnerability could inject commands or read input sent through a malicious Input Method Editor (IME). This only affects systems that have installed an IME.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses this vulnerability by correcting how the TSF server and client validate input from each other.
</p>
  ",Microsoft CVE-2019-1235: Windows Text Service Framework Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1286: Windows GDI Information Disclosure Vulnerability,Severe,242.171249389648438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could obtain information that could be useful for further exploitation.
To exploit the vulnerability, a user would have to open a specially crafted file.
The security update addresses the vulnerability by correcting how Microsoft Graphics Components handle objects in memory.
</p>
  ",Microsoft CVE-2019-1361: Microsoft Graphics Components Information Disclosure Vulnerability,Severe,236.84405517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2019-1363: Windows GDI Information Disclosure Vulnerability,Moderate,193.831878662109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1359: Jet Database Engine Remote Code Execution Vulnerability,Critical,362.66748046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Function Discovery Service handles objects in memory, aka &#39;Windows Function Discovery Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0679, CVE-2020-0680.</p>
  ",Microsoft CVE-2020-0682: Windows Function Discovery Service Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited these vulnerabilities could install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-128: Security Update for Microsoft Graphics Component to Address Remote Code Execution (3104503),Critical,653.14031982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in how the Adobe Font Driver manages memory when parsing fonts. A user who visited a specially crafted website or opened a specially crafted file could be affected by this vulnerability. The update addresses this vulnerability by correcting how the font parser allocates memory.</p>
  ",MS15-021: Vulnerabilities in Adobe Font Driver Could Allow Remote Code Execution (3032323),Critical,722.864990234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. An attacker who successfully exploited the vulnerability could execute arbitrary code and take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-097: Vulnerabilities in Microsoft Graphics Component Could Allow Remote Code Execution (3089656),Critical,699.8204345703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1011: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A spoofing vulnerability exists in the Windows implementation of wireless networking. An attacker who successfully exploited this vulnerability could potentially replay broadcast and/or multicast traffic to hosts on a WPA or WPA 2-protected wireless network.
Multiple conditions would need to be met in order for an attacker to exploit the vulnerability &#8211; the attacker would need to be within the physical proximity of the targeted user, and the user&#39;s computer would need to have wireless networking enabled. The attacker would then need to execute a man-in-the-middle (MitM) attack to intercept traffic between the target computer and wireless access point.
The security update addresses the vulnerability by changing how Windows verifies wireless group key handshakes.
</p>
  ",Microsoft CVE-2017-13080: Windows Wireless WPA Group Key Reinstallation Vulnerability,Moderate,134.38763427734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    Microsoft has released a Microsoft security advisory about this issue for IT professionals. The security advisory contains additional security-related information. To view the security advisory, visit the following Microsoft website: http://www.microsoft.com/technet/security/advisory/2562937.mspx
  ",Microsoft Security Advisory: Update Rollup for ActiveX Kill Bits,Severe,641.021484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      Extended support for all versions of Windows 7 ended on January 14, 2020.
      Unsupported versions of Windows may contain unpatched security flaws. It
      is recommended to upgrade to a supported version.
    </p>
  ",Obsolete version of Microsoft Windows 7,Critical,333.14886474609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2020-0611: Remote Desktop Client Remote Code Execution Vulnerability,Severe,162.977249145507812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0721: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way Windows Error Reporting (WER) handles files. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with administrator privileges.
To exploit the vulnerability, an attacker must first gain unprivileged execution on a victim system.
The security update addresses the vulnerability by correcting the way WER handles files.
</p>
  ",Microsoft CVE-2019-0863: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,343.2332763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Kernel improperly handles key enumeration.  An attacker who successfully exploited the vulnerability could gain elevated privileges on a targeted system.
A locally authenticated attacker could exploit this vulnerability by running a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel properly handles key enumeration.
</p>
  ",Microsoft CVE-2019-0881: Windows Kernel Elevation of Privilege Vulnerability,Severe,343.2332763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow information disclosure if a logged on user visits a specially crafted website that is designed to invoke Microsoft XML Core Services (MSXML) through Internet Explorer. In all cases, however, an attacker would have no way to force users to visit such websites. Instead, an attacker would have to convince users to visit a website, typically by getting them to click a link in an email message or in an Instant Messenger request that takes users to the attacker&#39;s website.</p>
  ",MS14-033: Vulnerability in Microsoft XML Core Services Could Allow Information Disclosure (2966061),Severe,469.968505859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit these vulnerabilities.</p>
  ",MS14-045: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation of Privilege (2984615),Severe,688.52752685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. For all systems except Windows 10, an attacker who successfully exploited the vulnerability could cause a denial of service condition. For systems running Windows 10, an attacker who successfully exploited the vulnerability could potentially cause the application to stop responding instead of the system.</p>
  ",MS16-026: Security Update for Graphic Fonts to Address Remote Code Execution (3143148),Critical,674.06488037109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll)  when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2018-0754: OpenType Font Driver Information Disclosure Vulnerability,Moderate,310.716827392578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>The Credential Security Support Provider protocol (CredSSP) in Microsoft Windows Server 2008 SP2 and R2 SP1, Windows 7 SP1, Windows 8.1 and RT 8.1, Windows Server 2012 and R2, Windows 10 Gold, 1511, 1607, 1703, and 1709 Windows Server 2016 and Windows Server, version 1709 allows a remote code execution vulnerability due to how CredSSP validates request during the authentication process, aka &quot;CredSSP Remote Code Execution Vulnerability&quot;.</p>
  ",Microsoft CVE-2018-0886: CredSSP Remote Code Execution Vulnerability,Critical,446.196533203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8897: Windows Kernel Elevation of Privilege Vulnerability,Severe,544.77655029296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network Connections Service handles objects in memory, aka &#39;Windows Network Connections Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0778, CVE-2020-0803, CVE-2020-0804, CVE-2020-0845.</p>
  ",Microsoft CVE-2020-0802: Windows Network Connections Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2019-0618: GDI+ Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0702: Windows Kernel Information Disclosure Vulnerability,Moderate,236.443801879882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Mount Manager component improperly processes symbolic links. An attacker who successfully exploited this vulnerability could write a malicious binary to disk and execute it.</p>
  ",MS15-085: Vulnerability in Mount Manager Could Allow Elevation of Privilege (3082487),Severe,639.7652587890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2019-1102: GDI+ Remote Code Execution Vulnerability,Critical,388.74371337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application or to convince a user to open a specific file on a network share. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-1025: Windows Denial of Service Vulnerability,Critical,262.073272705078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Hyper-V Network Switch on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how the Windows Hyper-V Network Switch validates guest operating system user input.
</p>
  ",Microsoft CVE-2017-0168: Hyper-V Information Disclosure Vulnerability,Severe,395.629058837890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Windows handles objects in memory. An attacker who successfully exploited the vulnerability could execute arbitrary code with elevated permissions on a target system.
To exploit the vulnerability, an attacker could create a specially crafted document, causing Windows to execute arbitrary code with elevated permissions.
The security update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2018-8136: Windows Remote Code Execution Vulnerability,Critical,495.684173583984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft WordPad improperly handles embedded OLE objects. An attacker who successfully exploited the vulnerability could bypass content blocking.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability, and then convince a user to open the document file.
The security update addresses the vulnerability by correcting how Microsoft WordPad handles input.
</p>
  ",Microsoft CVE-2018-8307: WordPad Security Feature Bypass Vulnerability,Severe,398.203399658203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows fails a check, allowing a sandbox escape. An attacker who successfully exploited the vulnerability could use the sandbox escape to elevate privileges on an affected system.
This vulnerability by itself does not allow arbitrary code execution. However, the vulnerability could allow arbitrary code to run if an attacker uses it in combination with another vulnerability, such as a remote code execution vulnerability or another elevation of privilege vulnerability, that can leverage the elevated privileges when code execution is attempted.
The security update addresses the vulnerability by correcting how Windows file picker handles paths.
</p>
  ",Microsoft CVE-2018-8314: Windows Elevation of Privilege Vulnerability,Severe,130.987960815429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how DirectX handles objects in memory.
</p>
  ",Microsoft CVE-2018-8486: DirectX Information Disclosure Vulnerability,Moderate,264.8238525390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Remote Procedure Call (RPC) runtime improperly initializes objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application.
The update addresses the vulnerability by correcting how the Remote Procedure Call runtime initializes objects in memory.
</p>
  ",Microsoft CVE-2019-1409: Windows Remote Procedure Call Information Disclosure Vulnerability,Moderate,186.259323120117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1434: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server, aka &#39;Remote Desktop Client Remote Code Execution Vulnerability&#39;. This CVE ID is unique from CVE-2020-0734.</p>
  ",Microsoft CVE-2020-0681: Remote Desktop Client Remote Code Execution Vulnerability,Critical,186.275436401367188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files, aka &#39;Windows Error Reporting Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0753.</p>
  ",Microsoft CVE-2020-0754: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0577: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1013: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1017: Win32k Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in .Net Framework which could allow an attacker to bypass Device Guard. An attacker who successfully exploited this vulnerability could circumvent a User Mode Code Integrity (UMCI) policy on the machine.
To exploit the vulnerability, an attacker would first have to access the local machine, and then run a malicious program.
The update addresses the vulnerability by correcting how .Net Framework instantiates COM objects.
</p>
  ",Microsoft CVE-2018-1039: .NET Framework Device Guard Security Feature Bypass Vulnerability,Severe,368.58551025390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the Windows OpenType Compact Font Format (CFF) driver. The vulnerability could allow remote code execution if a user views content rendered in a specially crafted CFF font. In all cases, an attacker would have no way to force users to view the specially crafted content. Instead, an attacker would have to convince users to visit a Web site, typically by getting them to click a link in an e-mail message or Instant Messenger message that takes users to the attacker&#39;s Web site.</p>
  ",MS11-007: Vulnerability in the OpenType Compact Font Format (CFF) Driver Could Allow Remote Code Execution (2485376),Critical,813.9468994140625
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>ChaCha20-Poly1305 is an AEAD cipher, and requires a unique nonce input for every encryption operation. RFC 7539 specifies that the nonce value (IV) should be 96 bits (12 bytes). OpenSSL allows a variable nonce length and front pads the nonce with 0 bytes if it is less than 12 bytes. However it also incorrectly allows a nonce to be set of up to 16 bytes. In this case only the last 12 bytes are significant and any additional leading bytes are ignored. It is a requirement of using this cipher that nonce values are unique. Messages encrypted using a reused nonce value are susceptible to serious confidentiality and integrity attacks. If an application changes the default nonce length to be longer than 12 bytes and then makes a change to the leading bytes of the nonce expecting the new value to be a new unique nonce then such an application could inadvertently encrypt messages with a reused nonce. Additionally the ignored bytes in a long nonce are not covered by the integrity guarantee of this cipher. Any application that relies on the integrity of these ignored leading bytes of a long nonce may be further affected. Any OpenSSL internal use of this cipher, including in SSL/TLS, is safe because no such use sets such a long nonce value. However user applications that use this cipher directly and set a non-default nonce length to be longer than 12 bytes may be vulnerable. OpenSSL versions 1.1.1 and 1.1.0 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1c (Affected 1.1.1-1.1.1b). Fixed in OpenSSL 1.1.0k (Affected 1.1.0-1.1.0j).</p>
  ",OpenSSL ChaCha20-Poly1305 with long nonces (CVE-2019-1543),Severe,321.966461181640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open or preview a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2017-8718: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,540.06884765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information vulnerability exists when Microsoft XML Core Services (MSXML) improperly handles objects in memory. Successful exploitation of the vulnerability could allow the attacker to test for the presence of files on disk.
To exploit the vulnerability, an attacker could host a specially-crafted website that is designed to invoke MSXML through Internet Explorer. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or a link in an Instant Messenger request that would then take the user to the website.
The update addresses the vulnerability by changing the way MSXML handles objects in memory.
</p>
  ",Microsoft CVE-2017-0022: Microsoft XML Core Services Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0267: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1245: DirectWrite Information Disclosure Vulnerability,Severe,242.171249389648438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1246: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A spoofing vulnerability exists when Transport Layer Security (TLS) accesses non- Extended Master Secret (EMS) sessions. An attacker who successfully exploited this vulnerability may gain access to unauthorized information.
To exploit the vulnerability, an attacker would have to conduct a man-in-the-middle attack.
The update addresses the vulnerability by correcting how TLS client and server establish and resume sessions with non-EMS peers.
</p>
  ",Microsoft CVE-2019-1318: Microsoft Windows Transport Layer Security Spoofing Vulnerability,Severe,236.84405517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface Plus (GDI+) handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI+ handles memory addresses.
</p>
  ",Microsoft CVE-2020-0643: Windows GDI+ Information Disclosure Vulnerability,Moderate,172.271163940429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability that is currently being exploited. The vulnerability exists in the InformationCardSigninHelper Class ActiveX control. The vulnerability could allow remote code execution if a user views a specially crafted webpage with Internet Explorer, instantiating the ActiveX control. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-090: Cumulative Security Update of ActiveX Kill Bits (2900986),Critical,893.1331787109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow information disclosure if an attacker logs on to an affected system as a local user, and runs a specially crafted application on the system that is designed to enable the attacker to obtain information from a higher-privileged account. An attacker must have valid logon credentials and be able to log on locally to exploit this vulnerability.</p>
  ",MS13-093: Vulnerability in Windows Ancillary Function Driver Could Allow Information Disclosure (2875783),Severe,616.86614990234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-1003: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,501.890167236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0144: Windows SMB Remote Code Execution Vulnerability,Critical,918.75
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Remote Procedure Call runtime improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Remote Procedure Call runtime i initializes objects in memory.
</p>
  ",Microsoft CVE-2018-8514: Remote Procedure Call runtime Information Disclosure Vulnerability,Moderate,253.491928100585938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1465: Windows GDI Information Disclosure Vulnerability,Severe,224.566131591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability.

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1468: Win32k Graphics Remote Code Execution Vulnerability,Critical,343.86688232421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could obtain information that could be useful for further exploitation.
To exploit the vulnerability, a user would have to open a specially crafted file.
The security update addresses the vulnerability by correcting how Microsoft Graphics Components handle objects in memory.
</p>
  ",Microsoft CVE-2020-0607: Microsoft Graphics Components Information Disclosure Vulnerability,Severe,217.566604614257812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Error Reporting manager improperly handles hard links, aka &#39;Windows Error Reporting Manager Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0678: Windows Error Reporting Manager Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0904: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1015: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a legitimate file (such as an .eml or .wcinv file) that is located in the same network directory as a specially crafted dynamic link library (DLL) file. Then, while opening the legitimate file, Windows Mail or Windows Meeting Space could attempt to load the DLL file and execute any code it contained. For an attack to be successful, a user must visit an untrusted remote file system location or WebDAV share and open a legitimate file (such as an .eml or .wcinv file) from this location that is then loaded by a vulnerable application.</p>
  ",MS11-085: Vulnerability in Windows Mail and Windows Meeting Space Could Allow Remote Code Execution (2620704),Critical,797.83221435546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft .NET Framework fails to properly validate input before loading libraries. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, an attacker would first need to access the local system with the ability to execute a malicious application.
The security update addresses the vulnerability by correcting how .NET validates input on library load.
</p>
  ",Microsoft CVE-2017-0160: .NET Framework Remote Code Execution Vulnerability,Severe,569.5166015625
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
    
<p>
      This system does not allow SMB signing.  SMB signing allows the recipient
      of SMB packets to confirm their authenticity and helps prevent man in the
      middle attacks against SMB.  SMB signing can be configured in one of
      three ways: disabled entirely (least secure), enabled, and required (most
      secure).
    </p>
  ",SMB signing disabled,Severe,841.6998291015625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      This system does not allow SMB signing.  SMB signing allows the recipient
      of SMB packets to confirm their authenticity and helps prevent man in the
      middle attacks against SMB.  SMB signing can be configured in one of
      three ways: disabled entirely (least secure), enabled, and required (most
      secure).
    </p>
  ",SMB signing disabled,Severe,841.6998291015625
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      This system does not allow SMB signing.  SMB signing allows the recipient
      of SMB packets to confirm their authenticity and helps prevent man in the
      middle attacks against SMB.  SMB signing can be configured in one of
      three ways: disabled entirely (least secure), enabled, and required (most
      secure).
    </p>
  ",SMB signing disabled,Severe,841.6998291015625
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      This system does not allow SMB signing.  SMB signing allows the recipient
      of SMB packets to confirm their authenticity and helps prevent man in the
      middle attacks against SMB.  SMB signing can be configured in one of
      three ways: disabled entirely (least secure), enabled, and required (most
      secure).
    </p>
  ",SMB signing disabled,Severe,841.6998291015625
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      This system does not allow SMB signing.  SMB signing allows the recipient
      of SMB packets to confirm their authenticity and helps prevent man in the
      middle attacks against SMB.  SMB signing can be configured in one of
      three ways: disabled entirely (least secure), enabled, and required (most
      secure).
    </p>
  ",SMB signing disabled,Severe,841.6998291015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft .NET Framework (and .NET Core) components do not completely validate certificates.
An attacker could present a certificate that is marked invalid for a specific use, but the component uses it for that purpose. This action disregards the Enhanced Key Usage taggings.
The security update addresses the vulnerability by helping to ensure that .NET Framework (and .NET Core) components completely validate certificates.
</p>
  ",Microsoft CVE-2018-0786: .NET Security Feature Bypass Vulnerability,Severe,202.218292236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0970: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The HTTP/2 protocol implementation (mod_http2) had an incomplete handling of the LimitRequestFields directive. This allowed an attacker to inject unlimited request headers into the server, leading to eventual memory exhaustion.</p>
  ",Apache HTTPD: HTTP/2 CONTINUATION denial of service (CVE-2016-8740),Severe,172.2017822265625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The HTTP/2 protocol implementation (mod_http2) had an incomplete handling of the LimitRequestFields directive. This allowed an attacker to inject unlimited request headers into the server, leading to eventual memory exhaustion.</p>
  ",Apache HTTPD: HTTP/2 CONTINUATION denial of service (CVE-2016-8740),Severe,172.2017822265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework improperly handles special web requests.
An attacker who successfully exploited this vulnerability could cause a denial of service against an .NET Framework web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework application.
The update addresses the vulnerability by correcting how the .NET Framework web application handles web requests.
</p>
  ",Microsoft CVE-2018-8517: .NET Framework Denial Of Service Vulnerability,Severe,154.3577880859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1247: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1248: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2019-1291: Remote Desktop Client Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft Speech API (SAPI) improperly handles text-to-speech (TTS) input. The vulnerability could corrupt memory in a way that enables an attacker to execute arbitrary code in the context of the current user.
To exploit the vulnerability, an attacker would need to convince a user to open a specially crafted document containing TTS content invoked through a scripting language.
The update address the vulnerability by modifying how the system handles objects in memory.
</p>
  ",Microsoft CVE-2019-0985: Microsoft Speech API Remote Code Execution Vulnerability,Severe,328.00433349609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple elevation of privilege vulnerabilities exist in the way that Windows handles objects in memory. An attacker who successfully exploited the vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS15-115: Security Update for Microsoft Windows to Address Remote Code Execution (3105864),Critical,691.227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0147: Windows SMB Information Disclosure Vulnerability,Severe,600
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8336: Windows Kernel Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2018-8472: Windows GDI Information Disclosure Vulnerability,Moderate,264.8238525390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in hdAudio.sys which may lead to an out of band write.  An attacker who successfully exploited this vulnerability could run processes in an elevated context. An attacker could then install programs; view, change or delete data.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how hdAudio.sys stores the size of the reserved region.
</p>
  ",Microsoft CVE-2019-1271: Windows Media Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Windows improperly handles the loading of dynamic link library (DLL) files. An attacker who successfully exploited the vulnerability could take complete control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS15-069: Vulnerabilities in Windows Could Allow Remote Code Execution (3072631),Severe,612.01031494140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft Windows. The vulnerabilities could allow remote code execution if a user browses to a specially crafted briefcase in Windows Explorer. An attacker who successfully exploited the vulnerabilities could run arbitrary code as the current user. If the current user is logged on with administrative user rights, an attacker could take complete control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-072: Vulnerabilities in Windows Shell Could Allow Remote Code Execution (2727528),Critical,771.75640869140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Microsoft Server Message Block (SMB) Server when an attacker with valid credentials attempts to open a specially crafted file over the SMB protocol on the same machine. An attacker who successfully exploited this vulnerability could bypass certain security checks in the operating system.
To exploit the vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how Windows SMB Server handles such specially crafted files.
</p>
  ",Microsoft CVE-2018-0749: SMB Server Elevation of Privilege Vulnerability,Severe,419.909515380859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0747: Windows Kernel Information Disclosure Vulnerability,Moderate,277.20220947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0631: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files, aka &#39;Windows Error Reporting Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0772.</p>
  ",Microsoft CVE-2020-0806: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,767.26715087890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service when an affected web service processes a specially crafted X.509 certificate.</p>
  ",MS13-095: Vulnerability in Digital Signatures Could Allow Denial of Service (2868626),Severe,182.853302001953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Human Interface Devices (HID) component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the victim&#8217;s system.
To exploit the vulnerability, an attacker would first have to gain execution on the victim system, then run a specially crafted application.
The security update addresses the vulnerability by correcting how the HID component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0601: HID Information Disclosure Vulnerability,Moderate,200.275283813476562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0889: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2019-0704: Windows SMB Information Disclosure Vulnerability,Severe,226.971817016601562
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      Legacy block ciphers having a block size of 64 bits are vulnerable to a practical collision attack when used in CBC
      mode. All versions of the SSL/TLS protocols that support cipher suites which use 3DES as the symmetric encryption
      cipher are affected. The security of a block cipher is often reduced to the key size k: the best attack should
      be the exhaustive search of the key, with complexity 2 to the power of k. However, the block size n is also an
      important security parameter, defining the amount of data that can be encrypted under the same key. This is
      particularly important when using common modes of operation: we require block ciphers to be secure with up to 2 to
      the power of n queries, but most modes of operation (e.g. CBC, CTR, GCM, OCB, etc.) are unsafe with more than 2
      to the power of half n blocks of message (the birthday bound). With a modern block cipher with 128-bit blocks such
      as AES, the birthday bound corresponds to 256 exabytes. However, for a block cipher with 64-bit blocks, the birthday
      bound corresponds to only 32 GB, which is easily reached in practice. Once a collision between two cipher blocks
      occurs it is possible to use the collision to extract the plain text data.
    </p>
  ",TLS/SSL Birthday attacks on 64-bit block ciphers (SWEET32),Severe,521.69281005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8535: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.356521606445312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Active Directory Federation Services (ADFS) honors XML External Entities. An authenticated attacker who successfully exploited this vulnerability would be able to read sensitive information about the target system.
To exploit this condition, an authenticated attacker would need to send a specially crafted request to the ADFS service. Note that the information disclosure vulnerability by itself would not be sufficient for an attacker to compromise a system. However, an attacker could combine this vulnerability with additional vulnerabilities to further exploit the system.
The update addresses the vulnerability by causing ADFS to ignore these malicious entities.
</p>
  ",Microsoft CVE-2017-0043: Microsoft Active Directory Federation Services Information Disclosure,Moderate,375.79852294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Explorer improperly handles executable files and shares during rename operations. An attacker who successfully exploited this vulnerability could run arbitrary code in the context of another user. Users not running as administrators would be less affected.
To exploit this vulnerability, an attacker would first share both a folder and malware named with an executable extension, and then trick the user into thinking that the malware was the folder. The attacker could not force the user to open or browse the share but could use email or instant messages to trick them into doing so.
The update addresses the vulnerability by correcting how Windows Explorer handles executable files and shares during rename operations.
</p>
  ",Microsoft CVE-2017-8463: Windows Explorer Remote Code Execution Vulnerability,Critical,557.82623291015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2019-1333: Remote Desktop Client Remote Code Execution Vulnerability,Critical,362.66748046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles COM object creation. An attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how the Windows COM Server creates COM objects.
</p>
  ",Microsoft CVE-2019-1478: Windows COM Server Elevation of Privilege Vulnerability,Severe,275.777679443359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server, aka &#39;Remote Desktop Client Remote Code Execution Vulnerability&#39;. This CVE ID is unique from CVE-2020-0681.</p>
  ",Microsoft CVE-2020-0734: Remote Desktop Client Remote Code Execution Vulnerability,Critical,324.43072509765625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 Some mod_rewrite configurations vulnerable to open redirect.</p>
  ",Apache HTTPD: mod_rewrite CWE-601 open redirect (CVE-2020-1927),Severe,234.83154296875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 Some mod_rewrite configurations vulnerable to open redirect.</p>
  ",Apache HTTPD: mod_rewrite CWE-601 open redirect (CVE-2020-1927),Severe,234.83154296875
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 Some mod_rewrite configurations vulnerable to open redirect.</p>
  ",Apache HTTPD: mod_rewrite CWE-601 open redirect (CVE-2020-1927),Severe,234.83154296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0690: Windows Hyper-V Denial of Service Vulnerability,Severe,119.616256713867188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a legitimate Excel file (such as a .xlsx file) that is located in the same network directory as a specially crafted library file. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS11-059: Vulnerability in Data Access Components Could Allow Remote Code Execution (2560656),Critical,803.44146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Microsoft Common Console Document (.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to open the file.
The update addresses the vulnerability by modifying the way that the Microsoft Common Console Document (.msc) parses XML input.
</p>
  ",Microsoft CVE-2017-8710: Windows System Information Console Information Disclosure Vulnerability,Severe,356.32574462890625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>In Apache HTTP Server 2.4 releases 2.4.17 to 2.4.38, with MPM event, worker or prefork, code executing in less-privileged child processes or threads (including scripts executed by an in-process scripting interpreter) could execute arbitrary code with the privileges of the parent process (usually root) by manipulating the scoreboard. Non-Unix systems are not affected.</p>
  ",Apache HTTPD: Apache HTTP Server privilege escalation from modules' scripts (CVE-2019-0211),Severe,376.1612548828125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>In Apache HTTP Server 2.4 releases 2.4.17 to 2.4.38, with MPM event, worker or prefork, code executing in less-privileged child processes or threads (including scripts executed by an in-process scripting interpreter) could execute arbitrary code with the privileges of the parent process (usually root) by manipulating the scoreboard. Non-Unix systems are not affected.</p>
  ",Apache HTTPD: Apache HTTP Server privilege escalation from modules' scripts (CVE-2019-0211),Severe,376.1612548828125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
        NULL sessions allow anonymous users to establish unauthenticated CIFS sessions with
        Windows or third-party CIFS implementations such as
        
<a href=""http://www.samba.org"">Samba</a> or
        the 
<a href=""http://www.opensolaris.org/os/project/cifs-server/"">Solaris CIFS Server</a>.
        These anonymous users may be able to enumerate local users, groups,
        servers, shares, domains, domain policies, and may be able to access
        various MSRPC services through RPC function calls.  These services have
        been historically affected by numerous vulnerabilities. The wealth of
        information available to attackers through NULL sessions may also allow
        them to carry out more sophisticated attacks.
     </p>
  ",CIFS NULL Session Permitted,Critical,757.47503662109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft Windows. The vulnerabilities could allow remote code execution if a user opens a specially crafted media file. An attacker who successfully exploited the vulnerabilities could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-004: Vulnerabilities in Windows Media Could Allow Remote Code Execution (2636391),Critical,908.293212890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Error Reporting manager improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by correcting how Windows Error Reporting manager handles hard links.
</p>
  ",Microsoft CVE-2019-1339: Windows Error Reporting Manager Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple elevation of privilege vulnerabilities exist due to the way the Windows kernel handles objects in memory. An attacker who successfully exploited the vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-135: Security Update for Windows Kernel-Mode Drivers to Address Elevation of Privilege (3119075),Severe,659.88775634765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Windows Task Scheduler fails to properly validate and enforce impersonation levels. The vulnerability could allow a user with limited privileges on an affected system to leverage Task Scheduler to execute files that they do not have permissions to run. </p>
  ",MS15-028: Vulnerability in Windows Task Scheduler Could Allow Security Feature Bypass (3030377),Moderate,180.0118408203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-8688: Windows GDI Information Disclosure Vulnerability,Moderate,327.4649658203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2019-1274: Windows Kernel Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-11135: Windows Kernel Information Disclosure Vulnerability,Moderate,186.259323120117188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1099: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Shell fails to validate folder shortcuts. An attacker who successfully exploited the vulnerability could elevate privileges by escaping a sandbox.
To exploit this vulnerability, an attacker would require unprivileged execution on the victim system.
The security update addresses the vulnerability by correctly validating folder shortcuts.
</p>
  ",Microsoft CVE-2019-1053: Windows Shell Elevation of Privilege Vulnerability,Severe,334.665252685546875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>By specially crafting HTTP/2 requests, workers would be allocated 60 seconds longer than necessary, leading to worker exhaustion and a denial of service. This issue only affects servers that have configured and enabled HTTP/2 support, which is not the default</p>
  ",Apache HTTPD: DoS for HTTP/2 connections by crafted requests (CVE-2018-1333),Severe,157.720367431640625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>By specially crafting HTTP/2 requests, workers would be allocated 60 seconds longer than necessary, leading to worker exhaustion and a denial of service. This issue only affects servers that have configured and enabled HTTP/2 support, which is not the default</p>
  ",Apache HTTPD: DoS for HTTP/2 connections by crafted requests (CVE-2018-1333),Severe,157.720367431640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding. The update addresses the vulnerability by correcting how Windows handles objects in memory. On a Hyper-V system additional registry settings must be applied to be protected. Steps are listed on the associated windows support guidance page.",Microsoft CVE-2018-12207: Windows Denial of Service Vulnerability,Severe,108.651275634765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0877: Jet Database Engine Remote Code Execution Vulnerability,Severe,353.766754150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Adobe Type Manager Font Driver (ATMFD) when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS15-077: Vulnerability in ATM Font Driver Could Allow Elevation of Privilege (3077657),Severe,682.1282958984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1101: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-11816: Windows GDI Information Disclosure Vulnerability,Moderate,323.4075927734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2018-8309: Windows Denial of Service Vulnerability,Severe,163.649032592773438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft .NET Framework. The most severe of the vulnerabilities could allow remote code execution if a user visits a website containing a specially crafted OpenType font (OTF) file using a browser capable of instantiating XBAP applications.</p>
  ",MS13-082: Vulnerabilities in .NET Framework Could Allow Remote Code Execution (2878890),Critical,776.01751708984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when NDIS fails to check the length of a buffer prior to copying memory into it. An attacker who successfully exploited this vulnerability could gain elevated privileges on a targeted system.</p>
  ",MS15-117: Security Update for NDIS to Address Elevation of Privilege (3101722),Severe,664.27947998046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Information disclosure vulnerability exists when Windows Search improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. Additionally, in an enterprise scenario, a remote unauthenticated attacker could trigger the vulnerability through an SMB connection.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-11772: Microsoft Search Information Disclosure Vulnerability,Severe,490.701385498046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8577: Win32k Elevation of Privilege Vulnerability,Severe,468.31146240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows when Windows DVD Maker fails to properly parse a specially crafted .msdvd file. An attacker who successfully exploited the vulnerability could obtain information to further compromise a target system.
To exploit the vulnerability, an attacker would have to either log on locally to an affected system or convince a locally authenticated user to execute a specially crafted application.
The security update addresses the vulnerability by correcting how Windows DVD Maker parses files.
</p>
  ",Microsoft CVE-2017-0045: Windows DVD Maker Cross-Site Request Forgery Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by resolving a number of conditions where Hyper-V would fail to prevent a guest operating system from sending malicious requests.
</p>
  ",Microsoft CVE-2017-0184: Hyper-V Denial of Service Vulnerability,Severe,180.173828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Media Player improperly discloses file information. Successful exploitation of the vulnerability could allow an attacker to determine the presence of files on disk.
To exploit the vulnerability, a user would have to open a specially crafted hyperlink.
The update addresses the vulnerability by changing the way Windows Media Player discloses file information.
</p>
  ",Microsoft CVE-2018-8481: Windows Media Player Information Disclosure Vulnerability,Moderate,230.654281616210938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 2.0 (SMBv2) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv2 server.
The security update addresses the vulnerability by correcting how SMBv2 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2019-0630: Windows SMB Remote Code Execution Vulnerability,Critical,355.929595947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0619: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0897: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when Winsock makes a call to a memory address without verifying that the address is valid. An attacker who successfully exploited this vulnerability could gain elevated privileges on a targeted system.</p>
  ",MS15-119: Security Update for Winsock to Address Elevation of Privilege (3104521),Severe,626.03924560546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the OpenType Compact Font Format (CFF) driver. The vulnerability could allow remote code execution if a user views content rendered in a specially crafted CFF font. In all cases, an attacker would have no way to force users to view the specially crafted content. Instead, an attacker would have to convince users to visit a Web site, typically by getting them to click a link in an e-mail message or Instant Messenger message that takes users to the attacker&#39;s Web site.</p>
  ",MS11-032: Vulnerability in the OpenType Compact Font Format (CFF) Driver Could Allow Remote Code Execution (2507618),Critical,810.4608154296875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      The server&#39;s TLS/SSL certificate is signed by a Certification Authority (CA) that is not well-known or trusted.
      This could happen if: the chain/intermediate certificate is missing, expired or has been revoked; the server
      hostname does not match that configured in the certificate; the time/date is incorrect; or a self-signed
      certificate is being used. The use of a self-signed certificate is not recommended since it could indicate
      that a TLS/SSL man-in-the-middle attack is taking place
    </p>
  ",Untrusted TLS/SSL server X.509 certificate,Severe,696.42242431640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploits exploited this vulnerability would gain code execution on the target system. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2017-8691: Express Compressed Fonts Remote Code Execution Vulnerability,Critical,552.4530029296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0112: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>&quot;deny-answer-aliases&quot; is a little-used feature intended to help recursive server operators protect end users against DNS rebinding attacks, a potential method of circumventing the security model used by client browsers. However, a defect in this feature makes it easy, when the feature is in use, to experience an assertion failure in name.c. Affects BIND 9.7.0-&gt;9.8.8, 9.9.0-&gt;9.9.13, 9.10.0-&gt;9.10.8, 9.11.0-&gt;9.11.4, 9.12.0-&gt;9.12.2, 9.13.0-&gt;9.13.2.</p>
  ",ISC BIND: A rarely-used feature in BIND has a flaw which can cause named to exit with an INSIST assertion failure. (CVE-2018-5740),Severe,157.226593017578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8639: Win32k Elevation of Privilege Vulnerability,Severe,388.159515380859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0630: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory, aka &#39;Windows Search Indexer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0666, CVE-2020-0667, CVE-2020-0752.</p>
  ",Microsoft CVE-2020-0735: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0894: Windows Kernel Information Disclosure Vulnerability,Moderate,287.498443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory, aka &#39;Windows Common Log File System Driver Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0657: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0691: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0661: Windows Kernel Information Disclosure Vulnerability,Moderate,241.77685546875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_authnz_ldap.  Review your web server configuration for validation.  mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user&#39;s credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, &#39;en-US&#39; is truncated to &#39;en&#39;). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all.</p>
  ",Apache HTTPD: Out of bound write in mod_authnz_ldap when using too small Accept-Language values (CVE-2017-15710),Severe,160.210189819335938
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_authnz_ldap.  Review your web server configuration for validation.  mod_authnz_ldap, if configured with AuthLDAPCharsetConfig, uses the Accept-Language header value to lookup the right charset encoding when verifying the user&#39;s credentials. If the header value is not present in the charset conversion table, a fallback mechanism is used to truncate it to a two characters value to allow a quick retry (for example, &#39;en-US&#39; is truncated to &#39;en&#39;). A header value of less than two characters forces an out of bound write of one NUL byte to a memory location that is not part of the string. In the worst case, quite unlikely, the process would crash which could be used as a Denial of Service attack. In the more likely case, this memory is already reserved for future use and the issue has no effect at all.</p>
  ",Apache HTTPD: Out of bound write in mod_authnz_ldap when using too small Accept-Language values (CVE-2017-15710),Severe,160.210189819335938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-1004: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,501.890167236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Windows PDF Library improperly handles objects in memory. The vulnerability could corrupt memory in a way that enables an attacker to execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability on Windows 10 systems with Microsoft Edge set as the default browser, an attacker could host a specially crafted website that contains malicious PDF content and then convince users to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted PDF content to such sites. Only Windows 10 systems with Microsoft Edge set as the default browser can be compromised simply by viewing a website. The browsers for all other affected operating systems do not automatically render PDF content, so an attacker would have no way to force users to view attacker-controlled content. Instead, an attacker would have to convince users to open a specially crafted PDF document, typically by way of an enticement in an email or instant message or by way of an email attachment.
The update addresses the vulnerability by modifying how affected systems handle objects in memory.
</p>
  ",Microsoft CVE-2017-0293: Windows PDF Remote Code Execution Vulnerability,Critical,467.303741455078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0969: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0900: Windows Kernel Information Disclosure Vulnerability,Moderate,265.230316162109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2018-8205: Windows Denial of Service Vulnerability,Severe,166.382659912109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0714: Windows Hyper-V Denial of Service Vulnerability,Severe,100.109153747558594
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0712: Windows Hyper-V Denial of Service Vulnerability,Severe,102.363250732421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves ten privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-088: Cumulative Security Update for Internet Explorer (2888505),Critical,794.04925537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-11831: Windows Kernel Information Disclosure Vulnerability,Severe,386.772003173828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0092: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-0060: Windows GDI Information Disclosure Vulnerability,Moderate,349.82391357421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Microsoft Video Control mishandles objects in memory.
An attacker who successfully exploited this vulnerability could run arbitrary code in system mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Microsoft Video Control handles objects in memory.
</p>
  ",Microsoft CVE-2018-0881: Microsoft Video Control Elevation of Privilege Vulnerability,Severe,406.1339111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      mpengine.dll in Microsoft Malware Protection Engine before 1.1.9506.0 on x64 platforms allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via a crafted file.
    </p>
  ",Microsoft CVE-2013-1346: Malware Protection Engine Remote Code Execution Vulnerability (Security Advisory 4022344),Critical,756.85107421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8127: Windows Kernel Information Disclosure Vulnerability,Moderate,290.988555908203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists in the Windows DHCP client when an attacker sends specially crafted DHCP responses to a client. An attacker who successfully exploited the vulnerability could run arbitrary code on the client machine.
To exploit the vulnerability, an attacker could send specially crafted DHCP responses to a client.
The security update addresses the vulnerability by correcting how Windows DHCP clients handle certain DHCP responses.
</p>
  ",Microsoft CVE-2019-0736: Windows DHCP Client Remote Code Execution Vulnerability,Critical,562.61834716796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0602: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0582: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0899: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the ActiveX Data objects (ADO) handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the ActiveX Data objects handles objects in memory.
</p>
  ",Microsoft CVE-2019-0784: Windows ActiveX Remote Code Execution Vulnerability,Critical,305.302154541015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0772: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,421.00726318359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8537: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.356521606445312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files. The vulnerability could allow elevation of privilege if an attacker can successfully exploit it.
An attacker who successfully exploited the vulnerability could gain greater access to sensitive information and system functionality. To exploit the vulnerability, an attacker could run a specially crafted application.
The security update addresses the vulnerability by correcting the way that WER handles and executes files.
</p>
  ",Microsoft CVE-2017-8633: Windows Error Reporting Elevation of Privilege Vulnerability,Critical,456.5069580078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
      A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file leading to memory corruption.
    </p>
    
<p>
      An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
      To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
      If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
  ",Microsoft CVE-2018-0986: Malware Protection Engine Remote Code Execution Vulnerability,Critical,530.3746337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8124: Win32k Elevation of Privilege Vulnerability,Severe,390.7572021484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Network Driver Interface Specification (NDIS) when ndis.sys fails to check the length of a buffer prior to copying memory to it.
To exploit the vulnerability, in a local attack scenario, an attacker could run a specially crafted application to elevate the attacker&#39;s privilege level. An attacker who successfully exploited this vulnerability could run processes in an elevated context. However, an attacker must first gain access to the local system with the ability to execute a malicious application in order to exploit this vulnerability.
The security update addresses the vulnerability by changing how ndis.sys validates buffer length.
</p>
  ",Microsoft CVE-2018-8343: Windows NDIS Elevation of Privilege Vulnerability,Severe,420.458648681640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft .NET Framework components do not correctly validate certificates.
An attacker could present expired certificates when challenged.
The security update addresses the vulnerability by ensuring that .NET Framework components correctly validate certificates.
</p>
  ",Microsoft CVE-2018-8356: .NET Framework Security Feature Bypass Vulnerability,Moderate,116.892158508300781
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks, aka &#39;Windows User Profile Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2019-1454: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,124.172866821289062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,145.70458984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0846: Jet Database Engine Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0890: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker created a specially crafted SMB packet and sent the packet to an affected system. Firewall best practices and standard default firewall configurations can help protect networks from attacks originating outside the enterprise perimeter that would attempt to exploit this vulnerability.</p>
  ",MS11-048: Vulnerability in SMB Server Could Allow Denial of Service (2536275),Critical,331.14129638671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8719: Windows Kernel Information Disclosure Vulnerability,Moderate,295.890716552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Information disclosure vulnerabilities exist when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerabilities could obtain information to further compromise the user&#39;s system. </p>
  ",MS16-055: Security Update for Microsoft Graphics Component  (3156754),Critical,664.46075439453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The security update addresses the vulnerability by modifying how Internet Explorer handles objects in memory.
</p>
  ",Microsoft CVE-2017-0226: Internet Explorer Memory Corruption Vulnerability,Critical,488.47320556640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely. For systems running Windows 10, an attacker who successfully exploited the vulnerability could execute code in an AppContainer sandbox context with limited privileges and capabilities. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
There are multiple ways an attacker could exploit the vulnerability, such as by either convincing a user to open a specially crafted document, or by convincing a user to visit a webpage that contains specially crafted embedded OpenType fonts.
The update addresses the vulnerability by correcting how the Windows Adobe Type Manager Library handles OpenType fonts.
</p>
  ",Microsoft CVE-2019-1419: OpenType Font Parsing Remote Code Execution Vulnerability,Severe,291.426361083984375
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>The SSH server supports cryptographically weak Hash-based message authentication codes (HMACs) including MD5 or 96-bit Hash-based algorithms.</p>
  ",SSH Weak Message Authentication Code Algorithms,Severe,527.71783447265625
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>The SSH server supports cryptographically weak Hash-based message authentication codes (HMACs) including MD5 or 96-bit Hash-based algorithms.</p>
  ",SSH Weak Message Authentication Code Algorithms,Severe,527.71783447265625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,303.333282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Netlogon improperly establishes a secure communications channel to a domain controller. An attacker who successfully exploited the vulnerability could run a specially crafted application on a domain-joined system. To exploit the vulnerability, an attacker would require access to a domain-joined machine that points to a domain controller running either Windows Server 2012 or Windows Server 2012 R2. The update addresses the vulnerability by modifying how Netlogon handles the establishment of secure channels.</p>
  ",MS16-101: Security Update for Windows Authentication Methods (3178465),Severe,618.0784912109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0270: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves five privately reported vulnerabilities in the .NET Framework. The most severe of these vulnerabilities could allow remote code execution if an attacker convinces the user of a target system to use a malicious proxy auto configuration file and then injects code into the currently running application.</p>
  ",MS12-074: Vulnerabilities in .NET Framework Could Allow Remote Code Execution (2745030),Critical,771.6788330078125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_cookie.  Review your web server configuration for validation.  In Apache HTTP Server 2.4 release 2.4.37 and prior, mod_session checks the session expiry time before decoding the session. This causes session expiry time to be ignored for mod_session_cookie sessions since the expiry time is loaded when the session is decoded.</p>
  ",Apache HTTPD: mod_session_cookie does not respect expiry time (CVE-2018-17199),Severe,191.606842041015625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_cookie.  Review your web server configuration for validation.  In Apache HTTP Server 2.4 release 2.4.37 and prior, mod_session checks the session expiry time before decoding the session. This causes session expiry time to be ignored for mod_session_cookie sessions since the expiry time is loaded when the session is decoded.</p>
  ",Apache HTTPD: mod_session_cookie does not respect expiry time (CVE-2018-17199),Severe,191.606842041015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in &quot;Microsoft COM for Windows&quot; when it fails to properly handle serialized objects.
An attacker who successfully exploited the vulnerability could use a specially crafted file or script to perform actions. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file that is designed to exploit the vulnerability. However, an attacker would have no way to force the user to visit the website. Instead, an attacker would have to convince the user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by correcting how &quot;Microsoft COM for Windows&quot; handles serialized objects.
</p>
  ",Microsoft CVE-2018-0824: Microsoft COM for Windows Remote Code Execution Vulnerability,Severe,355.48956298828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in DNS Global Blocklist feature.
An attacker who successfully exploited this vulnerability could redirect traffic to malicious DNS endpoints.
The update addresses the vulnerability by updating DNS Server Role record additions to not bypass the Global Query Blocklist.
</p>
  ",Microsoft CVE-2018-8320: Windows DNS Security Feature Bypass Vulnerability,Severe,256.09130859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2018-8440: Windows ALPC Elevation of Privilege Vulnerability,Severe,456.309326171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2019-1470: Windows Hyper-V Information Disclosure Vulnerability,Severe,169.159774780273438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0626: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0894: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1013: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.890167236328125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>An attacker who is able to send and receive messages to an authoritative DNS server and who has knowledge of a valid TSIG key name for the zone and service being targeted may be able to manipulate BIND into accepting an unauthorized dynamic update. Affects BIND 9.4.0-&gt;9.8.8, 9.9.0-&gt;9.9.10-P1, 9.10.0-&gt;9.10.5-P1, 9.11.0-&gt;9.11.1-P1, 9.9.3-S1-&gt;9.9.10-S2, 9.10.5-S1-&gt;9.10.5-S2.</p>
  ",ISC BIND: An error in TSIG authentication can permit unauthorized dynamic updates (CVE-2017-3143),Severe,152.151611328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows Search improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a remote denial of service against a system.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. Additionally, in an enterprise scenario, a remote unauthenticated attacker could remotely trigger the vulnerability through a Server Message Block (SMB) connection.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-11788: Windows Search Denial of Service Vulnerability,Severe,162.887863159179688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2018-8489: Windows Hyper-V Remote Code Execution Vulnerability,Critical,361.201446533203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Windows handles objects in memory, aka &#39;Windows Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0662: Windows Remote Code Execution Vulnerability,Critical,236.7213134765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations.To exploit the vulnerability, an attacker would require unprivileged execution on the victim system, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0779, CVE-2020-0798, CVE-2020-0842, CVE-2020-0843.</p>
  ",Microsoft CVE-2020-0814: Windows Installer Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft Office Access Connectivity Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Microsoft Office Access Connectivity Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0674: Microsoft Office Access Connectivity Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0625: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if an attacker created a specially crafted SMB packet and sent the packet to an affected system. Firewall best practices and standard default firewall configurations can help protect networks from attacks originating outside the enterprise perimeter that would attempt to exploit these vulnerabilities.</p>
  ",MS11-020: Vulnerability in SMB Server Could Allow Remote Code Execution (2508429),Critical,870.8900146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Elevation of privilege vulnerabilities exist when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited the vulnerabilities could run processes in an elevated context.</p>
  ",MS16-134: Security Update for Common Log File System Driver (3193706),Critical,601.6043701171875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  In Apache HTTP Server 2.4 release 2.4.38 and prior, a race condition in mod_auth_digest when running in a threaded server could allow a user with valid credentials to authenticate using another username, bypassing configured access control restrictions.</p>
  ",Apache HTTPD: mod_auth_digest access control bypass (CVE-2019-0217),Severe,234.622344970703125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  In Apache HTTP Server 2.4 release 2.4.38 and prior, a race condition in mod_auth_digest when running in a threaded server could allow a user with valid credentials to authenticate using another username, bypassing configured access control restrictions.</p>
  ",Apache HTTPD: mod_auth_digest access control bypass (CVE-2019-0217),Severe,234.622344970703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0091: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0119: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      A UPnP SSDP M-SEARCH request can be used to search a network for UPNP
      devices.  An M-SEARCH response is roughly 30x the size of the request and
      can be distributed across multiple responses from multiple hosts, and
      because it utilizes UDP, this can be used to conduct traffic
      amplification attacks against other assets, typically in the form of
      distributed reflected denial of service (DRDoS) attacks.
    </p>
  ",UPnP SSDP Traffic Amplification,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0895: Windows Kernel Information Disclosure Vulnerability,Moderate,287.498443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8341: Windows Kernel Information Disclosure Vulnerability,Moderate,236.884658813476562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8394: Windows GDI Information Disclosure Vulnerability,Severe,309.045867919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"A remote code execution vulnerability exists in Remote Desktop Services &#8211; formerly known as Terminal Services &#8211; when an unauthenticated attacker connects to the target system using RDP and sends specially crafted requests. This vulnerability is pre-authentication and requires no user interaction. An attacker who successfully exploited this vulnerability could execute arbitrary code on the target system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. To exploit this vulnerability, an attacker would need to send a specially crafted request to the target systems Remote Desktop Service via RDP. The update addresses the vulnerability by correcting how Remote Desktop Services handles connection requests.&#160;&#160;",Microsoft CVE-2019-1181: Remote Desktop Services Remote Code Execution Vulnerability,Critical,680.13897705078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Installer because of the way Windows Installer handles certain filesystem operations.To exploit the vulnerability, an attacker would require unprivileged execution on the victim system, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0779, CVE-2020-0798, CVE-2020-0814, CVE-2020-0843.</p>
  ",Microsoft CVE-2020-0842: Windows Installer Elevation of Privilege Vulnerability,Severe,201.958267211914062
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      The prime modulus offered when diffie-hellman-group1-sha1 is used only has a size of 1024 bits. This
      size is considered weak and within theoretical range of the so-called Logjam attack.
    </p>
  ",SSH Server Supports diffie-hellman-group1-sha1,Severe,185.034042358398438
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>
      The prime modulus offered when diffie-hellman-group1-sha1 is used only has a size of 1024 bits. This
      size is considered weak and within theoretical range of the so-called Logjam attack.
    </p>
  ",SSH Server Supports diffie-hellman-group1-sha1,Severe,185.034042358398438
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
      The prime modulus offered when diffie-hellman-group1-sha1 is used only has a size of 1024 bits. This
      size is considered weak and within theoretical range of the so-called Logjam attack.
    </p>
  ",SSH Server Supports diffie-hellman-group1-sha1,Severe,185.034042358398438
17,qradar-7-2-6.vuln.lax.rapid7.com,10.4.22.151,00:50:56:94:aa:8c,2020-06-16 08:02:48.069,1046.80760192871094,"
    
<p>
      The prime modulus offered when diffie-hellman-group1-sha1 is used only has a size of 1024 bits. This
      size is considered weak and within theoretical range of the so-called Logjam attack.
    </p>
  ",SSH Server Supports diffie-hellman-group1-sha1,Severe,185.034042358398438
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      The prime modulus offered when diffie-hellman-group1-sha1 is used only has a size of 1024 bits. This
      size is considered weak and within theoretical range of the so-called Logjam attack.
    </p>
  ",SSH Server Supports diffie-hellman-group1-sha1,Severe,185.034042358398438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0549: Windows Kernel Information Disclosure Vulnerability,Moderate,248.333282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Windows OLE fails to properly validate user input. An attacker could exploit the vulnerability to execute malicious code.
To exploit the vulnerability, an attacker would have to convince a user to open a specially crafted file or a program, causing Windows to execute arbitrary code.
The update addresses the vulnerability by correcting how Windows OLE validates user input.
</p>
  ",Microsoft CVE-2019-0885: Windows OLE Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Text Services improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in the context of the logged-on user.</p>
  ",MS15-020: Vulnerabilities in Microsoft Windows Could Allow Remote Code Execution (3041836),Critical,791.04150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1048: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-1038: Windows Kernel Elevation of Privilege Vulnerability,Severe,485.70068359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0083: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0972: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>Memory Corruption was discovered in the cmsgpack library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2 because of stack-based buffer overflows.</p>
  ",Redis: Improper Restriction of Operations within the Bounds of a Memory Buffer (CVE-2018-11218),Critical,602.02813720703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists when Winlogon does not properly handle file path information. An attacker who successfully exploited this vulnerability could run arbitrary code. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how  Winlogon handles path information.
</p>
  ",Microsoft CVE-2019-1268: Winlogon Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0614: Windows GDI Information Disclosure Vulnerability,Severe,274.943511962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0842: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework improperly handles objects in heap memory. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how .NET Framework handle objects in heap memory.
</p>
  ",Microsoft CVE-2019-0864: .NET Framework Denial of Service Vulnerability,Moderate,74.7174453735351562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Uniscribe improperly parses specially crafted fonts. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-130: Security Update for Microsoft Uniscribe to Address Remote Code Execution (3108670),Critical,653.14031982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows RDP client improperly discloses the contents of its memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to connect remotely to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows RDP client initializes memory.
</p>
  ",Microsoft CVE-2019-1108: Remote Desktop Protocol Client Information Disclosure Vulnerability,Severe,202.792236328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework and Microsoft Silverlight. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs) or Silverlight applications. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-078: Vulnerability in .NET Framework and Microsoft Silverlight Could Allow Remote Code Execution (2604930),Critical,799.60589599609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-8581: Win32k Elevation of Privilege Vulnerability,Severe,363.406951904296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows 
<a href=""https://technet.microsoft.com/library/security/dn848375.aspx#Kerberos"">Kerberos KDC</a> that could allow an attacker to elevate unprivileged domain user account privileges to those of the domain administrator account. An attacker could use these elevated privileges to compromise any computer in the domain, including domain controllers. An attacker must have valid domain credentials to exploit this vulnerability. The affected component is available remotely to users who have standard user accounts with domain credentials; this is not the case for users with local account credentials only. When this security bulletin was issued, Microsoft was aware of limited, targeted attacks that attempt to exploit this vulnerability.</p>
  ",MS14-068: Vulnerability in Kerberos Could Allow Elevation of Privilege (3011780),Critical,708.8275146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Error Reporting manager improperly handles hard links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by correcting how Windows Error Reporting manager handles hard links.
</p>
  ",Microsoft CVE-2019-1315: Windows Error Reporting Manager Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows ActiveX Installer Service improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows ActiveX Installer Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0770, CVE-2020-0860.</p>
  ",Microsoft CVE-2020-0773: Windows ActiveX Installer Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0836: Windows Elevation of Privilege Vulnerability,Severe,309.2406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0879: Jet Database Engine Remote Code Execution Vulnerability,Severe,353.766754150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0896: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2019-0782: Windows Kernel Information Disclosure Vulnerability,Moderate,236.443801879882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if an attacker sends a continuous flow of specially crafted UDP packets to a closed port on a target system.</p>
  ",MS11-083: Vulnerability in TCP/IP Could Allow Remote Code Execution (2588516),Critical,877.62286376953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-11814: Windows Kernel Information Disclosure Vulnerability,Moderate,323.4075927734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote unauthenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-11771: Windows Search Remote Code Execution Vulnerability,Critical,751.386474609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel API enforces permissions. An attacker who successfully exploited the vulnerability could gain access to information that is not intended for the user.</p>
  ",MS16-139: Security Update for Windows Kernel (3199720),Moderate,392.414154052734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2018-0846: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,385.55914306640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2018-8408: Windows Kernel Information Disclosure Vulnerability,Moderate,258.57489013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists in the Windows Server DHCP service when processing specially crafted packets. An attacker who successfully exploited the vulnerability could cause the DHCP server service to stop responding.
To exploit the vulnerability, a remote unauthenticated attacker could send a specially crafted packet to an affected DHCP server.
The security update addresses the vulnerability by correcting how DHCP servers handle network packets.
</p>
  ",Microsoft CVE-2019-1212: Windows DHCP Server Denial of Service Vulnerability,Critical,259.1005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could obtain information that could be useful for further exploitation.
To exploit the vulnerability, a user would have to open a specially crafted file.
The security update addresses the vulnerability by correcting how Microsoft Graphics Components handle objects in memory.
</p>
  ",Microsoft CVE-2019-1283: Microsoft Graphics Components Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory, aka &#39;Windows Graphics Component Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0898.</p>
  ",Microsoft CVE-2020-0791: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0664: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0802: Windows GDI Information Disclosure Vulnerability,Severe,270.104248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. The update addresses the vulnerabilities by modifying the way that Internet Explorer handles objects in memory.</p>
  ",MS15-032: Cumulative Security Update for Internet Explorer (3038314),Critical,684.4935302734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Windows due to the way Windows Uniscribe handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-147: Security Update for Microsoft Uniscribe (3204063),Critical,628.40106201171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft Office and WordPad parse specially crafted files. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
Exploitation of this vulnerability requires that a user open or preview a specially crafted file with an affected version of Microsoft Office or WordPad. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted file to the user and then convincing the user to open the file.
The update addresses the vulnerability by correcting the way that Microsoft Office and WordPad parses specially crafted files, and by enabling API functionality in Windows that Microsoft Office and WordPad will leverage to resolve the identified issue.
</p>
  ",Microsoft CVE-2017-0199: Microsoft Office/WordPad Remote Code Execution Vulnerability w/Windows,Critical,677.56036376953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in the way that Windows handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
The security update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2017-0191: Windows IPSec Denial of Service Vulnerability,Severe,105.501068115234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8595: Windows GDI Information Disclosure Vulnerability,Severe,290.186309814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the iphlpsvc.dll handles file creation allowing for a file overwrite. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the iphlpsvc.dll properly handles this type of functionality.
</p>
  ",Microsoft CVE-2019-1422: Windows Elevation of Privilege Vulnerability,Severe,235.928466796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0874, CVE-2020-0879, CVE-2020-0880, CVE-2020-0882.</p>
  ",Microsoft CVE-2020-0774: Windows GDI Information Disclosure Vulnerability,Severe,206.094894409179688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly handles objects in memory, aka &#39;Windows UPnP Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0781.</p>
  ",Microsoft CVE-2020-0783: Windows UPnP Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,321.400421142578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves seven privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-097: Cumulative Security Update for Internet Explorer (2898785),Critical,818.98614501953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0623: Win32k Elevation of Privilege Vulnerability,Severe,370.2208251953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0595: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-0754: Windows Denial of Service Vulnerability,Severe,137.925567626953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and three privately reported vulnerabilities in Microsoft .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if an unauthenticated attacker sends a specially crafted web request to the target site. An attacker who successfully exploited this vulnerability could take any action in the context of an existing account on the ASP.NET site, including executing arbitrary commands. In order to exploit this vulnerability, an attacker must be able to register an account on the ASP.NET site, and must know an existing user name.</p>
  ",MS11-100: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2638420),Critical,794.53326416015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft .NET Framework processes input. An attacker who successfully exploited this vulnerability could take control of an affected system.
To exploit the vulnerability, an attacker would need to be able to upload a specially crafted file to a web application.
The security update addresses the vulnerability by correcting how .NET Framework processes input.
</p>
  ",Microsoft CVE-2018-8421: .NET Framework Remote Code Execution Vulnerability,Critical,718.9130859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0723: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network Connections Service handles objects in memory, aka &#39;Windows Network Connections Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0778, CVE-2020-0802, CVE-2020-0803, CVE-2020-0804.</p>
  ",Microsoft CVE-2020-0845: Windows Network Connections Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Network Connections Service fails to properly handle objects in memory, aka &#39;Windows Network Connections Service Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0871: Windows Network Connections Service Information Disclosure Vulnerability,Moderate,159.44073486328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the JScript and VBScript scripting engines. The vulnerability could allow information disclosure if a user visited a specially crafted Web site. An attacker would have no way to force users to visit these Web sites. Instead, an attacker would have to convince users to visit the Web site, typically by getting them to click a link in an e-mail message or Instant Messenger message that takes users to the attacker&#39;s Web site.</p>
  ",MS11-009: Vulnerability in JScript and VBScript Scripting Engines Could Allow Information Disclosure (2475792),Severe,531.62933349609375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      This DNS server is susceptible to DNS cache snooping, whereby an attacker
      can make non-recursive queries to a DNS server, looking for records
      potentially already resolved by this DNS server for other clients.
      Depending on the response, an attacker can use this information to
      potentially launch other attacks.
    </p>
  ",DNS server allows cache snooping,Severe,599.48297119140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#39;s system. </p>
  ",MS16-146: Security Update for Microsoft Graphics Component (3204066),Critical,595.69146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0118: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-0220: Windows Kernel Information Disclosure Vulnerability,Moderate,315.4561767578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if an attacker convinces a user to view a specially crafted Office document with embedded content. An attacker who successfully exploits this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-082: Vulnerability in DirectPlay Could Allow Remote Code Execution (2770660),Critical,769.48931884765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0774, CVE-2020-0874, CVE-2020-0879, CVE-2020-0880.</p>
  ",Microsoft CVE-2020-0882: Windows GDI Information Disclosure Vulnerability,Severe,206.094894409179688
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      Since 3DES (Triple Data Encryption Standard) only provides an effective security of 112 bits, it is considered close to end of life by some agencies.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection of at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",SSH Server Supports 3DES Cipher Suite,Moderate,0
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
      Since 3DES (Triple Data Encryption Standard) only provides an effective security of 112 bits, it is considered close to end of life by some agencies.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection of at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",SSH Server Supports 3DES Cipher Suite,Moderate,0
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>
      Since 3DES (Triple Data Encryption Standard) only provides an effective security of 112 bits, it is considered close to end of life by some agencies.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection of at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",SSH Server Supports 3DES Cipher Suite,Moderate,0
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      Since 3DES (Triple Data Encryption Standard) only provides an effective security of 112 bits, it is considered close to end of life by some agencies.
      ECRYPT II (from 2012) recommends for generic application independent long-term protection of at least 128 bits security. The same recommendation has also been reported by BSI Germany (from 2015) and ANSSI France (from 2014), 128 bit is the recommended symmetric size and should be mandatory after 2020. While NIST (from 2012) still considers 3DES being appropriate to use until the end of 2030.
    </p>
  ",SSH Server Supports 3DES Cipher Suite,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Common Object Runtime Library improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET web application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET application.
The update addresses the vulnerability by correcting how the .NET web application handles web requests.
</p>
  ",Microsoft CVE-2019-1083: .NET Denial of Service Vulnerability,Severe,149.008132934570312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1010: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
        The server is configured to support ciphers known as static key ciphers. These ciphers don&#39;t support
        &quot;Forward Secrecy&quot;. In the new specification for HTTP/2, these ciphers have been blacklisted.
    </p>
  ",TLS/SSL Server Supports The Use of Static Key Ciphers,Moderate,418.48394775390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability in DirectShow and one privately reported vulnerability in Windows Media Player and Windows Media Center. The more severe of these vulnerabilities could allow remote code execution if a user opens a specially crafted Microsoft Digital Video Recording (.dvr-ms) file. In all cases, a user cannot be forced to open the file; for an attack to be successful, a user must be convinced to do so.</p>
  ",MS11-015: Vulnerabilities in Windows Media Could Allow Remote Code Execution (2510030),Critical,812.4427490234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when PowerShell improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could execute malicious code on a vulnerable system.
To exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system.
The security update fixes the vulnerability by ensuring PowerShell properly handles files.
</p>
  ",Microsoft CVE-2018-8256: Microsoft PowerShell Remote Code Execution Vulnerability,Critical,451.306854248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows when the Windows bowser.sys kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could potentially disclose contents of System memory.
To exploit this vulnerability, an attacker would have to log on to the system first and then run a specially crafted application in user mode.
The security update addresses the vulnerability by correcting how the bowser.sys kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2018-8271: Windows Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Microsoft RemoteFX Virtual GPU miniport driver handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Microsoft RemoteFX Virtual GPU miniport driver properly handles objects in memory.
</p>
  ",Microsoft CVE-2018-8471: Microsoft RemoteFX Virtual GPU miniport driver Elevation of Privilege Vulnerability,Severe,395.94281005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Executive Summary
Microsoft is aware of the Bluetooth BR/EDR (basic rate/enhanced data rate, known as &quot;Bluetooth Classic&quot;) key negotiation vulnerability that exists at the hardware specification level of any BR/EDR Bluetooth device. An attacker could potentially be able to negotiate the offered key length down to 1 byte of entropy, from a maximum of 16 bytes.
To exploit this vulnerability, an attacker would need specialized hardware and would be limited by the range of the Bluetooth devices in use. Using this specialized equipment, they would need to be close enough to communicate and interfere with the legitimate transmissions being made wirelessly.
CERT/CC has issued CVE-2019-9506 and VU#918987 for this tampering vulnerability, which has a CVSS score of 9.3.
To address the vulnerability Microsoft has released a software update that enforces a default 7-octet minimum key length to ensure that the key negotiation does not trivialize the encryption. This functionality is disabled by default when the update is installed. Customers must enable this functionality by setting a specific flag in the registry. When the flag is set, Windows software will read the encryption key size and reject the Bluetooth connection if it does not meet the defined minimum key size.
If your particular Bluetooth device or the Bluetooth radio in your Windows device, or the driver for that Bluetooth radio does not support the longer key length, this update could block connections with that device when the registry key EnableMinimumEncryptionKeySize is set to a value of 1. Users who have issues connecting their Bluetooth devices after installing and enabling this functionality should check to see if their manufacturer is providing additional guidance on updates and mitigations.
To enable this enforcement feature by using Registry Editor, follow these steps:
Note Using Registry Editor incorrectly can cause serious problems that may require you to reinstall your operating system. Microsoft cannot guarantee that problems resulting from the incorrect use of Registry Editor can be solved. Use Registry Editor at your own risk. For information about how to edit the registry, view the &quot;Changing Keys and Values&quot; Help topic in Registry Editor (Regedit.exe) or view the &quot;Add and Delete Information in the Registry&quot; and &quot;Edit Registry Data&quot; Help topics in Regedt32.exe.

Click Start, click Run, type Regedit in the Open box, and then click OK.
Locate and then click the following registry subkey:
HKLM\System\CurrentControlSet\Policies\Hardware\Bluetooth
On the Edit menu, click Modify to modify the EnableMinimumEncryptionKeySize registry entry.
In the Value data box, type 1, and then click OK. This sets the &quot;EnableMinimumEncryptionKeySize&quot;=dword value to 00000001
Exit Registry Editor.
Restart the computer.

You then need to reset your Bluetooth device as follows:

On the device, go to the Bluetooth Settings.
Turn off Bluetooth.
Open the Device Manager and locate the Bluetooth Controller.
Right-click on the Bluetooth Controller and select Disable device.
After the device is disabled, right-click again and select Enable device.

Computers with incompatible Bluetooth controllers or devices may have to temporarily or permanently set EnableMinimumEncryptionKeySize = 0 until controllers, firmware or drivers can be updated or the device itself updated. Bluetooth connections on computers in this state will not be secure.
To disable this enforcement feature:

Click Start, click Run, type Regedit in the Open box, and then click OK.
Locate and then click the following registry subkey:
HKLM\System\CurrentControlSet\Policies\Hardware\Bluetooth
On the Edit menu, click Modify to modify the EnableMinimumEncryptionKeySize registry entry.
In the Value data box, type 1, and then click OK. This sets the &quot;EnableMinimumEncryptionKeySize&quot;=dword value to 00000000
Exit Registry Editor.
Restart the computer.

You then need to follow the preceeding instructions for resetting your Bluetooth device.
Recommended Actions
The best protection is to keep computers up to date. Please see Microsoft Knowledge Base Article 4514157 for guidance on protecting Windows devices.
If your particular device does not support the longer key length, this update could block connections with that device. Users who have issues connecting their Bluetooth devices after installing and enabling this functionality should check to see if their manufacturer is providing additional guidance on updates and mitigations.
FAQ
1. Why is this enforcement not enabled by default?
A number of devices may not currently be able to support a longer key length and would not function with this fix enabled. Combined with the difficulty to use this attack and the need of specialized equipment and proximity to the target, this was decided to be left disabled initially to avoid any compatibility issues. The choice to enable this functionality would be left up to the user.
2. Where can I find more information about enabling this functionality?
If you determine that you need to enable this functionality to enforce a default 7-octet minimum key length, see Microsoft Knowledge Base Article 4514157.
References

Thank you to ICASI for coordinating multi-vendor response. Also see Statement from the International Consortium for Advancement of Cybersecurity on the Internet (ICASI) on the Bluetooth Vulnerability
CERT/CC VU#918987
See Bluetooth SIG advisory: https://www.bluetooth.com/security/statement-key-negotiation-of-bluetooth

</p>
  ",Microsoft CVE-2019-9506: Encryption Key Negotiation of Bluetooth Vulnerability,Severe,369.456573486328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1150: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0628: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle objects in memory, aka &#39;Windows Common Log File System Driver Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0658: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2017-0096: Hyper-V Information Disclosure Vulnerability,Moderate,340.22198486328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Remote Code Execution vulnerability exists in .NET software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET checks the source markup of a file.
</p>
  ",Microsoft CVE-2018-8260: .NET Framework Remote Code Execution Vulnerability,Severe,398.203399658203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2018-8641: Win32k Elevation of Privilege Vulnerability,Severe,388.159515380859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-1057: MS XML Remote Code Execution Vulnerability,Critical,378.862335205078125
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>Type confusion in the xgroupCommand function in t_stream.c in redis-server in Redis before 5.0 allows remote attackers to cause denial-of-service via an XGROUP command in which the key is not a stream.</p>
  ",Redis: Incorrect Type Conversion or Cast (CVE-2018-12453),Severe,160.9058837890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that ws2ifsl.sys (Winsock) handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated privileges.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring that ws2ifsl.sys properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1215: Windows Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1394: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists in Remote Desktop Protocol (RDP) when an attacker connects to the target system using RDP and sends specially crafted requests. An attacker who successfully exploited this vulnerability could cause the RDP service on the target system to stop responding.
To exploit this vulnerability, an attacker would need to run a specially crafted application against a server which provides Remote Desktop Protocol (RDP) services.
The update addresses the vulnerability by correcting how RDP handles connection requests.
</p>
  ",Microsoft CVE-2019-1453: Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability,Severe,144.690536499023438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows when the Windows Imaging Component fails to properly handle objects in memory, aka &#39;Windows Imaging Component Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0853: Windows Imaging Component Information Disclosure Vulnerability,Severe,206.094894409179688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft software. The vulnerabilities could allow remote code execution if a user views a specially crafted Web page that instantiates a specific ActiveX control with Internet Explorer. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. This update also includes kill bits for three third-party ActiveX controls.</p>
  ",MS11-027: Cumulative Security Update of ActiveX Kill Bits (2508272),Critical,883.29156494140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2017-0180: Hyper-V Remote Code Execution Vulnerability,Severe,472.95623779296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0974: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2019-0720: Hyper-V Remote Code Execution Vulnerability,Critical,262.7864990234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0723: Windows Hyper-V Denial of Service Vulnerability,Severe,100.109153747558594
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1169: Win32k Elevation of Privilege Vulnerability,Severe,314.917999267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows redirected drive buffering system (rdbss.sys) when the operating system improperly handles specific local calls within Windows 7 for 32-bit systems. When this vulnerability is exploited within other versions of Windows it can cause a denial of service, but not an elevation of privilege.
To exploit this vulnerability, a low-level authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by correcting how rdbss.sys handles these local calls.
</p>
  ",Microsoft CVE-2019-1325: Windows Redirected Drive Buffering System Elevation of Privilege Vulnerability,Severe,113.068603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when umpo.dll of the Power Service, improperly handles a Registry Restore Key function. An attacker who successfully exploited this vulnerability could delete a targeted registry key leading to an elevated status.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by correcting how umpo.dll of the Power Service handles Registry Restore Key requests.
</p>
  ",Microsoft CVE-2019-1341: Windows Power Service Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,743.59747314453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A vulnerability exists in Windows Media Center that could allow remote code execution if Windows Media Center opens a specially crafted Media Center link (.mcl) file that references malicious code. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS15-100: Vulnerability in Windows Media Center Could Allow Remote Code Execution (3087918),Critical,770.12646484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-124: Cumulative Security Update for Internet Explorer (3116180),Critical,687.30059814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1071: Windows Kernel Information Disclosure Vulnerability,Moderate,212.878204345703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves an elevation of privilege vulnerability in Microsoft Windows when the Windows USB Mass Storage Class driver fails to properly validate objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-033: Security Update for Windows USB Mass Storage Class Driver to Address Elevation of Privilege (3143142),Severe,607.0657958984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerabilities could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-097: Security Update for Microsoft Graphics Component (3177393),Critical,649.91888427734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2017-0183: Windows Hyper-V Denial of Service Vulnerability,Severe,184.626907348632812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Transaction Manager improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how the Transaction Manager handles objects in memory.
</p>
  ",Microsoft CVE-2017-0101: Windows Transaction Manager Elevation of Privilege Vulnerability,Severe,506.085174560546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Microsoft is aware of active attacks using at least one fraudulent digital certificate issued by DigiNotar, a certification authority present in the Trusted Root Certification Authorities Store. A fraudulent certificate could be used to spoof content, perform phishing attacks, or perform man-in-the-middle attacks against all Web browser users including users of Internet Explorer. While this is not a vulnerability in a Microsoft product, this issue affects all supported releases of Microsoft Windows.</p>
  ",KB2607712: Fraudulent Digital Certificates Could Allow Spoofing,Critical,867.274169921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2020-0642: Win32k Elevation of Privilege Vulnerability,Severe,263.79022216796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when MSI packages process symbolic links, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0798, CVE-2020-0814, CVE-2020-0842, CVE-2020-0843.</p>
  ",Microsoft CVE-2020-0779: Windows Installer Elevation of Privilege Vulnerability,Moderate,66.4336395263671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,783.73834228515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0583: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Client Server Run-Time Subsystem (CSRSS) fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows CSRSS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0735: Windows CSRSS Elevation of Privilege Vulnerability,Severe,373.83526611328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2017-11835: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,318.250823974609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2017-0001: Windows GDI Elevation of Privilege Vulnerability,Severe,575.44146728515625
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      All systems and applications utilizing the Secure Socket Layer (SSL) 3.0 with cipher-block chaining (CBC) mode ciphers may be vulnerable to POODLE (Padding Oracle On Downgraded Legacy Encryption) attacks. The SSL 3.0 vulnerability stems from the way blocks of data are encrypted under a specific type of encryption algorithm within the SSL protocol. The POODLE attack takes advantage of the protocol version negotiation feature built into SSL to force the use of SSL 3.0 and then leverages this new vulnerability to decrypt select content within the SSL session.
    </p>

    
<p>
      The Payment Card Industry (PCI) Data Security Standard requires a minimum of TLS v1.1 and recommends TLS v1.2. In addition, FIPS 140-2 standard also requires a minimum of TLS v1.1 and recommends TLS v1.2.
    </p>
  ",TLS/SSL Server is enabling the POODLE attack,Severe,495.780517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows ActiveX Installer Service improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows ActiveX Installer Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0773, CVE-2020-0860.</p>
  ",Microsoft CVE-2020-0770: Windows ActiveX Installer Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and twenty-four privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-037: Cumulative Security Update for Internet Explorer (2975687),Critical,832.77020263671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0122: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An Elevation of Privilege vulnerability exists in Filter Manager when it improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute elevated code and take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, an attacker would first have to log on to a target system and then delete a specially crafted file.
The security update addresses the vulnerability by correcting how Filter Manager handles objects in memory.
</p>
  ",Microsoft CVE-2018-8333: Microsoft Filter Manager Elevation Of Privilege Vulnerability,Severe,346.05084228515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2018-8282: Win32k Elevation of Privilege Vulnerability,Severe,429.57867431640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2019-0663: Windows Kernel Information Disclosure Vulnerability,Moderate,241.77685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1243: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows CSC Service improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows CSC Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0771.</p>
  ",Microsoft CVE-2020-0769: Windows CSC Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in ASP.NET that is caused when ASP.NET improperly handles certain requests on systems that have custom error messages disabled. An attacker who successfully exploited the vulnerability would be able to view parts of a web configuration file, which could expose sensitive information. </p>
  ",MS15-041: Vulnerability in .NET Framework Could Allow Information Disclosure (3048010),Moderate,411.453582763671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-11780: Windows SMB Remote Code Execution Vulnerability,Severe,446.7508544921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-8564: Windows Kernel Information Disclosure Vulnerability,Moderate,358.88665771484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8685: Windows GDI+ Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8393: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,466.59368896484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1241: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0730: Windows Elevation of Privilege Vulnerability,Severe,309.2406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. The update addresses the vulnerabilities by modifying the way that Internet Explorer handles objects in memory.</p>
  ",MS15-009: Security Update for Internet Explorer (3034682),Critical,732.78033447265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2017-0258: Windows Kernel Information Disclosure Vulnerability,Moderate,341.114166259765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2018-8397: GDI+ Remote Code Execution Vulnerability,Critical,473.22650146484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0908: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way the Windows GDI component handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-120: Security Update for Microsoft Graphics Component (3192884),Critical,795.272705078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows improperly validates input before loading dynamic link library (DLL) files. An attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, an attacker must first gain access to the local system and have the ability to execute a malicious application.
The security update addresses the vulnerability by correcting how Windows validates input before loading DLL files.
</p>
  ",Microsoft CVE-2017-0039: Windows DLL Loading Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2018-0815: Windows GDI Elevation of Privilege Vulnerability,Severe,406.1339111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8611: Windows Kernel Elevation of Privilege Vulnerability,Severe,388.159515380859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory, aka &#39;Windows Search Indexer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0666, CVE-2020-0735, CVE-2020-0752.</p>
  ",Microsoft CVE-2020-0667: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Language Pack Installer improperly handles file operations, aka &#39;Windows Language Pack Installer Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0822: Windows Language Pack Installer Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,150.4931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1095: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.</p>
  ",MS16-151: Security Update for Windows Kernel-Mode Drivers (3205651),Severe,557.428466796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework fails to properly handle certain Extensible Stylesheet Language Transformations (XSLT). An attacker who successfully exploited this vulnerability could cause server performance to degrade significantly enough to cause a denial of service condition.</p>
  ",MS16-019: Security Update for .NET Framework to Address Denial of Service (3137893),Severe,520.7452392578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0087: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit the vulnerability, an attacker would have to either log on locally to an affected system, or convince a locally authenticated user to execute a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-0245: Win32k Information Disclosure Vulnerability,Moderate,341.114166259765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-1391: Windows Denial of Service Vulnerability,Severe,108.651275634765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1474: Windows Kernel Information Disclosure Vulnerability,Moderate,180.099716186523438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2020-0634: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,263.79022216796875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.1,Moderate,428.72186279296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the JScript and VBScript scripting engines. The vulnerability could allow remote code execution if a user visited a specially crafted Web site. An attacker would have no way to force users to visit the Web site. Instead, an attacker would have to convince users to visit the Web site, typically by getting them to click a link in an e-mail message or Instant Messenger message that takes users to the attacker&#39;s Web site.</p>
  ",MS11-031: Vulnerability in JScript and VBScript Scripting Engines Could Allow Remote Code Execution (2514666),Critical,810.4608154296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2017-0047: Windows GDI Elevation of Privilege Vulnerability,Severe,575.44146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Windows when the iSNS Server service fails to properly validate input from the client, leading to an integer overflow. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the SYSTEM account.
An attacker could exploit the vulnerability by creating a specially crafted application to connect to the iSNS Server and then issue malicious requests to it.
The update addresses the vulnerability by modifying how the iSNS Server service parses requests.
</p>
  ",Microsoft CVE-2017-0104: iSNS Server Memory Corruption Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and one privately reported vulnerability in Microsoft .NET Framework and Microsoft Silverlight. The vulnerabilities could allow remote code execution on a client system if a user views a specially crafted web page using a web browser that can run XAML Browser Applications (XBAPs) or Silverlight applications. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-016: Vulnerabilities in .NET Framework and Microsoft Silverlight Could Allow Remote Code Execution (2651026),Critical,791.4134521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Active Directory Forest trusts due to a default setting that lets an attacker in the trusting forest request delegation of a TGT for an identity from the trusted forest, aka &#39;Active Directory Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0665: Active Directory Elevation of Privilege Vulnerability,Severe,268.37261962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory, aka &#39;Windows Graphics Component Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0885: Windows Graphics Component Information Disclosure Vulnerability,Severe,206.094894409179688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2019-0703: Windows SMB Information Disclosure Vulnerability,Severe,226.971817016601562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The update addresses the vulnerability by correcting the way in which the Windows Graphics Component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8683: Microsoft Graphics Component Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-0263: Win32k Elevation of Privilege Vulnerability,Severe,563.4893798828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in the .NET Framework. The vulnerabilities could allow remote code execution on a client system if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-035: Vulnerabilities in .NET Framework Could Allow Remote Code Execution (2693777),Critical,785.6412353515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0904: Windows Kernel Information Disclosure Vulnerability,Moderate,265.230316162109375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>named in ISC BIND 9.x before 9.9.9-P5, 9.10.x before 9.10.4-P5, and 9.11.x before 9.11.0-P2 allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a malformed response to an RTYPE ANY query.</p>
  ",ISC BIND: A malformed response to an ANY query can cause an assertion failure during recursion (CVE-2016-9131),Severe,168.422515869140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Compatibility Appraiser where a configuration file, with local privileges, is vulnerable to symbolic link and hard link attacks.  An attacker who successfully exploited this vulnerability could run processes in an elevated context. An attacker could then install programs; view, change or delete data.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by writing the file to a location with an appropriate Access Control List.
</p>
  ",Microsoft CVE-2019-1267: Microsoft Compatibility Appraiser Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the tapisrv.dll handles objects in memory, aka &#39;Windows Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0739.</p>
  ",Microsoft CVE-2020-0737: Windows Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0891: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0774: Windows GDI Information Disclosure Vulnerability,Severe,274.943511962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1100: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2017-11817: Windows Kernel Information Disclosure Vulnerability,Moderate,291.363250732421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow denial of service if an attacker sends a small number of specially crafted requests to an affected .NET-enabled website, service, or program that uses Windows Communication Foundation (WCF). By default, no WCF programs are installed when Microsoft .NET Framework is installed on any supported edition of Microsoft Windows. To be affected by the vulnerability, customers must manually install a .NET-enabled website, service, or program that uses Windows Communication Foundation (WCF).</p>
  ",MS14-053: Vulnerability in .NET Framework Could Allow Denial of Service (2990931),Severe,179.901077270507812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when .NET Framework improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity declaration. </p>
  ",MS16-091: Security Update for .NET Framework (3170048),Severe,514.03460693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2017-0075: Hyper-V Remote Code Execution Vulnerability,Severe,520.96490478515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2019-0787: Remote Desktop Client Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Remote Desktop Services &#8211; formerly known as Terminal Services &#8211; when an authenticated attacker abuses clipboard redirection. An attacker who successfully exploited this vulnerability could execute arbitrary code on the victim system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker must already have compromised a system running Remote Desktop Services, and then wait for a victim system to connect to Remote Desktop Services.
The update addresses the vulnerability by correcting how Remote Desktop Services handles clipboard redirection.
</p>
  ",Microsoft CVE-2019-0887: Remote Desktop Services Remote Code Execution Vulnerability,Critical,249.91650390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0791: MS XML Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0271: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2018-0810: Windows Kernel Information Disclosure Vulnerability,Moderate,270.14111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1249: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.824737548828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows ActiveX Installer Service improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows ActiveX Installer Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0770, CVE-2020-0773.</p>
  ",Microsoft CVE-2020-0860: Windows ActiveX Installer Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A vulnerability exists in certain .Net Framework API&#39;s and Visual Studio in the way they parse URL&#39;s. An attacker who successfully exploited this vulnerability could use it to bypass security logic intended to ensure that a user-provided URL belonged to a specific hostname or a subdomain of that hostname. This could be used to cause privileged communication to be made to an untrusted service as if it was a trusted service.
To exploit the vulnerability, an attacker must provide a URL string to an application that attempts to verify that the URL belongs to a specific hostname or to a subdomain of that hostname. The application must then make an HTTP request to the attacker-provided URL either directly or by sending a processed version of the attacker-provided URL to a web browser.
</p>
  ",Microsoft CVE-2019-0657: .NET Framework and Visual Studio Spoofing Vulnerability,Severe,116.546585083007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network File System (NFS) handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows NFS properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1045: Windows Network File System Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8556: Win32k Elevation of Privilege Vulnerability,Severe,468.31146240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft Windows, Microsoft Office, and Microsoft Lync. The vulnerabilities could allow remote code execution if a user opens a specially crafted file or webpage. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-036: Vulnerabilities in Microsoft Graphics Component Could Allow Remote Code Execution (2967487),Critical,719.6392822265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0896: Windows Kernel Information Disclosure Vulnerability,Moderate,265.230316162109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory, aka &#39;Media Foundation Memory Corruption Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0738: Media Foundation Memory Corruption Vulnerability,Critical,324.43072509765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-094: Cumulative Security Update for Internet Explorer (3089548),Critical,665.595458984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8536: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.356521606445312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8308: Windows Kernel Elevation of Privilege Vulnerability,Critical,366.81842041015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0774, CVE-2020-0879, CVE-2020-0880, CVE-2020-0882.</p>
  ",Microsoft CVE-2020-0874: Windows GDI Information Disclosure Vulnerability,Moderate,159.44073486328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Error Reporting improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows Error Reporting Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0806.</p>
  ",Microsoft CVE-2020-0772: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,201.958267211914062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1046: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2019-1039: Windows Kernel Information Disclosure Vulnerability,Moderate,218.556900024414062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Elevation of privilege vulnerabilities exist when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited these vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-123: Security Update for Windows Kernel-Mode Drivers (3192892),Critical,795.272705078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Print Spooler service does not properly validate print drivers while installing a printer from servers. An attacker who successfully exploited this vulnerability could use it to execute arbitrary code and take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-087: Security Update for Windows Print Spooler Components (3170005),Critical,620.9102783203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2017-0158: Scripting Engine Memory Corruption Vulnerability,Critical,494.785064697265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-0246: Win32k Elevation of Privilege Vulnerability,Severe,483.042266845703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-0757: Windows Kernel Information Disclosure Vulnerability,Moderate,270.14111328125
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).</p>
  ",OpenSSL rsaz_512_sqr overflow bug on x86_64 (CVE-2019-1551),Severe,434.421600341796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0675, CVE-2020-0677, CVE-2020-0748, CVE-2020-0755, CVE-2020-0756.</p>
  ",Microsoft CVE-2020-0676: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory, aka &#39;Windows Graphics Component Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0745, CVE-2020-0792.</p>
  ",Microsoft CVE-2020-0715: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows where a certain DLL, with Local Service privilege, is vulnerable to race planting a customized DLL.
An attacker who successfully exploited this vulnerability could potentially elevate privilege to SYSTEM.
The update addresses this vulnerability by requiring SYSTEM privileges for a certain DLL.
</p>
  ",Microsoft CVE-2019-1082: Microsoft Windows Elevation of Privilege Vulnerability,Severe,325.969757080078125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>An attacker who is able to send and receive messages to an authoritative DNS server and who has knowledge of a valid TSIG key name may be able to circumvent TSIG authentication of AXFR requests via a carefully constructed request packet. A server that relies solely on TSIG keys for protection with no other ACL protection could be manipulated into: providing an AXFR of a zone to an unauthorized recipient or accepting bogus NOTIFY packets. Affects BIND 9.4.0-&gt;9.8.8, 9.9.0-&gt;9.9.10-P1, 9.10.0-&gt;9.10.5-P1, 9.11.0-&gt;9.11.1-P1, 9.9.3-S1-&gt;9.9.10-S2, 9.10.5-S1-&gt;9.10.5-S2.</p>
  ",ISC BIND: An error in TSIG authentication can permit unauthorized zone transfers (CVE-2017-3142),Severe,365.16387939453125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_ssl.  Review your web server configuration for validation.  mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.</p>
  ",Apache HTTPD: mod_ssl Null Pointer Dereference (CVE-2017-3169),Critical,629.50152587890625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_ssl.  Review your web server configuration for validation.  mod_ssl may dereference a NULL pointer when third-party modules call ap_hook_process_connection() during an HTTP request to an HTTPS port.</p>
  ",Apache HTTPD: mod_ssl Null Pointer Dereference (CVE-2017-3169),Critical,629.50152587890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote unauthenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-8620: Windows Search Remote Code Execution Vulnerability,Critical,552.4530029296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-0056: Windows Kernel Elevation of Privilege Vulnerability,Severe,575.44146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0121: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0146: Windows SMB Remote Code Execution Vulnerability,Critical,918.75
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The security update addresses the vulnerability by modifying how Internet Explorer handles objects in memory.
</p>
  ",Microsoft CVE-2017-0222: Internet Explorer Memory Corruption Vulnerability,Critical,488.47320556640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8166: Win32k Elevation of Privilege Vulnerability,Severe,390.7572021484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how DirectX handles objects in memory.
</p>
  ",Microsoft CVE-2019-1284: DirectX Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1408: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0675, CVE-2020-0676, CVE-2020-0677, CVE-2020-0748, CVE-2020-0756.</p>
  ",Microsoft CVE-2020-0755: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0788, CVE-2020-0887.</p>
  ",Microsoft CVE-2020-0877: Win32k Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,851.79998779296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2019-0635: Windows Hyper-V Information Disclosure Vulnerability,Severe,263.562347412109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0569: Windows Kernel Information Disclosure Vulnerability,Moderate,248.333282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. An attacker who successfully exploited these vulnerabilities could take complete control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-080: Vulnerabilities in Microsoft Graphics Component Could Allow Remote Code Execution (3078662),Critical,703.53466796875
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>The subject common name (CN) field in the X.509 certificate does not match
the name of the entity presenting the certificate.</p>


<p>Before issuing a certificate, a Certification Authority (CA) must check the
identity of the entity requesting the certificate, as specified in the CA&#39;s
Certification Practice Statement (CPS). Thus, standard certificate validation
procedures require the subject CN field of a certificate to match the actual
name of the entity presenting the certificate. For example, in a certificate
presented by &quot;https://www.example.com/&quot;, the CN should be &quot;www.example.com&quot;.
</p>


<p>In order to detect and prevent active eavesdropping attacks, the validity of
a certificate must be verified, or else an attacker could then launch a
man-in-the-middle attack and gain full control of the data stream. Of
particular importance is the validity of the subject&#39;s CN, that should match
the name of the entity (hostname).</p>


<p>A CN mismatch most often occurs due to a configuration error, though it can
also indicate that a man-in-the-middle attack is being conducted. </p>


<p>Please note that this check may flag a false positive against servers
 that are properly configured using SNI.</p>
  ",X.509 Certificate Subject CN Does Not Match the Entity Name,Severe,812.6318359375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The subject common name (CN) field in the X.509 certificate does not match
the name of the entity presenting the certificate.</p>


<p>Before issuing a certificate, a Certification Authority (CA) must check the
identity of the entity requesting the certificate, as specified in the CA&#39;s
Certification Practice Statement (CPS). Thus, standard certificate validation
procedures require the subject CN field of a certificate to match the actual
name of the entity presenting the certificate. For example, in a certificate
presented by &quot;https://www.example.com/&quot;, the CN should be &quot;www.example.com&quot;.
</p>


<p>In order to detect and prevent active eavesdropping attacks, the validity of
a certificate must be verified, or else an attacker could then launch a
man-in-the-middle attack and gain full control of the data stream. Of
particular importance is the validity of the subject&#39;s CN, that should match
the name of the entity (hostname).</p>


<p>A CN mismatch most often occurs due to a configuration error, though it can
also indicate that a man-in-the-middle attack is being conducted. </p>


<p>Please note that this check may flag a false positive against servers
 that are properly configured using SNI.</p>
  ",X.509 Certificate Subject CN Does Not Match the Entity Name,Severe,812.6318359375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>The subject common name (CN) field in the X.509 certificate does not match
the name of the entity presenting the certificate.</p>


<p>Before issuing a certificate, a Certification Authority (CA) must check the
identity of the entity requesting the certificate, as specified in the CA&#39;s
Certification Practice Statement (CPS). Thus, standard certificate validation
procedures require the subject CN field of a certificate to match the actual
name of the entity presenting the certificate. For example, in a certificate
presented by &quot;https://www.example.com/&quot;, the CN should be &quot;www.example.com&quot;.
</p>


<p>In order to detect and prevent active eavesdropping attacks, the validity of
a certificate must be verified, or else an attacker could then launch a
man-in-the-middle attack and gain full control of the data stream. Of
particular importance is the validity of the subject&#39;s CN, that should match
the name of the entity (hostname).</p>


<p>A CN mismatch most often occurs due to a configuration error, though it can
also indicate that a man-in-the-middle attack is being conducted. </p>


<p>Please note that this check may flag a false positive against servers
 that are properly configured using SNI.</p>
  ",X.509 Certificate Subject CN Does Not Match the Entity Name,Severe,812.6318359375
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>The subject common name (CN) field in the X.509 certificate does not match
the name of the entity presenting the certificate.</p>


<p>Before issuing a certificate, a Certification Authority (CA) must check the
identity of the entity requesting the certificate, as specified in the CA&#39;s
Certification Practice Statement (CPS). Thus, standard certificate validation
procedures require the subject CN field of a certificate to match the actual
name of the entity presenting the certificate. For example, in a certificate
presented by &quot;https://www.example.com/&quot;, the CN should be &quot;www.example.com&quot;.
</p>


<p>In order to detect and prevent active eavesdropping attacks, the validity of
a certificate must be verified, or else an attacker could then launch a
man-in-the-middle attack and gain full control of the data stream. Of
particular importance is the validity of the subject&#39;s CN, that should match
the name of the entity (hostname).</p>


<p>A CN mismatch most often occurs due to a configuration error, though it can
also indicate that a man-in-the-middle attack is being conducted. </p>


<p>Please note that this check may flag a false positive against servers
 that are properly configured using SNI.</p>
  ",X.509 Certificate Subject CN Does Not Match the Entity Name,Severe,812.6318359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0143: Windows SMB Remote Code Execution Vulnerability,Critical,918.75
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0148: Windows SMB Remote Code Execution Vulnerability,Critical,918.75
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the Remote Desktop Protocol. The vulnerability could allow remote code execution if an attacker sends a sequence of specially crafted RDP packets to an affected system. By default, the Remote Desktop Protocol (RDP) is not enabled on any Windows operating system. Systems that do not have RDP enabled are not at risk.</p>
  ",MS12-036: Vulnerability in Remote Desktop Could Allow Remote Code Execution (2685939),Critical,783.2310791015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-0842: Windows Kernel Elevation of Privilege Vulnerability,Severe,413.653564453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Windows Domain Name System (DNS) DNSAPI.dll when it fails to properly handle DNS responses. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the Local System Account.
To exploit the vulnerability, the attacker would use a malicious DNS server to send corrupted DNS responses to the target.
The update addresses the vulnerability by modifying how Windows DNSAPI.dll handles DNS responses.
</p>
  ",Microsoft CVE-2018-8225: Windows DNSAPI Remote Code Execution Vulnerability,Critical,487.79656982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists when Windows Media Foundation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could install programs; view, change, or delete data; or create new accounts with full user rights.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit a malicious webpage.
The security update addresses the vulnerability by correcting how Windows Media Foundation handles objects in memory.
</p>
  ",Microsoft CVE-2018-8251: Media Foundation Memory Corruption Vulnerability,Critical,387.61724853515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1157: Jet Database Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Imaging Library improperly handles memory.To exploit this vulnerability, an attacker would first have to coerce a victim to open a specially crafted file.The security update addresses the vulnerability by correcting how the Windows Imaging Library handles memory., aka &#39;Windows Imaging Library Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0708: Windows Imaging Library Remote Code Execution Vulnerability,Severe,268.37261962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0805: Windows Elevation of Privilege Vulnerability,Severe,309.2406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends a sequence of specially crafted packets to the target system.</p>
  ",MS14-031: Vulnerability in TCP Protocol Could Allow Denial of Service (2962478),Severe,180.843551635742188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-8708: Windows Kernel Information Disclosure Vulnerability,Moderate,320.39239501953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.
An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
The attacker could present to the user a removable drive, or remote share, that contains a malicious .LNK file and an associated malicious binary. When the user opens this drive(or remote share) in Windows Explorer, or any other application that parses the .LNK file, the malicious binary will execute code of the attacker&#8217;s choice, on the target system.
The security update addresses the vulnerability by correcting the processing of shortcut LNK references.
</p>
  ",Microsoft CVE-2018-8345: LNK Remote Code Execution Vulnerability,Critical,369.66021728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when MSI packages process symbolic links, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0683.</p>
  ",Microsoft CVE-2020-0686: Windows Installer Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0126: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0621: Windows Kernel Information Disclosure Vulnerability,Moderate,241.77685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0538: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists in the Windows Server DHCP service when processing specially crafted packets. An attacker who successfully exploited the vulnerability could run arbitrary code on the DHCP server.
To exploit the vulnerability, a remote unauthenticated attacker could send a specially crafted packet to an affected DHCP server.
The security update addresses the vulnerability by correcting how DHCP servers handle network packets.
</p>
  ",Microsoft CVE-2019-0725: Windows DHCP Server Remote Code Execution Vulnerability,Critical,571.87408447265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1098: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting the manner in which the Microsoft Malware Protection Engine scans specially crafted files.
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-11940: Malware Protection Engine Remote Code Execution Vulnerability,Critical,528.2978515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information vulnerability exists when Windows Media Player improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to test for the presence of files on disk.
To exploit the vulnerability, an attacker would have to log onto an affected system and run a specially crafted application.
The update addresses the vulnerability by changing the way Windows Media Player discloses file information.
</p>
  ",Microsoft CVE-2017-11768: Windows Media Player Information Disclosure Vulnerability,Moderate,285.60906982421875
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  Using fuzzed network input, the http/2 request handling could be made to access freed memory in string comparision when determining the method of a request and thus process the request incorrectly.</p>
  ","Apache HTTPD: mod_http2, read-after-free on a string compare (CVE-2019-0196)",Severe,151.5784912109375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  Using fuzzed network input, the http/2 request handling could be made to access freed memory in string comparision when determining the method of a request and thus process the request incorrectly.</p>
  ","Apache HTTPD: mod_http2, read-after-free on a string compare (CVE-2019-0196)",Severe,151.5784912109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Kernel API improperly handles registry objects in memory. An attacker who successfully exploited the vulnerability could gain elevated privileges on a targeted system.
A locally authenticated attacker could exploit this vulnerability by running a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly handles objects in memory.
</p>
  ",Microsoft CVE-2017-0103: Windows Registry Elevation of Privilege Vulnerability,Severe,443.110321044921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0898: Windows Kernel Information Disclosure Vulnerability,Moderate,265.230316162109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8422: Windows GDI Information Disclosure Vulnerability,Severe,304.714263916015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Graphics component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows Graphics Component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1078: Microsoft Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Microsoft Windows OLE fails to properly validate user input. An attacker could exploit the vulnerability to execute malicious code.
To exploit the vulnerability, an attacker would have to convince a user to open a specially crafted file or a program, causing Windows to execute arbitrary code.
The update addresses the vulnerability by correcting how Windows OLE validates user input.
</p>
  ",Microsoft CVE-2019-1484: Windows OLE Remote Code Execution Vulnerability,Severe,284.450439453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists when Microsoft Defender improperly handles specific buffers. An attacker could exploit the vulnerability to trigger warnings and false positives when no threat is present.
To exploit the vulnerability, an attacker would first require execution permissions on the victim system.
The security update addresses the vulnerability by ensuring Microsoft Defender properly handles these buffers.
</p>
  ",Microsoft CVE-2019-1488: Microsoft Defender Security Feature Bypass Vulnerability,Moderate,75.0415496826171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0731: Windows Elevation of Privilege Vulnerability,Severe,309.2406005859375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_cache_socache.  Review your web server configuration for validation.  A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.33 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache.</p>
  ",Apache HTTPD: Possible out of bound read in mod_cache_socache (CVE-2018-1303),Severe,160.210189819335938
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_cache_socache.  Review your web server configuration for validation.  A specially crafted HTTP request header could have crashed the Apache HTTP Server prior to version 2.4.33 due to an out of bound read while preparing data to be cached in shared memory. It could be used as a Denial of Service attack against users of mod_cache_socache.</p>
  ",Apache HTTPD: Possible out of bound read in mod_cache_socache (CVE-2018-1303),Severe,160.210189819335938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8666: Win32k Information Disclosure Vulnerability,Moderate,332.453094482421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows when a specially crafted Journal file is opened in Windows Journal. An attacker who successfully exploited this vulnerability could cause arbitrary code to execute in the context of the current user. If a user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data, or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-056: Security Update for Windows Journal (3156761),Critical,630.65057373046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Graphics component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows Graphics Component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8433: Microsoft Graphics Component Information Disclosure Vulnerability,Moderate,231.478744506835938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could execute arbitrary code on a target system.
To exploit the vulnerability, a user would have to open a specially crafted file.
The security update addresses the vulnerability by correcting how Microsoft Graphics Components handle objects in memory.
</p>
  ",Microsoft CVE-2018-8553: Microsoft Graphics Components Remote Code Execution Vulnerability,Critical,451.306854248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows does not properly handle specially crafted image files. An attacker who successfully exploited the vulnerability could execute arbitrary code.
To exploit the vulnerability, an attacker would have to convince a user to download an image file.
The update addresses the vulnerability by properly handling image files.
</p>
  ",Microsoft CVE-2018-8475: Windows Remote Code Execution Vulnerability,Severe,385.97137451171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1164: Windows Kernel Elevation of Privilege Vulnerability,Severe,314.917999267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0675, CVE-2020-0676, CVE-2020-0677, CVE-2020-0755, CVE-2020-0756.</p>
  ",Microsoft CVE-2020-0748: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  By manipulating the flow control windows on streams, a client was able to block server threads for long times, causing starvation of worker threads. Connections could still be opened, but no streams where processed for these. This issue affected HTTP/2 support in 2.4.17 and 2.4.18.</p>
  ",Apache HTTPD: mod_http2: denial of service by thread starvation (CVE-2016-1546),Severe,137.085556030273438
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  By manipulating the flow control windows on streams, a client was able to block server threads for long times, causing starvation of worker threads. Connections could still be opened, but no streams where processed for these. This issue affected HTTP/2 support in 2.4.17 and 2.4.18.</p>
  ",Apache HTTPD: mod_http2: denial of service by thread starvation (CVE-2016-1546),Severe,137.085556030273438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0907: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.518402099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in Windows which could allow an attacker to bypass Device Guard when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could circumvent a User Mode Code Integrity (UMCI) policy on the machine.
To exploit the vulnerability, an attacker would first have to access the local machine, and then run a malicious program.
The update addresses the vulnerability by correcting how Windows validates User Mode Code Integrity policies.
</p>
  ",Microsoft CVE-2019-0732: Windows Security Feature Bypass Vulnerability,Severe,309.2406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Internet Explorer that could allow an attacker who successfully exploited this vulnerability to gain access to a user&#226;s browser history. </p>
  ",MS15-056: Cumulative Security Update for Internet Explorer (3058515),Critical,711.66302490234375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>BIND was improperly sequencing cleanup operations on upstream recursion fetch contexts, leading in some cases to a use-after-free error that can trigger an assertion failure and crash in named. Affects BIND 9.0.0 to 9.8.x, 9.9.0 to 9.9.11, 9.10.0 to 9.10.6, 9.11.0 to 9.11.2, 9.9.3-S1 to 9.9.11-S1, 9.10.5-S1 to 9.10.6-S1, 9.12.0a1 to 9.12.0rc1.</p>
  ",ISC BIND: Improper fetch cleanup sequencing in the resolver can cause named to crash (CVE-2017-3145),Severe,161.592620849609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. The update addresses the vulnerabilities by modifying the way that Internet Explorer handles objects in memory.</p>
  ",MS14-080: Cumulative Security Update for Internet Explorer (3008923),Critical,733.4610595703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8720: Win32k Elevation of Privilege Vulnerability,Severe,501.43072509765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when Windows Input Method Editor (IME) improperly handles DLL loading. There is no impact without IME present.</p>
  ",MS16-130: Security Update for Microsoft Windows (3199172),Critical,601.6043701171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Microsoft Internet Messaging API improperly handles objects in memory. An attacker who successfully exploited this vulnerability could allow the attacker to test for the presence of files on disk.</p>
  ",MS16-126: Security Update for Microsoft Internet Messaging API (3196067),Moderate,375.132568359375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>named in ISC BIND 9.x before 9.9.9-P5, 9.10.x before 9.10.4-P5, and 9.11.x before 9.11.0-P2 allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted DS resource record in an answer.</p>
  ",ISC BIND: An unusually-formed DS record response could cause an assertion failure (CVE-2016-9444),Severe,168.422515869140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8453: Win32k Elevation of Privilege Vulnerability,Severe,414.21893310546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when certain central processing units (CPU) speculatively access memory. An attacker who successfully exploited the vulnerability could read privileged data across trust boundaries.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to elevate user rights directly, but it could be used to obtain information that could be used to try to compromise the affected system further.
On January 3, 2018, Microsoft released an advisory and security updates&#8239;related to a newly-discovered class of hardware vulnerabilities (known as Spectre) involving speculative execution side channels that affect AMD, ARM, and Intel CPUs to varying degrees. This vulnerability, released on August 6, 2019, is a variant of the Spectre Variant 1 speculative execution side channel vulnerability and has been assigned CVE-2019-1125.
Microsoft released a security update on July 9, 2019 that addresses the vulnerability through a software change that mitigates how the CPU speculatively accesses memory. Note that this vulnerability does not require a microcode update from your device OEM.
</p>
  ",Microsoft CVE-2019-1125: Windows Kernel Information Disclosure Vulnerability,Moderate,217.2939453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Remote Desktop Web Access improperly handles credential information. An attacker who successfully exploited this vulnerability could obtain legitimate users&#39; credentials.
To exploit this vulnerability, an attacker would need access to a vulnerable server with the Remote Desktop Web Access role.
The security update addresses the vulnerability by correcting how Remote Desktop Web Access handles credential information.
</p>
  ",Microsoft CVE-2020-0637: Remote Desktop Web Access Information Disclosure Vulnerability,Severe,161.127227783203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Print Spooler does not properly handle objects in memory. An attacker who successfully exploited this vulnerability could use the information to further exploit the victim system.
To exploit this vulnerability, an attacker would have to first gain execution on the victim system.
The update addresses the vulnerability by correcting how the Windows Print Spooler handles objects in memory.
</p>
  ",Microsoft CVE-2019-0759: Windows Print Spooler Information Disclosure Vulnerability,Moderate,236.443801879882812
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>Controls for zone transfers may not be properly applied to Dynamically Loadable Zones (DLZs) if the zones are writable Versions affected: BIND 9.9.0 -&gt; 9.10.8-P1, 9.11.0 -&gt; 9.11.5-P2, 9.12.0 -&gt; 9.12.3-P2, and versions 9.9.3-S1 -&gt; 9.11.5-S3 of BIND 9 Supported Preview Edition. Versions 9.13.0 -&gt; 9.13.6 of the 9.13 development branch are also affected. Versions prior to BIND 9.9.0 have not been evaluated for vulnerability to CVE-2019-6465.</p>
  ",ISC BIND: Zone transfer controls for writable DLZ zones were not effective (CVE-2019-6465),Severe,277.1661376953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Microsoft Windows. The vulnerabilities could allow elevation of privilege if an attacker logs on to a user&#39;s system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the vulnerabilities.</p>
  ",MS12-009: Vulnerabilities in Ancillary Function Driver Could Allow Elevation of Privilege (2645640),Severe,808.24969482421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2018-0888: Windows Hyper-V Information Disclosure Vulnerability,Severe,331.537872314453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0774, CVE-2020-0874, CVE-2020-0880, CVE-2020-0882.</p>
  ",Microsoft CVE-2020-0879: Windows GDI Information Disclosure Vulnerability,Moderate,159.44073486328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,334.665252685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework checks the source markup of a file.
</p>
  ",Microsoft CVE-2019-1113: .NET Framework Remote Code Execution Vulnerability,Severe,321.573028564453125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>By sending continous SETTINGS frames of maximum size an ongoing HTTP/2 connection could be kept busy and would never time out. This can be abused for a DoS on the server. This only affect a server that has enabled the h2 protocol.</p>
  ",Apache HTTPD: DoS for HTTP/2 connections by continuous SETTINGS (CVE-2018-11763),Severe,100.841445922851562
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>By sending continous SETTINGS frames of maximum size an ongoing HTTP/2 connection could be kept busy and would never time out. This can be abused for a DoS on the server. This only affect a server that has enabled the h2 protocol.</p>
  ",Apache HTTPD: DoS for HTTP/2 connections by continuous SETTINGS (CVE-2018-11763),Severe,100.841445922851562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8679: Windows Kernel Information Disclosure Vulnerability,Moderate,327.4649658203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way the Windows Graphics Component handles objects in memory. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince a user to open the document file.

Note that for affected Microsoft Office products, the Preview Pane is an attack vector.
The security update addresses the vulnerability by correcting how the Windows Graphics Component handles objects in the memory.
</p>
  ",Microsoft CVE-2017-0108: Windows Graphics Component Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2018-0887: Windows Kernel Information Disclosure Vulnerability,Moderate,295.521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8164: Win32k Elevation of Privilege Vulnerability,Severe,445.57623291015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-1214: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,305.92840576171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows Network Driver Interface Specification (NDIS) improperly handles memory.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows Network Driver Interface Specification (NDIS) Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0705: Windows Network Driver Interface Specification (NDIS) Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0536: Windows Kernel Information Disclosure Vulnerability,Moderate,248.333282470703125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>Under some conditions when using both DNS64 and RPZ to rewrite query responses, query processing can resume in an inconsistent state leading to either an INSIST assertion failure or an attempt to read through a NULL pointer. Affects BIND 9.8.8, 9.9.3-S1 -&gt; 9.9.9-S7, 9.9.3 -&gt; 9.9.9-P5, 9.9.10b1, 9.10.0 -&gt; 9.10.4-P5, 9.10.5b1, 9.11.0 -&gt; 9.11.0-P2, 9.11.1b1.</p>
  ",ISC BIND: Combination of DNS64 and RPZ Can Lead to Crash (CVE-2017-3135),Severe,127.335060119628906
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services (MSXML) parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#39;s system.</p>
  ",MS16-040: Security Update for Microsoft XML Core Services (3148541),Critical,634.87677001953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2017-0130: Scripting Engine Memory Corruption Vulnerability,Critical,540.44287109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows Error Reporting manager improperly handles a process crash. An attacker who successfully exploited this vulnerability could delete a targeted file leading to an elevated status.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by correcting how Windows Error Reporting manager handles process crashes.
</p>
  ",Microsoft CVE-2019-1342: Windows Error Reporting Manager Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework checks the source markup of a file.
</p>
  ",Microsoft CVE-2020-0606: .NET Framework Remote Code Execution Vulnerability,Critical,333.14886474609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Cryptography Next Generation (CNG) service when it fails to properly handle objects in memory.To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.The security update addresses the vulnerability by correcting how the service handles objects in memory., aka &#39;Windows Key Isolation Service Information Disclosure Vulnerability&#39;. This CVE ID is unique from CVE-2020-0675, CVE-2020-0676, CVE-2020-0748, CVE-2020-0755, CVE-2020-0756.</p>
  ",Microsoft CVE-2020-0677: Windows Key Isolation Service Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks, aka &#39;Windows User Profile Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0785: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,106.293815612792969
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0660: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-0775: Windows Kernel Information Disclosure Vulnerability,Moderate,194.32440185546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8593: Win32k Elevation of Privilege Vulnerability,Severe,461.605560302734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed and thirty-six privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-052: Cumulative Security Update for Internet Explorer (2977629),Critical,918.68634033203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll)  when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2017-0192: OpenType Font Driver Information Disclosure Vulnerability,Severe,375.3475341796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Windows fails to check the length of a buffer prior to copying memory to it. An attacker who successfully exploited the vulnerability could gain elevated privileges on a targeted system.
To exploit the vulnerability, an attacker would first need access to the target system and have the ability to copy a file to a shared folder or drive.
The security update addresses the vulnerability by correcting the way that Windows validates the buffer lengths.
</p>
  ",Microsoft CVE-2017-0102: Windows Elevation of Privilege Vulnerability,Severe,476.011444091796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in Microsoft Windows when Kerberos fails to prevent tampering with the SNAME field during ticket exchange. An attacker who successfully exploited this vulnerability could use it to bypass Extended Protection for Authentication.
To exploit this vulnerability, an attacker would have to be able to launch a man-in-the-middle (MiTM) attack against the traffic passing between a client and the server.
The update addresses this vulnerability by adding integrity protection to the SNAME field.
</p>
  ",Microsoft CVE-2017-8495: Kerberos SNAME Security Feature Bypass Vulnerability,Severe,383.236602783203125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  Using fuzzed network input, the http/2 session handling could be made to read memory after being freed, during connection shutdown.</p>
  ","Apache HTTPD: mod_http2, read-after-free in h2 connection shutdown (CVE-2019-10082)",Severe,503.115509033203125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_http2.  Review your web server configuration for validation.  Using fuzzed network input, the http/2 session handling could be made to read memory after being freed, during connection shutdown.</p>
  ","Apache HTTPD: mod_http2, read-after-free in h2 connection shutdown (CVE-2019-10082)",Severe,503.115509033203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files, aka &#39;Windows Error Reporting Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0754.</p>
  ",Microsoft CVE-2020-0753: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,210.144241333007812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0803: Win32k Elevation of Privilege Vulnerability,Severe,373.83526611328125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed. Third-party module writers SHOULD use ap_get_basic_auth_components(), available in 2.2.34 and 2.4.26, instead of ap_get_basic_auth_pw().  Modules which call the legacy ap_get_basic_auth_pw() during the authentication phase MUST either immediately authenticate the user after the call, or else stop the request immediately with an error response, to avoid incorrectly authenticating the current request.</p>
  ",Apache HTTPD: ap_get_basic_auth_pw() Authentication Bypass (CVE-2017-3167),Critical,629.50152587890625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>Use of the ap_get_basic_auth_pw() by third-party modules outside of the authentication phase may lead to authentication requirements being bypassed. Third-party module writers SHOULD use ap_get_basic_auth_components(), available in 2.2.34 and 2.4.26, instead of ap_get_basic_auth_pw().  Modules which call the legacy ap_get_basic_auth_pw() during the authentication phase MUST either immediately authenticate the user after the call, or else stop the request immediately with an error response, to avoid incorrectly authenticating the current request.</p>
  ",Apache HTTPD: ap_get_basic_auth_pw() Authentication Bypass (CVE-2017-3167),Critical,629.50152587890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0275: Windows SMB Information Disclosure Vulnerability,Severe,372.0030517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0971: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how DirectX handles objects in memory.
</p>
  ",Microsoft CVE-2018-8563: DirectX Information Disclosure Vulnerability,Moderate,258.57489013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability.

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1441: Win32k Graphics Remote Code Execution Vulnerability,Critical,352.29998779296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,850.5517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2019-0903: GDI+ Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when OLE automation improperly handles objects in memory. An attacker who successfully exploited the vulnerability could gain execution on the victim system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke OLE automation through a web browser. However, an attacker would have to entice a user to visit such a website.
The update addresses the vulnerability by correcting how OLE automation handles objects in memory.
</p>
  ",Microsoft CVE-2019-0794: OLE Automation Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that comctl32.dll handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The security update addresses the vulnerability by modifying how comctl32.dll handles objects in memory.
</p>
  ",Microsoft CVE-2019-1043: Comctl32 Remote Code Execution Vulnerability,Critical,259.7276611328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1010: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.890167236328125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>HTTP_PROXY is a well-defined environment variable in a CGI process, which collided with a number of libraries which failed to avoid colliding with this CGI namespace. A mitigation is provided for the httpd CGI environment to avoid populating the &quot;HTTP_PROXY&quot; variable from a &quot;Proxy:&quot; header, which has never been registered by IANA. This workaround and patch are documented in the ASF Advisory at asf-httpoxy-response.txt and incorporated in the 2.4.25 and 2.2.32 releases. Note: This is not assigned an httpd severity, as it is a defect in other software which overloaded well-established CGI environment variables, and does not reflect an error in HTTP server software.</p>
  ","Apache HTTPD: HTTP_PROXY environment variable ""httpoxy"" mitigation (CVE-2016-5387)",Severe,455.38812255859375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>HTTP_PROXY is a well-defined environment variable in a CGI process, which collided with a number of libraries which failed to avoid colliding with this CGI namespace. A mitigation is provided for the httpd CGI environment to avoid populating the &quot;HTTP_PROXY&quot; variable from a &quot;Proxy:&quot; header, which has never been registered by IANA. This workaround and patch are documented in the ASF Advisory at asf-httpoxy-response.txt and incorporated in the 2.4.25 and 2.2.32 releases. Note: This is not assigned an httpd severity, as it is a defect in other software which overloaded well-established CGI environment variables, and does not reflect an error in HTTP server software.</p>
  ","Apache HTTPD: HTTP_PROXY environment variable ""httpoxy"" mitigation (CVE-2016-5387)",Severe,455.38812255859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the TLS/SSL protocol, implemented in the encryption component of Microsoft .NET Framework. An attacker who successfully exploited this vulnerability could decrypt encrypted SSL/TLS traffic.</p>
  ",MS16-065: Security Update for .NET Framework (3156757),Severe,411.85345458984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2018-0885: Windows Hyper-V Denial of Service Vulnerability,Severe,152.539703369140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8396: Windows GDI Information Disclosure Vulnerability,Moderate,236.884658813476562
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8562: Win32k Elevation of Privilege Vulnerability,Severe,395.94281005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1146: Jet Database Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Windows Certificate Dialog when it does not properly enforce user privileges. An attacker who successfully exploited this vulnerability could run processes in an elevated context. An attacker could then install programs; view, change or delete data.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The security update addresses the vulnerability by ensuring Windows Certificate Dialog properly enforces user privileges.
</p>
  ",Microsoft CVE-2019-1388: Windows Certificate Dialog Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks, aka &#39;Windows User Profile Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0730: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,110.602226257324219
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.An attacker who successfully exploited this vulnerability could gain the same user rights as the local user, aka &#39;LNK Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0684: LNK Remote Code Execution Vulnerability,Severe,261.05352783203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0575: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.28509521484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0900: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A vulnerability exists in Windows Media Center that could allow remote code execution if Windows Media Center opens a specially crafted Media Center link (.mcl) file that references malicious code. An attacker who successfully exploited this vulnerability could take control of an affected system. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. Workstations are primarily at risk of this vulnerability.</p>
  ",MS15-134: Security Update for Windows Media Center to Address Remote Code Execution (3108669),Critical,687.30059814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Microsoft Windows fails to properly validate and enforce impersonation levels. An attacker who successfully exploited this vulnerability could bypass impersonation-level security checks and gain elevated privileges on a targeted system. </p>
  ",MS15-038: Vulnerabilities in Microsoft Windows Could Allow Elevation of Privilege (3049576),Severe,694.9278564453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1009: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in Windows Audio Service. An attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit the vulnerability, an attacker could run a specially crafted application that could exploit the vulnerability. This vulnerability by itself does not allow arbitrary code to be run.  However, this vulnerability could be used in conjunction with one or more vulnerabilities (e.g. a remote code execution vulnerability and another elevation of privilege) that could take advantage of the elevated privileges when running.
The update addresses the vulnerability by correcting how the Windows Audio Service handles processes these requests.
</p>
  ",Microsoft CVE-2019-1028: Windows Audio Service Elevation of Privilege Vulnerability,Severe,276.8387451171875
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>
      A NetBIOS NBSTAT query will obtain the status from a NetBIOS-speaking
      endpoint, which will include any names that the endpoint is known to
      respond to as well as the device&#39;s MAC address for that endpoint.
      A NBSTAT response is roughly 3x the size of the request, and because
      NetBIOS utilizes UDP, this can be used to conduct traffic amplification
      attacks against other assets, typically in the form of distributed
      reflected denial of service (DRDoS) attacks.
    </p>
  ",NetBIOS NBSTAT Traffic Amplification,Moderate,0
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      A NetBIOS NBSTAT query will obtain the status from a NetBIOS-speaking
      endpoint, which will include any names that the endpoint is known to
      respond to as well as the device&#39;s MAC address for that endpoint.
      A NBSTAT response is roughly 3x the size of the request, and because
      NetBIOS utilizes UDP, this can be used to conduct traffic amplification
      attacks against other assets, typically in the form of distributed
      reflected denial of service (DRDoS) attacks.
    </p>
  ",NetBIOS NBSTAT Traffic Amplification,Moderate,0
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      A NetBIOS NBSTAT query will obtain the status from a NetBIOS-speaking
      endpoint, which will include any names that the endpoint is known to
      respond to as well as the device&#39;s MAC address for that endpoint.
      A NBSTAT response is roughly 3x the size of the request, and because
      NetBIOS utilizes UDP, this can be used to conduct traffic amplification
      attacks against other assets, typically in the form of distributed
      reflected denial of service (DRDoS) attacks.
    </p>
  ",NetBIOS NBSTAT Traffic Amplification,Moderate,0
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
    
<p>
      A NetBIOS NBSTAT query will obtain the status from a NetBIOS-speaking
      endpoint, which will include any names that the endpoint is known to
      respond to as well as the device&#39;s MAC address for that endpoint.
      A NBSTAT response is roughly 3x the size of the request, and because
      NetBIOS utilizes UDP, this can be used to conduct traffic amplification
      attacks against other assets, typically in the form of distributed
      reflected denial of service (DRDoS) attacks.
    </p>
  ",NetBIOS NBSTAT Traffic Amplification,Moderate,0
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      A NetBIOS NBSTAT query will obtain the status from a NetBIOS-speaking
      endpoint, which will include any names that the endpoint is known to
      respond to as well as the device&#39;s MAC address for that endpoint.
      A NBSTAT response is roughly 3x the size of the request, and because
      NetBIOS utilizes UDP, this can be used to conduct traffic amplification
      attacks against other assets, typically in the form of distributed
      reflected denial of service (DRDoS) attacks.
    </p>
  ",NetBIOS NBSTAT Traffic Amplification,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2017-11832: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,285.60906982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves two privately reported vulnerabilities in Internet Explorer. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-029: Security Update for Internet Explorer (2962482),Critical,755.77716064453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-8696: Windows Uniscribe Remote Code Execution Vulnerability,Critical,458.88702392578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8680: Windows GDI+ Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A security feature bypass vulnerability exists in a .NET Framework component that does not properly validate certain elements of a signed XML document. An attacker who successfully exploited the vulnerability could modify the contents of an XML file without invalidating the signature associated with the file. If a .NET application relies on the signature to be non-malicious, the behavior of the application could become unpredictable. In custom applications, the security impact depends on the specific usage scenario.</p>
  ",MS16-035: Security Update for .NET Framework to Address Security Feature Bypass (3141780),Critical,795.58441162109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0086: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Hyper-V on a host operating system fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker on a guest operating system could run a specially crafted application that could cause the Hyper-V host operating system to disclose memory information.
An attacker who successfully exploited the vulnerability could gain access to information on the Hyper-V host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2018-8434: Windows Hyper-V Information Disclosure Vulnerability,Severe,271.668243408203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8398: Windows GDI Information Disclosure Vulnerability,Severe,309.045867919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Media Player improperly discloses file information. Successful exploitation of the vulnerability could allow an attacker to determine the presence of files on disk.
To exploit the vulnerability, a user would have to open a specially crafted hyperlink.
The update addresses the vulnerability by changing the way Windows Media Player discloses file information.
</p>
  ",Microsoft CVE-2018-8482: Windows Media Player Information Disclosure Vulnerability,Moderate,230.654281616210938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1014: Win32k Elevation of Privilege Vulnerability,Severe,334.665252685546875
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>OpenSSL has internal defaults for a directory tree where it can find a configuration file as well as certificates used for verification in TLS. This directory is most commonly referred to as OPENSSLDIR, and is configurable with the --prefix / --openssldir configuration options. For OpenSSL versions 1.1.0 and 1.1.1, the mingw configuration targets assume that resulting programs and libraries are installed in a Unix-like environment and the default prefix for program installation as well as for OPENSSLDIR should be &#39;/usr/local&#39;. However, mingw programs are Windows programs, and as such, find themselves looking at sub-directories of &#39;C:/usr/local&#39;, which may be world writable, which enables untrusted users to modify OpenSSL&#39;s default configuration, insert CA certificates, modify (or even replace) existing engine modules, etc. For OpenSSL 1.0.2, &#39;/usr/local/ssl&#39; is used as default for OPENSSLDIR on all Unix and Windows targets, including Visual C builds. However, some build instructions for the diverse Windows targets on 1.0.2 encourage you to specify your own --prefix. OpenSSL versions 1.1.1, 1.1.0 and 1.0.2 are affected by this issue. Due to the limited scope of affected deployments this has been assessed as low severity and therefore we are not creating new releases at this time. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).</p>
  ",OpenSSL Windows builds with insecure path defaults (CVE-2019-1552),Moderate,68.005950927734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open or preview a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2017-8717: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,540.06884765625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-0156: Win32k Elevation of Privilege Vulnerability,Severe,489.433746337890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed and one privately reported vulnerability in Microsoft Windows. The more severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to a system and runs a specially crafted application.</p>
  ",MS12-032: Vulnerability in TCP/IP Could Allow Elevation of Privilege (2688338),Severe,769.95440673828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1159: Windows Kernel Elevation of Privilege Vulnerability,Severe,314.917999267578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0877, CVE-2020-0887.</p>
  ",Microsoft CVE-2020-0788: Win32k Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Microsoft Windows fails to properly validate and enforce impersonation levels. An attacker who successfully exploited this vulnerability could bypass impersonation-level security checks and gain elevated privileges on a targeted system. </p>
  ",MS15-102: Vulnerabilities in Windows Task Management Could Allow Elevation of Privilege  (3089657),Severe,673.89044189453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Microsoft Windows when the Windows DirectWrite library improperly handles OpenType fonts. An attacker who successfully exploited this vulnerability could potentially read data which was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system. </p>
  ",MS15-044: Vulnerabilities in Microsoft Font Drivers Could Allow Remote Code Execution (3057110),Critical,681.0059814453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in the MHTML protocol handler in Microsoft Windows. The vulnerability could allow information disclosure if a user opens a specially crafted URL from an attacker&#39;s web site. An attacker would have to convince the user to visit the web site, typically by getting them to follow a link in an e-mail message or Instant Messenger message.</p>
  ",MS11-037: Vulnerability in MHTML Could Allow Information Disclosure (2544893),Severe,219.521240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0145: Windows SMB Remote Code Execution Vulnerability,Critical,918.75
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0901: Windows Kernel Information Disclosure Vulnerability,Moderate,287.498443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A tampering vulnerability exists in PowerShell that could allow an attacker to execute unlogged code.
To exploit this vulnerability, an attacker would need to log on to the affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting log management of special characters.
</p>
  ",Microsoft CVE-2018-8415: Microsoft PowerShell Tampering Vulnerability,Severe,327.5281982421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0616: Windows GDI Information Disclosure Vulnerability,Severe,279.7117919921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0793: MS XML Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the TS WebProxy Windows component. The vulnerability is caused when Windows fails to properly sanitize file paths. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The update addresses the vulnerability by correcting how Windows sanitizes file paths.</p>
  ",MS15-004: Vulnerability in Windows Components Could Allow Elevation of Privilege (3025421),Critical,766.854248046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves six privately reported vulnerabilities in Internet Explorer. These vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-018: Cumulative Security Update for Internet Explorer (2950467),Critical,726.15081787109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-0829: Windows Kernel Information Disclosure Vulnerability,Moderate,270.14111328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Code Integrity Module handles objects in memory.  An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application or convince a target to run a crafted application.
The security update addresses the vulnerability by modifying how the Code Integrity Module handles objects in memory.
</p>
  ",Microsoft CVE-2019-1344: Windows Code Integrity Module Information Disclosure Vulnerability,Moderate,193.831878662109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2019-1435: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,285.2095947265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully decode and replace authentication request using Kerberos, allowing an attacker to be validated as an Administrator.
The update addresses this vulnerability by changing how these requests are validated.
</p>
  ",Microsoft CVE-2019-0734: Windows Elevation of Privilege Vulnerability,Critical,404.17913818359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8533: Windows GDI Information Disclosure Vulnerability,Severe,367.7523193359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS12-045: Vulnerability in Microsoft Data Access Components Could Allow Remote Code Execution (2698365),Critical,781.21356201171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2018-0814: Windows Kernel Information Disclosure Vulnerability,Moderate,299.9879150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2018-8419: Windows Kernel Information Disclosure Vulnerability,Moderate,269.7406005859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectX improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how DirectX handles objects in memory.
</p>
  ",Microsoft CVE-2019-1216: DirectX Information Disclosure Vulnerability,Moderate,199.789993286132812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. The update addresses the vulnerabilities by modifying the way that Internet Explorer handles objects in memory.</p>
  ",MS15-018: Cumulative Security Update for Internet Explorer (3032359),Critical,726.541015625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when a Windows Crypto driver running in kernel mode improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#39;s system. </p>
  ",MS16-149: Security Update for Microsoft Windows  (3205655),Severe,557.428466796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple elevation of privilege vulnerabilities exist in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS16-062: Security Update for Windows Kernel-Mode Drivers (3158222),Severe,634.34271240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows Performance Monitor Console when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create specially crafted XML data and convince an authenticated user to create a Data Collector Set and import the file. To create a Data Collector Set, the user must be a member of the Performance Log Users or Local Administrators group.
The update addresses the vulnerability by modifying the way that the Windows Performance Monitor Console parses XML input.
</p>
  ",Microsoft CVE-2017-0170: Windows Performance Monitor Information Disclosure Vulnerability,Severe,121.431556701660156
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_mime.  Review your web server configuration for validation.  mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.</p>
  ",Apache HTTPD: mod_mime Buffer Overread (CVE-2017-7679),Critical,629.50152587890625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_mime.  Review your web server configuration for validation.  mod_mime can read one byte past the end of a buffer when sending a malicious Content-Type response header.</p>
  ",Apache HTTPD: mod_mime Buffer Overread (CVE-2017-7679),Critical,629.50152587890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1155: Jet Database Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1467: Windows GDI Information Disclosure Vulnerability,Severe,224.566131591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0627: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
        SSH contains a vulnerability in the way certain types of errors are handled. Attacks leveraging this vulnerabilty would lead to the loss of the SSH session. According to CPNI Vulnerability Advisory SSH:
    </p>
    
<p>
        If exploited, this attack can potentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary block of 
        ciphertext from a connection secured using the SSH protocol in the standard configuration. If OpenSSH is used in the standard 
        configuration, then the attacker&#39;s success probability for recovering 32 bits of plaintext is 2^{-18}. A variant of the attack 
        against OpenSSH in the standard configuration can verifiably recover 14 bits of plaintext with probability 2^{-14}. The success 
        probability of the attack for other implementations of SSH is not known.
    </p>
  ",SSH CBC vulnerability,Moderate,476.0645751953125
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>
        SSH contains a vulnerability in the way certain types of errors are handled. Attacks leveraging this vulnerabilty would lead to the loss of the SSH session. According to CPNI Vulnerability Advisory SSH:
    </p>
    
<p>
        If exploited, this attack can potentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary block of 
        ciphertext from a connection secured using the SSH protocol in the standard configuration. If OpenSSH is used in the standard 
        configuration, then the attacker&#39;s success probability for recovering 32 bits of plaintext is 2^{-18}. A variant of the attack 
        against OpenSSH in the standard configuration can verifiably recover 14 bits of plaintext with probability 2^{-14}. The success 
        probability of the attack for other implementations of SSH is not known.
    </p>
  ",SSH CBC vulnerability,Moderate,476.0645751953125
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
        SSH contains a vulnerability in the way certain types of errors are handled. Attacks leveraging this vulnerabilty would lead to the loss of the SSH session. According to CPNI Vulnerability Advisory SSH:
    </p>
    
<p>
        If exploited, this attack can potentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary block of 
        ciphertext from a connection secured using the SSH protocol in the standard configuration. If OpenSSH is used in the standard 
        configuration, then the attacker&#39;s success probability for recovering 32 bits of plaintext is 2^{-18}. A variant of the attack 
        against OpenSSH in the standard configuration can verifiably recover 14 bits of plaintext with probability 2^{-14}. The success 
        probability of the attack for other implementations of SSH is not known.
    </p>
  ",SSH CBC vulnerability,Moderate,476.0645751953125
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
        SSH contains a vulnerability in the way certain types of errors are handled. Attacks leveraging this vulnerabilty would lead to the loss of the SSH session. According to CPNI Vulnerability Advisory SSH:
    </p>
    
<p>
        If exploited, this attack can potentially allow an attacker to recover up to 32 bits of plaintext from an arbitrary block of 
        ciphertext from a connection secured using the SSH protocol in the standard configuration. If OpenSSH is used in the standard 
        configuration, then the attacker&#39;s success probability for recovering 32 bits of plaintext is 2^{-18}. A variant of the attack 
        against OpenSSH in the standard configuration can verifiably recover 14 bits of plaintext with probability 2^{-14}. The success 
        probability of the attack for other implementations of SSH is not known.
    </p>
  ",SSH CBC vulnerability,Moderate,476.0645751953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,324.495269775390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Microsoft Server Message Block (SMB) when an attacker forwards an authentication request intended for another service running on the same machine. An attacker who successfully exploited this vulnerability could execute arbitrary code with elevated permissions.</p>
  ",MS16-075: Security Update for Windows SMB Server (3164038),Severe,664.6868896484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>For Windows Vista, Windows Server 2008, Windows 7, and Windows Server 2008 R2 operating systems a remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) Server handles certain requests when an authenticated attacker sends specially crafted packets to the SMBv1 server. The vulnerability does not impact other SMB Server versions. </p>
  ",MS16-114: Security Update for Windows SMBv1 Server (3185879),Critical,565.39947509765625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>By sending request bodies in a slow loris way to plain resources, the h2 stream for that request unnecessarily occupied a server thread cleaning up that incoming data. This affects only HTTP/2 connections. A possible mitigation is to not enable the h2 protocol.</p>
  ",Apache HTTPD: DoS for HTTP/2 connections via slow request bodies (CVE-2018-17189),Severe,153.28546142578125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>By sending request bodies in a slow loris way to plain resources, the h2 stream for that request unnecessarily occupied a server thread cleaning up that incoming data. This affects only HTTP/2 connections. A possible mitigation is to not enable the h2 protocol.</p>
  ",Apache HTTPD: DoS for HTTP/2 connections via slow request bodies (CVE-2018-17189),Severe,153.28546142578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Kernel properly handles objects in memory.
</p>
  ",Microsoft CVE-2018-0820: Windows Kernel Elevation of Privilege Vulnerability,Severe,385.55914306640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1145: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0725: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory, allowing an attacker to retrieve information from a targeted system, aka &#39;Windows GDI Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0744: Windows GDI Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Background Intelligent Transfer Service (BITS) improperly handles symbolic links, aka &#39;Windows Background Intelligent Transfer Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0787: Windows Background Intelligent Transfer Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0756: MS XML Remote Code Execution Vulnerability,Critical,421.00726318359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the .NET Framework DTD parsing of certain specially crafted XML files. An attacker who successfully exploited this vulnerability could gain read access to local files on the target system.</p>
  ",MS15-118: Security Update for .NET Framework to Address Elevation of Privilege (3104507),Severe,429.08514404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1116: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1097: DirectWrite Information Disclosure Vulnerability,Moderate,212.878204345703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0085: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows improperly handles objects in memory. In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system. An attacker who successfully exploited this vulnerability could run processes in an elevated context. On systems with Windows 8.1 or later installed, this vulnerability can lead to denial of service.
The update addresses the vulnerability by correcting the way in which the Microsoft DirectX graphics kernel subsystem (dxgkrnl.sys) handles certain calls and escapes to preclude improper memory mapping and prevent unintended elevation from user-mode.
</p>
  ",Microsoft CVE-2017-0077: Dxgkrnl.sys Elevation of Privilege Vulnerability,Severe,528.27978515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.An attacker who successfully exploited this vulnerability could gain the same user rights as the local user, aka &#39;LNK Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0729: LNK Remote Code Execution Vulnerability,Severe,268.37261962890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory, aka &#39;GDI+ Remote Code Execution Vulnerability&#39;. This CVE ID is unique from CVE-2020-0883.</p>
  ",Microsoft CVE-2020-0881: GDI+ Remote Code Execution Vulnerability,Critical,315.58282470703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information vulnerability exists when Windows improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to read the contents of files on disk.
To exploit the vulnerability, an attacker would have to log onto an affected system and run a specially crafted application.
The update addresses the vulnerability by changing the way Windows discloses file information.
</p>
  ",Microsoft CVE-2019-0636: Windows Information Disclosure Vulnerability,Moderate,241.77685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-11765: Windows Kernel Information Disclosure Vulnerability,Moderate,323.4075927734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow elevation of privilege if an authenticated attacker sends specially crafted data to an affected workstation or server that uses .NET Remoting. .NET Remoting is not widely used by applications; only custom applications that have been specifically designed to use .NET Remoting would expose a system to the vulnerability.</p>
  ",MS14-026: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2958732),Critical,846.72186279296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8678: Windows Kernel Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0116: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves four privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if an attacker sends a specially crafted response to a Windows print spooler request. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS12-054: Vulnerabilities in Windows Networking Components Could Allow Remote Code Execution (2733594),Critical,856.83056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1152: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2019-1389: Windows Hyper-V Remote Code Execution Vulnerability,Critical,230.513198852539062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1411: DirectWrite Information Disclosure Vulnerability,Severe,230.073455810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in Windows Media Player when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a specifically crafted file.
The update addresses the vulnerability by correcting how Windows Media Player handles objects in memory.
</p>
  ",Microsoft CVE-2019-1481: Windows Media Player Information Disclosure Vulnerability,Severe,224.566131591796875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow information disclosure if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs). In a Web-based attack scenario, an attacker could host a Web site that contains a Web page that is used to exploit this vulnerability. In addition, compromised Web sites and Web sites that accept or host user-provided content or advertisements could contain specially crafted content that could exploit this vulnerability. In all cases, however, an attacker would have no way to force users to visit these Web sites. Instead, an attacker would have to convince users to visit the Web site, typically by getting them to click a link in an e-mail message or Instant Messenger message that takes users to the attacker&#39;s Web site. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-069: Vulnerability in .NET Framework Could Allow Information Disclosure (2567951),Severe,524.69647216796875
10,ivm-agent-ub18.vuln.lax.rapid7.com,10.4.29.57,00:50:56:94:a8:d1,2020-06-16 08:03:34.834,0,"
    
<p>
      The remote host responded with a TCP timestamp.  The TCP timestamp response
      can be used to approximate the remote host&#39;s uptime, potentially aiding in
      further attacks.  Additionally, some operating systems can be fingerprinted
      based on the behavior of their TCP timestamps.
    </p>
  ",TCP timestamp response,Moderate,0
3,integrations-idr-collector.vuln.lax.rapid7.com,10.4.22.91,00:50:56:94:90:7f,2020-06-16 08:02:19.066,0,"
    
<p>
      The remote host responded with a TCP timestamp.  The TCP timestamp response
      can be used to approximate the remote host&#39;s uptime, potentially aiding in
      further attacks.  Additionally, some operating systems can be fingerprinted
      based on the behavior of their TCP timestamps.
    </p>
  ",TCP timestamp response,Moderate,0
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
      The remote host responded with a TCP timestamp.  The TCP timestamp response
      can be used to approximate the remote host&#39;s uptime, potentially aiding in
      further attacks.  Additionally, some operating systems can be fingerprinted
      based on the behavior of their TCP timestamps.
    </p>
  ",TCP timestamp response,Moderate,0
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
      The remote host responded with a TCP timestamp.  The TCP timestamp response
      can be used to approximate the remote host&#39;s uptime, potentially aiding in
      further attacks.  Additionally, some operating systems can be fingerprinted
      based on the behavior of their TCP timestamps.
    </p>
  ",TCP timestamp response,Moderate,0
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>
      The remote host responded with a TCP timestamp.  The TCP timestamp response
      can be used to approximate the remote host&#39;s uptime, potentially aiding in
      further attacks.  Additionally, some operating systems can be fingerprinted
      based on the behavior of their TCP timestamps.
    </p>
  ",TCP timestamp response,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in Windows COM Aggregate Marshaler. An attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit the vulnerability, an attacker could run a specially crafted application that could exploit the vulnerability. This vulnerability by itself does not allow arbitrary code to be run.  However, this vulnerability could be used in conjunction with one or more vulnerabilities (e.g. a remote code execution vulnerability and another elevation of privilege) that could take advantage of the elevated privileges when running.
The update addresses the vulnerability by correcting how Windows COM Marshaler processes interface requests.
</p>
  ",Microsoft CVE-2018-8550: Windows COM Elevation of Privilege Vulnerability,Severe,347.96826171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0617: Jet Database Engine Remote Code Execution Vulnerability,Critical,421.00726318359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1132: Win32k Elevation of Privilege Vulnerability,Severe,325.969757080078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege exists in Windows Audio Service. An attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit the vulnerability, an attacker could run a specially crafted application that could exploit the vulnerability. This vulnerability by itself does not allow arbitrary code to be run.  However, this vulnerability could be used in conjunction with one or more vulnerabilities (e.g. a remote code execution vulnerability and another elevation of privilege) that could take advantage of the elevated privileges when running.
The update addresses the vulnerability by correcting how the Windows Audio Service handles processes these requests.
</p>
  ",Microsoft CVE-2019-1088: Windows Audio Service Elevation of Privilege Vulnerability,Severe,269.645721435546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A tampering vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLM MIC (Message Integrity Check) protection. An attacker who successfully exploited this vulnerability could gain the ability to downgrade NTLM security features.
To exploit this vulnerability, the attacker would need to tamper with the NTLM exchange. The attacker could then modify flags of the NTLM packet without invalidating the signature.
The update addresses the vulnerability by hardening NTLM MIC protection on the server-side.
</p>
  ",Microsoft CVE-2019-1040: Windows NTLM Tampering Vulnerability,Severe,107.896163940429688
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in Windows Media Center. The vulnerability could allow remote code execution if an attacker convinces a user to open a legitimate file that is located in the same network directory as a specially crafted dynamic link library (DLL) file. Then, while opening the legitimate file, Windows Media Center could attempt to load the DLL file and execute any code it contained. For an attack to be successful, a user must visit an untrusted remote file system location or WebDAV share and open a legitimate file.</p>
  ",MS11-076: Vulnerability in Windows Media Center Could Allow Remote Code Execution (2604926),Critical,799.60589599609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8580: Win32k Elevation of Privilege Vulnerability,Severe,439.31597900390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows if the Windows Secondary Logon Service fails to properly manage request handles in memory. An attacker who successfully exploited this vulnerability could run arbitrary code as an administrator. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-032: Security Update for Secondary Logon to Address Elevation of Privilege (3143141),Severe,645.08428955078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A vulnerability exists in Windows Media Center that could allow remote code execution if Windows Media Center opens a specially crafted Media Center link (.mcl) file that references malicious code. An attacker who successfully exploited this vulnerability could take control of an affected system. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. Workstations are primarily at risk of this vulnerability.</p>
  ",MS16-059: Security Update for Windows Media Center (3150220),Critical,664.46075439453125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8477: Windows Kernel Information Disclosure Vulnerability,Moderate,253.491928100585938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-0716: Windows Denial of Service Vulnerability,Severe,113.975601196289062
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1147: Jet Database Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1156: Jet Database Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,150.4931640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,710.63665771484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that comctl32.dll handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The security update addresses the vulnerability by modifying how comctl32.dll handles objects in memory.
</p>
  ",Microsoft CVE-2019-0765: Comctl32 Remote Code Execution Vulnerability,Critical,421.00726318359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-112: Cumulative Security Update for Internet Explorer (3104517),Critical,691.227294921875
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      The SSLv3 protocol and supported ciphers all suffer from serious vulnerabilities making this protocol unsafe to use.
    </p>

    
<p>
      The Payment Card Industry (PCI) Data Security Standard requires a minimum of TLS v1.1 and recommends TLS v1.2. In addition, FIPS 140-2 standard also requires a minimum of TLS v1.1 and recommends TLS v1.2.
    </p>
  ",TLS/SSL Server Supports SSLv3,Severe,495.780517578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
        Microsoft is aware of a new publicly disclosed class of vulnerabilities referred to as &#39;speculative execution side-channel attacks&#39; that affect many modern processors and operating systems including Intel, AMD, and ARM. Note: this issue will affect other systems such as Android, Chrome, iOS, MacOS, so we advise customers to seek out guidance from those vendors.

        An attacker who successfully exploited these vulnerabilities may be able to read privileged data across trust boundaries. In shared resource environments (such as exists in some cloud services configurations), these vulnerabilities could allow one virtual machine to improperly access information from another. In non-browsing scenarios on standalone systems, an attacker would need prior access to the system or an ability to run code on the system to leverage these vulnerabilities.

        Microsoft has released updates to help mitigate these vulnerabilities. To get all available protections, firmware (microcode) and software updates are required. This may include microcode from device OEMs and in some cases updates to AV software as well. In some cases, installing these updates will have a performance impact. We have also taken action to secure our cloud services.

        Microsoft has no information to indicate that these vulnerabilities have been used to attack customers at this time. Microsoft continues working closely with industry partners including chip makers, hardware OEMs, and app vendors to protect customers.

        Please review Microsoft Security Advisory ADV180002 for more details.
    </p>
  ",Microsoft CVE-2017-5754: Guidance to mitigate speculative execution side-channel vulnerabilities,Severe,346.502777099609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a specially crafted Microsoft Office file that invokes Windows Media Center resources. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-043: Vulnerability in Windows Media Center Could Allow Remote Code Execution (2978742),Severe,589.724853515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow elevation of privilege if an attacker sends specially crafted data to an affected workstation or server that uses 
<a href=""https://technet.microsoft.com/library/security/dn848375.aspx#MS_NET_Remoting"">.NET Remoting</a>. Only custom applications that have been specifically designed to use .NET Remoting would expose a system to the vulnerability.</p>
  ",MS14-072: Vulnerability in .NET Framework Could Allow Elevation of Privilege (3005210),Critical,736.60455322265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when the Windows kernel fails to properly handle parsing of certain symbolic links. An attacker who successfully exploited this vulnerability could potentially access privileged registry keys and thereby elevate permissions. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-060: Security Update for Windows Kernel (3154846),Severe,596.528076171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0084: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.79705810546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0124: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0899: Windows Kernel Information Disclosure Vulnerability,Moderate,265.230316162109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8174: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,429.744781494140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8621: Windows Kernel Information Disclosure Vulnerability,Moderate,253.491928100585938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0629: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.21014404296875
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>A query with a specific set of characteristics could cause a server using DNS64 to encounter an assertion failure and terminate. An attacker could deliberately construct a query, enabling denial-of-service against a server if it was configured to use the DNS64 feature and other preconditions were met. Affects BIND 9.8.0 -&gt; 9.8.8-P1, 9.9.0 -&gt; 9.9.9-P6, 9.9.10b1-&gt;9.9.10rc1, 9.10.0 -&gt; 9.10.4-P6, 9.10.5b1-&gt;9.10.5rc1, 9.11.0 -&gt; 9.11.0-P3, 9.11.1b1-&gt;9.11.1rc1, 9.9.3-S1 -&gt; 9.9.9-S8.</p>
  ","ISC BIND: An error handling synthesized records could cause an assertion failure when using DNS64 with ""break-dnssec yes;"" (CVE-2017-3136)",Severe,123.759963989257812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in the 
<a href=""https://technet.microsoft.com/en-us/library/security/dn848375.aspx#Schannel"">Microsoft Secure Channel (Schannel)</a> security package in Windows. The vulnerability could allow remote code execution if an attacker sends specially crafted packets to a Windows server. </p>
  ",MS14-066: Vulnerability in Schannel Could Allow Remote Code Execution (2992611),Critical,823.29901123046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel handles objects in memory. An attacker who successfully exploited the
vulnerability could execute code with elevated permissions. On systems with Windows 7 for x64-based Systems or later installed, this vulnerability can lead to denial of service.
To exploit the vulnerability, an attacker would have to either log on locally to an affected system, or convince a locally authenticated user to execute a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Kernel properly handles objects in memory.
</p>
  ",Microsoft CVE-2017-0244: Windows Kernel Elevation of Privilege Vulnerability,Severe,483.042266845703125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel API enforces permissions. An attacker who successfully exploited the vulnerability could impersonate processes, interject cross-process communication, or interrupt system functionality.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly enforces permissions.
</p>
  ",Microsoft CVE-2018-0748: Windows Elevation of Privilege Vulnerability,Severe,419.909515380859375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2018-0813: Windows Kernel Information Disclosure Vulnerability,Moderate,299.9879150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2018-0959: Windows Hyper-V Remote Code Execution Vulnerability,Severe,370.49237060546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1158: Windows Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1252: Windows GDI Information Disclosure Vulnerability,Severe,242.171249389648438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by resolving a number of conditions where Hyper-V would fail to prevent a guest operating system from sending malicious requests.
</p>
  ",Microsoft CVE-2019-0713: Windows Hyper-V Denial of Service Vulnerability,Severe,108.281402587890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1094: Windows GDI Information Disclosure Vulnerability,Severe,253.873443603515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8542: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.356521606445312
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 08:04:59.46,3298.68641662597656,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.0,Severe,461.027374267578125
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.0,Severe,461.027374267578125
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.0,Severe,461.027374267578125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.0,Severe,461.027374267578125
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>The PCI (Payment Card Industry) Data Security Standard requires a minimum of TLS v1.1
    and recommends TLS v1.2. In addition, FIPS 140-2 standard requires a minimum of
    TLS v1.1 and recommends TLS v1.2.</p>
  ",TLS Server Supports TLS version 1.0,Severe,461.027374267578125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>To provide fine-grained controls over the ability to use Dynamic DNS (DDNS) to update records in a zone, BIND 9 provides a feature called update-policy. Various rules can be configured to limit the types of updates that can be performed by a client, depending on the key used when sending the update request. Unfortunately, some rule types were not initially documented, and when documentation for them was added to the Administrator Reference Manual (ARM) in change #3112, the language that was added to the ARM at that time incorrectly described the behavior of two rule types, krb5-subdomain and ms-subdomain. This incorrect documentation could mislead operators into believing that policies they had configured were more restrictive than they actually were. This affects BIND versions prior to BIND 9.11.5 and BIND 9.12.3.</p>
  ",ISC BIND: Update policies krb5-subdomain and ms-subdomain not honouring configuration restriction (CVE-2018-5741),Severe,107.157752990722656
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8544: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,473.39971923828125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly allows COM object creation. An attacker who successfully exploited this vulnerability could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted script or application.
The update addresses the vulnerability by correcting how the Windows UPnP service accesses COM objects.
</p>
  ",Microsoft CVE-2019-1405: Windows UPnP Service Elevation of Privilege Vulnerability,Severe,325.85443115234375
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,134.924148559570312
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to open an email attachment or click a link in an email or instant message.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince users to open the document file.

The security update addresses the vulnerability by correcting the way that the Windows GDI handles objects in the memory.
</p>
  ",Microsoft CVE-2019-0853: GDI+ Remote Code Execution Vulnerability,Critical,413.59710693359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk. 
    </p>
    
<p>
The update addresses the vulnerability by correcting the manner in which the Microsoft Malware Protection Engine scans specially crafted files.
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8558: Malware Protection Engine Remote Code Execution Vulnerability,Critical,592.25433349609375
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>When the path component of a request URL contains multiple consecutive slashes (&#39;/&#39;), directives such as LocationMatch and RewriteRule must account for duplicates in regular expressions while other aspects of the servers processing will implicitly collapse them.</p>
  ",Apache HTTPD: Apache httpd URL normalization inconsistincy (CVE-2019-0220),Severe,454.735504150390625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>When the path component of a request URL contains multiple consecutive slashes (&#39;/&#39;), directives such as LocationMatch and RewriteRule must account for duplicates in regular expressions while other aspects of the servers processing will implicitly collapse them.</p>
  ",Apache HTTPD: Apache httpd URL normalization inconsistincy (CVE-2019-0220),Severe,454.735504150390625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-0073: Windows GDI Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2017-0025: Windows GDI Elevation of Privilege Vulnerability,Severe,575.44146728515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0115: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A denial of service vulnerability exists when Windows improperly handles File Transfer Protocol (FTP) connections. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit the vulnerability, an unauthenticated attacker could send specially crafted packets to a Windows computer that is processing connections on TCP port 21. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The security update addresses the vulnerability by correcting how Windows handles FTP connections.
</p>
  ",Microsoft CVE-2018-8206: Windows Firewall Denial of Service Vulnerability,Critical,276.361328125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft Graphics Components handle objects in memory. An attacker who successfully exploited the vulnerability could execute arbitrary code on a target system.
To exploit the vulnerability, a user would have to open a specially crafted file.
The security update addresses the vulnerability by correcting how Microsoft Graphics Components handle objects in memory.
</p>
  ",Microsoft CVE-2018-8432: Microsoft Graphics Components Remote Code Execution Vulnerability,Critical,459.862274169921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8565: Win32k Information Disclosure Vulnerability,Moderate,258.57489013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory, aka &#39;Windows Kernel Information Disclosure Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0736: Windows Kernel Information Disclosure Vulnerability,Moderate,165.903350830078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0722: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A memory corruption vulnerability exists in the Windows Server DHCP service when an attacker sends specially crafted packets to a DHCP server. An attacker who successfully exploited the vulnerability could run arbitrary code on the DHCP server.
To exploit the vulnerability, an attacker could send a specially crafted packet to a DHCP server.
The security update addresses the vulnerability by correcting how DHCP servers handle network packets.
</p>
  ",Microsoft CVE-2019-0626: Windows DHCP Server Remote Code Execution Vulnerability,Critical,580.69580078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1012: Windows GDI Information Disclosure Vulnerability,Severe,258.9508056640625
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 08:02:17.742,3036.66845703125,"
      
<p>
         This system enables, but does not require SMB signing. SMB signing
         allows the recipient of SMB packets to confirm their authenticity and
         helps prevent man in the middle attacks against SMB. SMB 2.x signing
         can be configured in one of two ways: not required (least secure) and
         required (most secure).
      </p>
   ",SMBv2 signing not required,Severe,837.05517578125
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
      
<p>
         This system enables, but does not require SMB signing. SMB signing
         allows the recipient of SMB packets to confirm their authenticity and
         helps prevent man in the middle attacks against SMB. SMB 2.x signing
         can be configured in one of two ways: not required (least secure) and
         required (most secure).
      </p>
   ",SMBv2 signing not required,Severe,837.05517578125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
      
<p>
         This system enables, but does not require SMB signing. SMB signing
         allows the recipient of SMB packets to confirm their authenticity and
         helps prevent man in the middle attacks against SMB. SMB 2.x signing
         can be configured in one of two ways: not required (least secure) and
         required (most secure).
      </p>
   ",SMBv2 signing not required,Severe,837.05517578125
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
      
<p>
         This system enables, but does not require SMB signing. SMB signing
         allows the recipient of SMB packets to confirm their authenticity and
         helps prevent man in the middle attacks against SMB. SMB 2.x signing
         can be configured in one of two ways: not required (least secure) and
         required (most secure).
      </p>
   ",SMBv2 signing not required,Severe,837.05517578125
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 08:05:03.326,7147.98670959472656,"
      
<p>
         This system enables, but does not require SMB signing. SMB signing
         allows the recipient of SMB packets to confirm their authenticity and
         helps prevent man in the middle attacks against SMB. SMB 2.x signing
         can be configured in one of two ways: not required (least secure) and
         required (most secure).
      </p>
   ",SMBv2 signing not required,Severe,837.05517578125
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 08:07:24,9482.48460388183594,"
    
<p>
      Recent cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSL/TLS sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",TLS/SSL Server Supports RC4 Cipher Algorithms (CVE-2013-2566),Severe,497.727813720703125
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 08:05:07.282,9309.97209167480469,"
    
<p>
      Recent cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSL/TLS sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",TLS/SSL Server Supports RC4 Cipher Algorithms (CVE-2013-2566),Severe,497.727813720703125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>
      Recent cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSL/TLS sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",TLS/SSL Server Supports RC4 Cipher Algorithms (CVE-2013-2566),Severe,497.727813720703125
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_userdir.  Review your web server configuration for validation.  Possible CRLF injection allowing HTTP response splitting attacks for sites which use mod_userdir.  This issue was mitigated by changes made in 2.4.25 and 2.2.32 which prohibit CR or LF injection into the &quot;Location&quot; or other outbound header key or value.</p>
  ",Apache HTTPD: mod_userdir CRLF injection (CVE-2016-4975),Severe,128.705108642578125
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_userdir.  Review your web server configuration for validation.  Possible CRLF injection allowing HTTP response splitting attacks for sites which use mod_userdir.  This issue was mitigated by changes made in 2.4.25 and 2.2.32 which prohibit CR or LF injection into the &quot;Location&quot; or other outbound header key or value.</p>
  ",Apache HTTPD: mod_userdir CRLF injection (CVE-2016-4975),Severe,128.705108642578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves three privately reported vulnerabilities in Microsoft .NET Framework. The most severe of the vulnerabilities could allow remote code execution if an attacker sends a specially crafted URI request containing international characters to a .NET web application. In .NET 4.0 and below applications, the vulnerable functionality (iriParsing) is disabled by default; for the vulnerability to be exploitable an application has to explicitly enable this functionality. In .NET 4.5 applications, iriParsing is enabled by default and cannot be disabled.</p>
  ",MS14-057: Vulnerabilities in .NET Framework Could Allow Remote Code Execution (3000414),Critical,839.614013671875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8689: Windows Kernel Elevation of Privilege Vulnerability,Severe,446.14996337890625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy.  Review your web server configuration for validation.  A limited cross-site scripting issue was reported affecting the mod_proxy error page. An attacker could cause the link on the error page to be malfomed and instead point to a page of their choice. This would only be exploitable where a server was set up with proxying enabled but was misconfigured in such a way that the Proxy Error page was displayed. We have taken this opportunity to also remove request data from many other in-built error messages.  Note however this issue did not affect them directly and their output was already escaped to prevent cross-site scripting attacks.</p>
  ",Apache HTTPD: Limited cross-site scripting in mod_proxy error page (CVE-2019-10092),Severe,102.858993530273438
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy.  Review your web server configuration for validation.  A limited cross-site scripting issue was reported affecting the mod_proxy error page. An attacker could cause the link on the error page to be malfomed and instead point to a page of their choice. This would only be exploitable where a server was set up with proxying enabled but was misconfigured in such a way that the Proxy Error page was displayed. We have taken this opportunity to also remove request data from many other in-built error messages.  Note however this issue did not affect them directly and their output was already escaped to prevent cross-site scripting attacks.</p>
  ",Apache HTTPD: Limited cross-site scripting in mod_proxy error page (CVE-2019-10092),Severe,102.858993530273438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. For all systems except Windows 10, an attacker who successfully exploited the vulnerability could execute code remotely. For systems running Windows 10, an attacker who successfully exploited the vulnerability could execute code in an AppContainer sandbox context with limited privileges and capabilities. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
There are multiple ways an attacker could exploit the vulnerability, such as by either convincing a user to open a specially crafted document, or by convincing a user to visit a webpage that contains specially crafted embedded OpenType fonts.
The update addresses the vulnerability by correcting how the Windows Adobe Type Manager Library handles OpenType fonts.
</p>
  ",Microsoft CVE-2019-1456: OpenType Font Parsing Remote Code Execution Vulnerability,Severe,291.426361083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Connected User Experiences and Telemetry Service improperly handles file operations, aka &#39;Connected User Experiences and Telemetry Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0844: Connected User Experiences and Telemetry Service Elevation of Privilege Vulnerability,Severe,201.958267211914062
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 08:06:00.615,7311.62422180175781,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
17,qradar-7-2-6.vuln.lax.rapid7.com,10.4.22.151,00:50:56:94:aa:8c,2020-06-16 08:02:48.069,1046.80760192871094,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 08:02:17.741,1546.83717346191406,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 08:03:17.363,1546.83717346191406,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 08:08:53.48,7748.99053955078125,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 08:06:55.624,2572.28282165527344,"
    
<p>
      The server supports one or more weak key exchange algorithms. It is highly adviseable to remove weak key exchange algorithm support from SSH configuration files on hosts to prevent them from being used to establish connections.
    </p>
  ",SSH Server Supports Weak Key Exchange Algorithms,Severe,364.045745849609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Hyper-V validates guest operating system user input.
</p>
  ",Microsoft CVE-2019-0722: Windows Hyper-V Remote Code Execution Vulnerability,Critical,319.447662353515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows Object Manager when it fails to properly validate and enforce impersonation levels. An attacker who successfully exploited this vulnerability could bypass impersonation-level security and gain elevated privileges on a targeted system. </p>
  ",MS15-090: Vulnerabilities in Microsoft Windows Could Allow Elevation of Privilege  (3060716),Critical,669.30908203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves one publicly disclosed vulnerability and one privately reported vulnerability in Microsoft Windows. The more severe of these vulnerabilities could allow remote code execution if an attacker sent a specially crafted SMB response to a client-initiated SMB request. To exploit the vulnerability, an attacker must convince the user to initiate an SMB connection to a specially crafted SMB server.</p>
  ",MS11-019: Vulnerabilities in SMB Client Could Allow Remote Code Execution (2511455),Critical,883.793212890625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"Multiple information disclosure vulnerabilities exist in the way that the Color Management Module (ICM32.dll) handles objects in memory. These vulnerabilities allow an attacker to retrieve information to bypass usermode&#160;ASLR (Address Space Layout Randomization) on a targeted system. By itself, the information disclosures do not allow arbitrary code execution; however, they could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
The security update addresses the vulnerability by correcting how Color Management Module handles objects in memory.",Microsoft CVE-2017-0061: Microsoft Color Management Information Disclosure Vulnerability,Moderate,352.9422607421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves three publicly disclosed vulnerabilities and seven privately reported vulnerabilities in Microsoft Office, Microsoft Windows, the Microsoft .NET Framework, and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a user opens a specially crafted document or visits a malicious webpage that embeds TrueType font files. An attacker would have no way to force users to visit a malicious website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes them to the attacker&#39;s website.</p>
  ","MS12-034: Combined Security Update for Microsoft Office, Windows, .NET Framework, and Silverlight (2681578)",Critical,905.18377685546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0973: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107177734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the ssdpsrv.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the ssdpsrv.dll properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1178: Windows Elevation of Privilege Vulnerability,Severe,260.50360107421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Network Connections Service handles objects in memory, aka &#39;Windows Network Connections Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0778, CVE-2020-0802, CVE-2020-0804, CVE-2020-0845.</p>
  ",Microsoft CVE-2020-0803: Windows Network Connections Service Elevation of Privilege Vulnerability,Severe,244.14361572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,324.019744873046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Active Directory Forest trusts due to a default setting that lets an attacker in the trusting forest request delegation of a TGT for an identity from the trusted forest. To exploit this vulnerability, an attacker would first need to compromise an Active Directory forest.
An attacker who successfully exploited this vulnerability could request delegation of a TGT for an identity from the trusted forest.
This update addresses the vulnerability by ensuring new Active Directory Forest trusts disable TGT delegation by default. The update does not change existing TGT delegation configurations.
</p>
  ",Microsoft CVE-2019-0683: Active Directory Elevation of Privilege Vulnerability,Severe,114.559799194335938
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2017-11785: Windows Kernel Information Disclosure Vulnerability,Moderate,345.09820556640625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in the Security Account Manager (SAM) and Local Security Authority (Domain Policy) (LSAD) remote protocols when they accept authentication levels that do not protect them adequately. The vulnerability is caused by the way the SAM and LSAD remote protocols establish the Remote Procedure Call (RPC) channel. An attacker who successfully exploited this vulnerability could gain access to the SAM database.</p>
  ",MS16-047: Security Update for SAM and LSAD Remote Protocols (3148527),Severe,483.715667724609375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0117: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.540924072265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves a publicly disclosed vulnerability in SSL 3.0 and TLS 1.0. This vulnerability affects the protocol itself and is not specific to the Windows operating system. The vulnerability could allow information disclosure if an attacker intercepts encrypted web traffic served from an affected system. TLS 1.1, TLS 1.2, and all cipher suites that do not use CBC mode are not affected.</p>
  ",MS12-006: Vulnerability in SSL/TLS Could Allow Information Disclosure (2643584),Severe,523.61572265625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft .NET Framework fails to validate input properly. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, an attacker would need to pass specific input to an application utilizing susceptible .Net methods.
The security update addresses the vulnerability by correcting how the Microsoft .NET Framework validates input.
</p>
  ",Microsoft CVE-2018-8284: .NET Framework Remote Code Injection Vulnerability,Critical,481.3807373046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2018-8420: MS XML Remote Code Execution Vulnerability,Critical,466.59368896484375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists when the Microsoft .NET Framework fails to validate input properly. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, an attacker would need to pass specific input to an application utilizing susceptible .Net methods.
The security update addresses the vulnerability by correcting how the Microsoft .NET Framework validates input.
</p>
  ",Microsoft CVE-2018-8540: .NET Framework Remote Code Injection Vulnerability,Critical,709.0811767578125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1244: DirectWrite Information Disclosure Vulnerability,Severe,242.171249389648438
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2019-1407: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,285.2095947265625
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 08:04:05.417,18454.3276290893555,"
    
<p>When an unrecognized HTTP Method is given in an &lt;Limit {method}&gt; directive in an .htaccess file, and that .htaccess file is processed by the corresponding request, the global methods table is corrupted in the current worker process, resulting in erratic behaviour. This behavior may be avoided by listing all unusual HTTP Methods in a global httpd.conf RegisterHttpMethod directive in httpd release 2.4.25 and later. To permit other .htaccess directives while denying the &lt;Limit &gt; directive, see the AllowOverrideList directive. Source code patch (2.4) is at; CVE-2017-9798-patch-2.4.patch Source code patch (2.2) is at; CVE-2017-9798-patch-2.2.patch Note 2.2 is end-of-life, no further release with this fix is planned. Users are encouraged to migrate to 2.4.28 or later for this and other fixes.</p>
  ","Apache HTTPD: Use-after-free when using <Limit > with an unrecognized method in .htaccess (""OptionsBleed"") (CVE-2017-9798)",Severe,500.617828369140625
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 08:03:48.159,14600.7524871826172,"
    
<p>When an unrecognized HTTP Method is given in an &lt;Limit {method}&gt; directive in an .htaccess file, and that .htaccess file is processed by the corresponding request, the global methods table is corrupted in the current worker process, resulting in erratic behaviour. This behavior may be avoided by listing all unusual HTTP Methods in a global httpd.conf RegisterHttpMethod directive in httpd release 2.4.25 and later. To permit other .htaccess directives while denying the &lt;Limit &gt; directive, see the AllowOverrideList directive. Source code patch (2.4) is at; CVE-2017-9798-patch-2.4.patch Source code patch (2.2) is at; CVE-2017-9798-patch-2.2.patch Note 2.2 is end-of-life, no further release with this fix is planned. Users are encouraged to migrate to 2.4.28 or later for this and other fixes.</p>
  ","Apache HTTPD: Use-after-free when using <Limit > with an unrecognized method in .htaccess (""OptionsBleed"") (CVE-2017-9798)",Severe,500.617828369140625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8684: Windows GDI+ Information Disclosure Vulnerability,Moderate,349.4227294921875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist in Microsoft Windows. The vulnerabilities could allow remote code execution if a user opens specially crafted media content that is hosted on a website. To exploit the vulnerabilities, an attacker could host media content on a website or send an attachment in an email and then convince a user to open it.</p>
  ",MS16-027: Security Update for Windows Media to Address Remote Code Execution (3143146),Critical,640.0723876953125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft Windows handles specially crafted Remote Procedure Call (RPC) requests. The remote code execution can occur when the RPC Network Data Representation (NDR) Engine improperly frees memory. An authenticated attacker who successfully exploited this vulnerability could execute arbitrary code and take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-061: Security Update for Microsoft RPC (3155520),Critical,588.13299560546875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The update addresses the vulnerability by correcting the way in which the Windows Graphics Component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1153: Microsoft Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Microsoft IIS Server fails to check the length of a buffer prior to copying memory to it.
An attacker who successfully exploited this vulnerability can allow an unprivileged function ran by the  user to execute code in the context of NT AUTHORITY\system escaping the Sandbox.
The security update addresses the vulnerability by correcting how Microsoft IIS Server sanitizes web requests.
</p>
  ",Microsoft CVE-2019-1365: Microsoft IIS Server Elevation of Privilege Vulnerability,Critical,280.601043701171875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,263.9537353515625
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,776.01751708984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A spoofing vulnerability exists when the Remote Desktop Session Host (RDSH) improperly validates certificates during authentication. An attacker who successfully exploited this vulnerability could impersonate the client session. </p>
  ",MS15-082: Vulnerabilities in RDP Could Allow Remote Code Execution (3080348),Critical,669.30908203125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk. 
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8541: Microsoft Malware Protection Engine Remote Code Execution Vulnerability,Critical,597.9896240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8709: Windows Kernel Information Disclosure Vulnerability,Moderate,295.890716552734375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>Multiple remote code execution vulnerabilities exist in the way that Internet Explorer accesses objects in memory. The vulnerabilities could corrupt memory in a way that could allow an attacker to execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerabilities could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS16-118: Cumulative Security Update for Internet Explorer (3192887),Critical,639.3670654296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8467: Win32k Elevation of Privilege Vulnerability,Severe,468.31146240234375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0855: Windows EOT Font Engine Information Disclosure Vulnerability,Severe,335.693328857421875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An information disclosure vulnerability exists when the Microsoft Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The update addresses the vulnerability by correcting the way in which the Windows Graphics Component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1148: Microsoft Graphics Component Information Disclosure Vulnerability,Moderate,205.660736083984375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine handles objects in memory. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1183: Windows VBScript Engine Remote Code Execution Vulnerability,Critical,378.862335205078125
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1364: Win32k Elevation of Privilege Vulnerability,Severe,296.8050537109375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists when Microsoft Cryptographic Services improperly handles files. An attacker could exploit the vulnerability to overwrite or modify a protected file leading to a privilege escalation.
To exploit the vulnerability, an attacker would first require execution on the victim system.
The security update addresses the vulnerability by addressing how Microsoft Cryptographic Services handles files.
</p>
  ",Microsoft CVE-2020-0620: Microsoft Cryptographic Services Elevation of Privilege Vulnerability,Severe,218.21014404296875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24.218,412228.595520019531,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0726: Win32k Elevation of Privilege Vulnerability,Severe,254.039505004882812

