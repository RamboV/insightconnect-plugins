# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get a page of scan configurations, based on supplied pagination parameters"


class Input:
    INCLUDEERRORS = "include-errors"
    INDEX = "index"
    SIZE = "size"
    SORT = "sort"
    

class Output:
    DATA = "data"
    LINKS = "links"
    METADATA = "metadata"
    

class GetScanConfigsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "include-errors": {
      "type": "boolean",
      "title": "Validation Errors",
      "description": "Include validation errors in scan configs, can be expensive",
      "default": false,
      "order": 4
    },
    "index": {
      "type": "integer",
      "title": "Index",
      "description": "The page number of the return data set",
      "default": 0,
      "order": 2
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "The data set size or the max number of apps to return per page",
      "default": 100,
      "order": 3
    },
    "sort": {
      "type": "string",
      "title": "Sort",
      "description": "How to sort the response",
      "default": "ASC",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetScanConfigsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Scan Configs",
      "description": "A list of scan configurations",
      "items": {
        "$ref": "#/definitions/scan_config"
      },
      "order": 2
    },
    "links": {
      "type": "array",
      "title": "Links to Data",
      "description": "Links to data",
      "items": {
        "$ref": "#/definitions/link"
      },
      "order": 3
    },
    "metadata": {
      "type": "object",
      "title": "Metadata",
      "description": "Metadata for the scan results",
      "order": 1
    }
  },
  "definitions": {
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "href": {
          "type": "string",
          "title": "Href",
          "description": "Href",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "rel",
          "order": 2
        }
      }
    },
    "scan_config": {
      "type": "object",
      "title": "scan_config",
      "properties": {
        "app_id": {
          "type": "string",
          "title": "App ID",
          "description": "App UUID",
          "order": 4
        },
        "assignment_environment": {
          "type": "string",
          "title": "Scan Environment",
          "description": "Which of two environments are used to run the scan action (Rapid7 Cloud or a custom engine group)",
          "order": 6
        },
        "assignment_id": {
          "type": "string",
          "title": "Scan Engine Group ID",
          "description": "UUID of a scan engine group.  No ID used for default groups",
          "order": 8
        },
        "assignment_type": {
          "type": "string",
          "title": "Scan Engine Group",
          "description": "This is always the string engine_group",
          "order": 7
        },
        "attack_template_id": {
          "type": "string",
          "title": "Attack Template ID",
          "description": "Attack template UUID",
          "order": 5
        },
        "config_description": {
          "type": "string",
          "title": "Description",
          "description": "The description of the scan configuration",
          "order": 3
        },
        "config_name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the scan configuration",
          "order": 2
        },
        "errors": {
          "type": "array",
          "title": "Errors",
          "description": "A list of errors that detail any current validation failures",
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "id": {
          "type": "string",
          "title": "UUID",
          "description": "The UUID of the scan configuration",
          "order": 1
        },
        "links": {
          "type": "array",
          "title": "Links",
          "description": "A list of links",
          "items": {
            "$ref": "#/definitions/link"
          },
          "order": 10
        }
      },
      "definitions": {
        "link": {
          "type": "object",
          "title": "link",
          "properties": {
            "href": {
              "type": "string",
              "title": "Href",
              "description": "Href",
              "order": 1
            },
            "rel": {
              "type": "string",
              "title": "Rel",
              "description": "rel",
              "order": 2
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
