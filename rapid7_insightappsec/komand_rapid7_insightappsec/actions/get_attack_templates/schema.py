# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get a list of all the available attack templates"


class Input:
    INDEX = "index"
    SIZE = "size"
    SORT = "sort"
    

class Output:
    DATA = "data"
    LINKS = "links"
    METADATA = "metadata"
    

class GetAttackTemplatesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "index": {
      "type": "integer",
      "title": "Index",
      "description": "The page number of the return data set",
      "default": 0,
      "order": 2
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "The data set size or the max number of apps to return per page",
      "default": 100,
      "order": 3
    },
    "sort": {
      "type": "string",
      "title": "Sort",
      "description": "How to sort the response",
      "default": "ASC",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAttackTemplatesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "App Data",
      "description": "App data",
      "items": {
        "$ref": "#/definitions/attack_template"
      },
      "order": 2
    },
    "links": {
      "type": "array",
      "title": "Links to Data",
      "description": "Links to data",
      "items": {
        "$ref": "#/definitions/link"
      },
      "order": 3
    },
    "metadata": {
      "type": "object",
      "title": "Metadata",
      "description": "Metadata for the app results",
      "order": 1
    }
  },
  "definitions": {
    "attack_template": {
      "type": "object",
      "title": "attack_template",
      "properties": {
        "description": {
          "type": "string",
          "title": "Attack Template Description",
          "description": "Describe the attack template",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "ID of the Attack Template",
          "description": "UUID of the attack template",
          "order": 5
        },
        "links": {
          "type": "array",
          "title": "Direct Platform Links",
          "description": "Direct links to the platform",
          "items": {
            "$ref": "#/definitions/link"
          },
          "order": 4
        },
        "name": {
          "type": "string",
          "title": "Name Of Attack Template",
          "description": "A name to identify an attack template",
          "order": 1
        },
        "system_defined": {
          "type": "boolean",
          "title": "System Default",
          "description": "To differentiate between default and custom templates",
          "order": 2
        }
      },
      "definitions": {
        "link": {
          "type": "object",
          "title": "link",
          "properties": {
            "href": {
              "type": "string",
              "title": "Href",
              "description": "Href",
              "order": 1
            },
            "rel": {
              "type": "string",
              "title": "Rel",
              "description": "rel",
              "order": 2
            }
          }
        }
      }
    },
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "href": {
          "type": "string",
          "title": "Href",
          "description": "Href",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "rel",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
