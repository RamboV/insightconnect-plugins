asset_id,host_name,ip_address,mac_address,last_assessed_for_vulnerabilities,asset_riskscore,vulnerability_description,vulnerability_title,vulnerability_severity,vulnerability_riskscore
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,289.453064
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0758: Windows GDI Information Disclosure Vulnerability,Severe,263.9537354
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>The OpenSSL ECDSA signature algorithm has been shown to be vulnerable to a timing side channel attack. An attacker could use variations in the signing algorithm to recover the private key. Fixed in OpenSSL 1.1.0j (Affected 1.1.0-1.1.0i). Fixed in OpenSSL 1.1.1a (Affected 1.1.1).</p>
  ",OpenSSL Timing vulnerability in ECDSA signature generation (CVE-2018-0735),Severe,297.1381531
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in Internet Explorer. The vulnerability could allow remote code execution if a user views a specially crafted webpage using an affected version of Internet Explorer. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-021: Security Update for Internet Explorer (2965111),Critical,892.3052979
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-8694: Windows Kernel Elevation of Privilege Vulnerability,Severe,446.1499634
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0272: Windows SMB Remote Code Execution Vulnerability,Critical,569.6296387
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle sandbox checks. An attacker who successfully exploited this vulnerability could potentially read data outside their expected limits.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application.
The security update addresses the vulnerability by correcting how CLFS handles sandbox checks.
</p>
  ",Microsoft CVE-2019-1282: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,199.7899933
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows Error Reporting (WER) when WER handles and executes files. The vulnerability could allow elevation of privilege if an attacker can successfully exploit it.
An attacker who successfully exploited the vulnerability could gain greater access to sensitive information and system functionality. To exploit the vulnerability, an attacker could run a specially crafted application.
The security update addresses the vulnerability by correcting the way that WER handles and executes files.
</p>
  ",Microsoft CVE-2019-1319: Windows Error Reporting Elevation of Privilege Vulnerability,Severe,296.8050537
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0625: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.210144
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>
      A Domain Name Server (DNS) amplification attack is a popular form of
      distributed denial of service (DDoS) that relies on the use of publically
      accessible open DNS servers to overwhelm a victim system with DNS response
      traffic.
    </p>
    
<p>
      A Domain Name Server (DNS) Amplification attack is a popular form of
      Distributed Denial of Service (DDoS), in which attackers use publically
      accessible open DNS servers to flood a target system with DNS response traffic.
      The primary technique consists of an attacker sending a DNS name lookup request
      to an open DNS server with the source address spoofed to be the target&#39;s
      address. When the DNS server sends the DNS record response, it is sent instead
      to the target. Attackers will typically submit a request for as much zone
      information as possible to maximize the amplification effect. In most attacks
      of this type observed by US-CERT, the spoofed queries sent by the attacker are
      of the type, &quot;ANY&quot; which returns all known information about a DNS zone in a
      single request. Because the size of the response is considerably larger than
      the request, the attacker is able to increase the amount of traffic directed at
      the victim. By leveraging a botnet to produce a large number of spoofed DNS
      queries, an attacker can create an immense amount of traffic with little
      effort. Additionally, because the responses are legitimate data coming from
      valid servers, it is extremely difficult to prevent these types of attacks.
      While the attacks are difficult to stop, network operators can apply several
      possible mitigation strategies.
    </p>
    
<p>
      While the most common form of this attack that US-CERT has observed
      involves DNS servers configured to allow unrestricted recursive resolution for
      any client on the Internet, attacks can also involve authoritative name servers
      that do not provide recursive resolution. The attack method is similar to open
      recursive resolvers, but is more difficult to mitigate since even a server
      configured with best practices can still be used in an attack. In the case of
      authoritative servers, mitigation should focus on using Response Rate Limiting
      to restrict the amount of traffic.
    </p>
  ",DNS Traffic Amplification,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-11852: Windows GDI Information Disclosure Vulnerability,Moderate,285.6090698
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Virtual Secure Mode improperly handles objects in memory. A locally-authenticated attacker who successfully exploited this vulnerability could be able to read sensitive information on the target system.</p>
  ",MS16-137: Security Update for Windows Authentication Methods (3199173),Severe,600.8841553
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0901: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.1791382
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the HTTP protocol stack (HTTP.sys) that is caused when HTTP.sys improperly parses specially crafted HTTP requests. An attacker who successfully exploited this vulnerability could execute arbitrary code in the context of the System account.</p>
  ",MS15-034: Vulnerability in HTTP.sys Could Allow Remote Code Execution (3042553),Critical,830.3041382
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8573: Win32k Elevation of Privilege Vulnerability,Severe,468.3114624
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0760: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2020-0608: Win32k Information Disclosure Vulnerability,Moderate,172.2711639
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0882: Windows GDI Information Disclosure Vulnerability,Severe,263.9537354
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1016: Windows GDI Information Disclosure Vulnerability,Severe,258.9508057
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2017-11815: Windows SMB Information Disclosure Vulnerability,Severe,287.9210205
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>named in ISC BIND 9.x before 9.9.9-P4, 9.10.x before 9.10.4-P4, and 9.11.x before 9.11.0-P1 allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a DNAME record in the answer section of a response to a recursive query, related to db.c and resolver.c.</p>
  ",ISC BIND: A problem handling responses containing a DNAME answer can lead to an assertion failure (CVE-2016-8864),Severe,169.5839081
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the (Human Interface Device) HID Parser Library driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how the HID Parser Library handles objects in memory.
</p>
  ",Microsoft CVE-2018-8169: HIDParser Elevation of Privilege Vulnerability,Severe,380.9133301
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8330: Windows Kernel Information Disclosure Vulnerability,Moderate,264.8238525
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0576: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.2850952
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1049: Windows GDI Information Disclosure Vulnerability,Severe,258.9508057
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves two publicly disclosed vulnerabilities in Microsoft Windows. The vulnerabilities could allow remote code execution if a user opened a specially crafted fax cover page file (.cov) using the Windows Fax Cover Page Editor. An attacker who successfully exploited either of these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS11-024: Vulnerabilities in Windows Fax Cover Page Editor Could Allow Remote Code Execution (2527308),Critical,817.814209
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
      Insight Agent on Windows systems searches for local dependencies in several locations, including in directories in the system PATH variable. As this can include arbitrary directories, and the Agent doesn&#39;t specify the directories to search, an attacker with local admin access could place a (potentially malicious) DLL in a directory in that path, causing the Agent to load that library.
    </p>
  ",Rapid7 Insight Agent: CVE-2017-5252: Insight Agent on Windows is vulnerable to loading malicious libraries placed in its dependency search path,Severe,429.0461731
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A  information disclosure vulnerability exists when the Windows GDI+ component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI+ component handles objects in memory.
</p>
  ",Microsoft CVE-2017-8681: Windows GDI+ Information Disclosure Vulnerability,Moderate,349.4227295
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A race condition that could lead to a remote code execution vulnerability exists in NetBT Session Services when NetBT fails to maintain certain sequencing requirements. To exploit the vulnerability, an attacker needs to be able to send specially crafted NetBT Session Service packets to an impacted system.
An attacker who successfully exploits the vulnerability could execute arbitrary code on the target.
The security update addresses the vulnerability by correcting how NetBT sequences certain operations.
</p>
  ",Microsoft CVE-2017-0161: NetBIOS Remote Code Execution Vulnerability,Severe,451.3459473
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0269: Windows SMB Denial of Service Vulnerability,Severe,124.0010071
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. An attacker who successfully exploited the vulnerability could cause the host server to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
The update addresses the vulnerability by modifying how virtual machines access the Hyper-V Network Switch.
</p>
  ",Microsoft CVE-2019-0715: Windows Hyper-V Denial of Service Vulnerability,Severe,100.1091537
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2019-0719: Hyper-V Remote Code Execution Vulnerability,Critical,268.7035217
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1469: Win32k Information Disclosure Vulnerability,Moderate,180.0997162
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The expression specified in &lt;FilesMatch&gt; could match &#39;$&#39; to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.</p>
  ",Apache HTTPD: <FilesMatch> bypass with a trailing newline in the file name (CVE-2017-15715),Severe,417.8881531
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The expression specified in &lt;FilesMatch&gt; could match &#39;$&#39; to a newline character in a malicious filename, rather than matching only the end of the filename. This could be exploited in environments where uploads of some files are are externally blocked, but only by matching the trailing portion of the filename.</p>
  ",Apache HTTPD: <FilesMatch> bypass with a trailing newline in the file name (CVE-2017-15715),Severe,417.8881531
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8578: Win32k Elevation of Privilege Vulnerability,Critical,557.8262329
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to memory corruption. An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk. 
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8540 Microsoft Malware Protection Engine Remote Code Execution Vulnerability,Critical,597.989624
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way some ActiveX objects are instantiated. An attacker who successfully exploited this vulnerability could gain access to protected memory contents.
To exploit this vulnerability, an attacker would need to convince a user to open a malicious document that could then instantiate the vulnerable object. This security update addresses the vulnerability by correcting how these objects are instantiated.
</p>
  ",Microsoft CVE-2017-0242: Microsoft ActiveX Information Disclosure Vulnerability,Severe,372.0030518
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Microsoft Edge improperly accesses objects in memory. The vulnerability could corrupt memory in such a way that enables an attacker to execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website that is designed to exploit the vulnerability through Microsoft Edge, and then convince a user to view the website. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements by adding specially crafted content that could exploit the vulnerability. In all cases, however, an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by way of enticement in an email or Instant Messenger message, or by getting them to open an attachment sent through email.
The security update addresses the vulnerability by modifying how Microsoft Edge handles objects in memory.
</p>
  ",Microsoft CVE-2017-0238: Microsoft Edge Memory Corruption Vulnerability,Critical,488.4732056
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft XML Core Services. The vulnerability could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS12-043: Vulnerability in Microsoft XML Core Services Could Allow Remote Code Execution (2722479),Critical,909.4602051
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the Network Driver Interface Specification (NDIS) when ndis.sys fails to check the length of a buffer prior to copying memory to it.
To exploit the vulnerability, in a local attack scenario, an attacker could run a specially crafted application to elevate the attacker&#39;s privilege level. An attacker who successfully exploited this vulnerability could run processes in an elevated context. However, an attacker must first gain access to the local system with the ability to execute a malicious application in order to exploit this vulnerability.
The security update addresses the vulnerability by changing how ndis.sys validates buffer length.
</p>
  ",Microsoft CVE-2018-8342: Windows NDIS Elevation of Privilege Vulnerability,Severe,420.4586487
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1256: Win32k Elevation of Privilege Vulnerability,Severe,305.9284058
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll)  when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2019-1412: OpenType Font Driver Information Disclosure Vulnerability,Moderate,186.2593231
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when .NET Framework and .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Framework (or .NET core) application.
The update addresses the vulnerability by correcting how .NET Framework and .NET Core applications handle RegEx string processing.
</p>
  ",Microsoft CVE-2019-0820: .NET Framework and .NET Core Denial of Service Vulnerability,Severe,150.4931641
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0848: Win32k Information Disclosure Vulnerability,Moderate,231.0313568
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft software. The vulnerability could allow remote code execution if a user views a specially crafted Web page that uses a specific binary behavior in Internet Explorer. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. This update also includes kill bits for four third-party ActiveX controls.</p>
  ",MS11-090: Cumulative Security Update of ActiveX Kill Bits (2618451),Critical,795.5778198
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  When generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.</p>
  ",Apache HTTPD: Weak Digest auth nonce generation in mod_auth_digest (CVE-2018-1312),Severe,417.8881531
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  When generating an HTTP Digest authentication challenge, the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed. In a cluster of servers using a common Digest authentication configuration, HTTP requests could be replayed across servers by an attacker without detection.</p>
  ",Apache HTTPD: Weak Digest auth nonce generation in mod_auth_digest (CVE-2018-1312),Severe,417.8881531
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2017-11784: Windows Kernel Information Disclosure Vulnerability,Moderate,323.4075928
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel API enforces permissions. An attacker who successfully exploited the vulnerability could impersonate processes, interject cross-process communication, or interrupt system functionality.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly enforces permissions.
</p>
  ",Microsoft CVE-2017-0050: Windows Elevation of Privilege Vulnerability,Severe,575.4414673
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-0155: Win32k Elevation of Privilege Vulnerability,Severe,489.4337463
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when &quot;Windows Theme API&quot; does not properly decompress files.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a victim user must open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and then convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force a user to visit the website. Instead, an attacker would have to convince a user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by helping to ensure that &quot;Windows Theme API&quot; properly decompresses files.
</p>
  ",Microsoft CVE-2018-8413: Windows Theme API Remote Code Execution Vulnerability,Critical,482.8240967
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8404: Win32k Elevation of Privilege Vulnerability,Severe,420.4586487
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege exists in the p2pimsvc service where an attacker who successfully exploited the vulnerability could run arbitrary code with elevated privileges.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the p2pimsvc service handles processes these requests.
</p>
  ",Microsoft CVE-2019-1168: Microsoft Windows p2pimsvc Elevation of Privilege Vulnerability,Severe,314.9179993
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1242: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.8247375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>Normally in OpenSSL EC groups always have a co-factor present and this is used in side channel resistant code paths. However, in some cases, it is possible to construct a group using explicit parameters (instead of using a named curve). In those cases it is possible that such a group does not have the cofactor present. This can occur even where all the parameters match a known named curve. If such a curve is used then OpenSSL falls back to non-side channel resistant code paths which may result in full key recovery during an ECDSA signature operation. In order to be vulnerable an attacker would have to have the ability to time the creation of a large number of signatures where explicit parameters with no co-factor present are in use by an application using libcrypto. For the avoidance of doubt libssl is not vulnerable because explicit parameters are never used. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).</p>
  ",OpenSSL ECDSA remote timing attack (CVE-2019-1547),Moderate,152.9524689
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in the memory, aka &#39;GDI+ Remote Code Execution Vulnerability&#39;. This CVE ID is unique from CVE-2020-0881.</p>
  ",Microsoft CVE-2020-0883: GDI+ Remote Code Execution Vulnerability,Critical,315.5828247
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Shell improperly handles objects in memory. An attacker who successfully exploited this vulnerability could cause arbitrary code to execute in the context of the current user. If a user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS15-109: Security Update for Windows Shell to Address Remote Code Execution (3096443),Critical,660.8757324
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-8695: Windows Uniscribe Information Disclosure Vulnerability,Moderate,299.6813049
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"Microsoft is announcing the release of SHA-2 code sign support for Windows 7 SP1, and Windows Server 2008 R2 SP1. Please see 2019 SHA-2 Code Signing Support requirement for Windows and WSUS for more information.",Microsoft ADV190009: Microsoft ADV190009: SHA-2 Code Sign Support Advisory,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability.

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-8332: Win32k Graphics Remote Code Execution Vulnerability,Critical,466.593689
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>Buffer overflow in redis-cli of Redis before 4.0.10 and 5.x before 5.0 RC3 allows an attacker to achieve code execution and escalate to higher privileges via a crafted command line. NOTE: It is unclear whether there are any common situations in which redis-cli is used with, for example, a -h (aka hostname) argument from an untrusted source.</p>
  ",Redis: Improper Restriction of Operations within the Bounds of a Memory Buffer (CVE-2018-12326),Severe,383.8286133
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the Windows Search Indexer properly handles objects in memory.
</p>
  ",Microsoft CVE-2020-0632: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,218.210144
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles authentication requests. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
An attacker could exploit this vulnerability by running a specially crafted application on the victim system.
The update addresses the vulnerability by correcting the way Windows handles authentication requests.
</p>
  ",Microsoft CVE-2019-0543: Microsoft Windows Elevation of Privilege Vulnerability,Severe,333.6235657
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Windows SMB Server handles certain requests. An authenticated attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, an attacker would have to be able to authenticate and send SMB messages to an impacted Windows SMB Server
The security update addresses the vulnerability by correcting how Windows SMB Server handles authenticated requests.
</p>
  ",Microsoft CVE-2019-0821: Windows SMB Information Disclosure Vulnerability,Severe,226.971817
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists in the Network Location Awareness (NLA) service that could unintentionally relax the firewall policy and/or configuration of certain services. This could increase the surface exposed to an attacker. The vulnerability is caused when the NLA service fails to properly validate whether a domain-connected computer is connected to the domain or to an untrusted network. The update addresses the vulnerability by forcing mutual authentication via Kerberos.</p>
  ",MS15-005: Vulnerability in Network Location Awareness Service Could Allow Security Feature Bypass (3022777),Severe,402.359375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>Remote code execution vulnerabilities exist when Internet Explorer improperly accesses objects in memory. These vulnerabilities could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-079: Cumulative Security Update for Internet Explorer (3082442),Critical,703.534668
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists when Microsoft browsers improperly handle redirect requests. The vulnerability allows Microsoft browsers to bypass CORS redirect restrictions, and to follow redirect requests that should otherwise be ignored. An attacker who successfully exploited the vulnerability could force the browser to send data that would otherwise be restricted to a destination website of the attacker&#39;s choice.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Microsoft browsers and then convince a user to view the website. The attacker could also take advantage of compromised websites, and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how affected Microsoft browsers handle redirect requests.
</p>
  ",Microsoft CVE-2017-8592: Microsoft Browser Security Feature Bypass Vulnerability,Severe,364.2947083
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows Graphics Component (GDI32.dll) fails to properly handle objects in memory, allowing an attacker to retrieve information that could lead to an Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited this vulnerability could cause an information disclosure to bypass the ASLR security feature that protects users from a broad class of vulnerabilities. </p>
  ",MS16-074: Security Update for Microsoft Graphics Component  (3164036),Severe,594.5320435
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when LDAP request buffer lengths are improperly calculated. In a remote attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to send malicious traffic to a Domain Controller. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
The update addresses the vulnerability by correcting how LDAP request buffer lengths are calculated.
</p>
  ",Microsoft CVE-2017-0166: LDAP Elevation of Privilege Vulnerability,Critical,574.7509155
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0268: Windows SMB Information Disclosure Vulnerability,Severe,372.0030518
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>
        The server is not configured with support for any modern, secure ciphers and only supports ciphers known to be weak against attack.
    </p>
  ",TLS/SSL Server Does Not Support Any Strong Cipher Algorithms,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-8344: Microsoft Graphics Remote Code Execution Vulnerability,Critical,473.2265015
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote unauthenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2017-8589: Windows Search Remote Code Execution Vulnerability,Critical,759.2345581
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2017-8624: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,509.0687866
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>Elevation of privilege vulnerabilities exist when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerabilities could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. </p>
  ",MS16-039: Security Update for Microsoft Graphics Component  (3148522),Critical,668.7749023
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when the XmlLite runtime (XmlLite.dll) improperly parses XML input. An attacker who successfully exploited this vulnerability could cause a denial of service against an XML application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to an XML application.
The update addresses the vulnerability by correcting how the XmlLite runtime parses XML input.
</p>
  ",Microsoft CVE-2019-1187: XmlLite Runtime Denial of Service Vulnerability,Severe,148.0574493
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the Windows Remote Desktop Client when a user connects to a malicious server. An attacker who successfully exploited this vulnerability could execute arbitrary code on the computer of the connecting client. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to have control of a server and then convince a user to connect to it. An attacker would have no way of forcing a user to connect to the malicious server, they would need to trick the user into connecting via social engineering, DNS poisoning or using a Man in the Middle (MITM) technique. An attacker could also compromise a legitimate server, host malicious code on it, and wait for the user to connect.
The update addresses the vulnerability by correcting how the Windows Remote Desktop Client handles connection requests.
</p>
  ",Microsoft CVE-2019-1290: Remote Desktop Client Remote Code Execution Vulnerability,Critical,370.8247375
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>OpenSSL 1.1.1 introduced a rewritten random number generator (RNG). This was intended to include protection in the event of a fork() system call in order to ensure that the parent and child processes did not share the same RNG state. However this protection was not being used in the default case. A partial mitigation for this issue is that the output from a high precision timer is mixed into the RNG state so the likelihood of a parent and child process sharing state is significantly reduced. If an application already calls OPENSSL_init_crypto() explicitly using OPENSSL_INIT_ATFORK then this problem does not occur at all. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c).</p>
  ",OpenSSL Fork Protection (CVE-2019-1549),Severe,441.6854248
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0720, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0719: Win32k Elevation of Privilege Vulnerability,Severe,254.039505
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Terminal Services component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The update addresses the vulnerability by correcting how the Terminal Services component handle objects in memory.
</p>
  ",Microsoft CVE-2019-0839: Windows Information Disclosure Vulnerability,Moderate,231.0313568
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>
        Allowing nameservers to process recursive queries coming from any system
        may, in certain situations, help attackers conduct denial of service or
        cache poisoning attacks.
     </p>
  ",Nameserver Processes Recursive Queries,Severe,199.8276367
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Microsoft Common Console Document (.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to open the file.
The update addresses the vulnerability by modifying the way that the Microsoft Common Console Document (.msc) parses XML input.
</p>
  ",Microsoft CVE-2017-8557: Windows System Information Console Information Disclosure Vulnerability,Moderate,336.3777161
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2018-8120: Win32k Elevation of Privilege Vulnerability,Severe,511.372406
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists when Windows Netlogon improperly handles a secure communications channel. An attacker who successfully exploited the vulnerability could downgrade aspects of the connection allowing for further modification of the transmission.
To exploit the vulnerability, an attacker would require an active man in the middle attack to be in place for the targeted traffic.
The update addresses the vulnerability by modifying how Netlogon handles these connections, accounting for potential attack through a man in the middle.
</p>
  ",Microsoft CVE-2019-1424: NetLogon Security Feature Bypass Vulnerability,Severe,291.4263611
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1458: Win32k Elevation of Privilege Vulnerability,Severe,275.7776794
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Search Indexer handles objects in memory, aka &#39;Windows Search Indexer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0666, CVE-2020-0667, CVE-2020-0735.</p>
  ",Microsoft CVE-2020-0752: Windows Search Indexer Elevation of Privilege Vulnerability,Severe,210.1442413
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0898: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.1791382
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>For configurations enabling support for HTTP/2, SSL client certificate validation was not enforced if configured, allowing clients unauthorized access to protected resources over HTTP/2. This issue affected releases 2.4.18 and 2.4.20 only.</p>
  ",Apache HTTPD: TLS/SSL X.509 client certificate auth bypass with HTTP/2 (CVE-2016-4979),Severe,214.2943268
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>For configurations enabling support for HTTP/2, SSL client certificate validation was not enforced if configured, allowing clients unauthorized access to protected resources over HTTP/2. This issue affected releases 2.4.18 and 2.4.20 only.</p>
  ",Apache HTTPD: TLS/SSL X.509 client certificate auth bypass with HTTP/2 (CVE-2016-4979),Severe,214.2943268
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0279: Windows SMB Remote Code Execution Vulnerability,Severe,471.2038574
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in StructuredQuery when the software fails to properly handle objects in memory.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability typically requires that a user open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) containing a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force users to visit the website. Instead, an attacker would have to convince users to click a link, typically by way of an enticement in an email or instant message, and then convince them to open the specially crafted file.
Note that where severity is indicated as Critical in the Affected Products table, the Preview Pane is an attack vector.
The security update addresses the vulnerability by correcting how StructuredQuery handles objects in memory.
</p>
  ",Microsoft CVE-2018-0825: StructuredQuery Remote Code Execution Vulnerability,Critical,419.9494324
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8224: Windows Kernel Elevation of Privilege Vulnerability,Severe,380.9133301
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1151: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.8623352
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>An Integer Overflow issue was discovered in the struct library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2, leading to a failure of bounds checking.</p>
  ",Redis: Integer Overflow or Wraparound (CVE-2018-11219),Critical,602.0281372
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0579: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.2850952
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0596: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0849: Windows GDI Information Disclosure Vulnerability,Severe,270.104248
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0795: MS XML Remote Code Execution Vulnerability,Critical,413.5971069
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that the VBScript engine, when rendered in Internet Explorer, handles objects in memory. In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit this vulnerability.</p>
  ",MS15-065: Security Update for Internet Explorer (3076321),Critical,672.9681396
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-044: Vulnerability in .NET Framework Could Allow Remote Code Execution (2538814),Severe,675.1157227
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in Windows DNS resolution. The vulnerability could allow remote code execution if an attacker gained access to the network and then created a custom program to send specially crafted LLMNR broadcast queries to the target systems. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed. In this case, the LLMNR ports should be blocked from the Internet.</p>
  ",MS11-030: Vulnerability in DNS Resolution Could Allow Remote Code Execution (2509553),Critical,735.145752
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-8675: Win32k Elevation of Privilege Vulnerability,Severe,453.0826416
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way Windows DirectShow handles objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a target system.
In a web-based attack scenario, an attacker could host a website used to attempt to exploit the vulnerability. Additionally, compromised websites and websites that accept or host user-provided content could contain specially crafted content that could be used to exploit the vulnerability. However, in all cases, an attacker would have no way to force users to view attacker-controlled content. Instead, an attacker would have to convince users to take action. For example, an attacker could trick users into clicking a link that takes them to the attacker&#39;s site.
The security update addresses the vulnerability by correcting how Windows DirectShow handles objects in memory.
</p>
  ",Microsoft CVE-2017-0042: Windows DirectShow Information Disclosure Vulnerability,Moderate,352.9422607
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves one privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow remote code execution on a client system if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. In a web browsing attack scenario, an attacker could host a website that contains a webpage that is used to exploit this vulnerability. In addition, compromised websites and websites that accept or host user-provided content or advertisements could contain specially crafted content that could exploit this vulnerability. In all cases, however, an attacker would have no way to force users to visit these websites. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes users to the attacker&#39;s website.</p>
  ",MS12-025: Vulnerability in .NET Framework Could Allow Remote Code Execution (2671605),Critical,816.5742188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0755: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A buffer overflow vulnerability exists in the Microsoft JET Database Engine that could allow remote code execution on an affected system. An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted Excel file while using an affected version of Microsoft Windows. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted Excel file to the user, and then convincing the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8392: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,466.593689
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,700.8101196
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0598: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the wlansvc.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.
To exploit the vulnerability, a locally authenticated attacker could run a specially crafted application.
The security update addresses the vulnerability by ensuring the wlansvc.dll properly handles objects in memory.
</p>
  ",Microsoft CVE-2019-1085: Windows WLAN Service Elevation of Privilege Vulnerability,Severe,269.6457214
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An authentication bypass vulnerability exists in Windows Communication Foundation (WCF) and Windows Identity Foundation (WIF), allowing signing of SAML tokens with arbitrary symmetric keys. This vulnerability allows an attacker to impersonate another user, which can lead to elevation of privileges. The vulnerability exists in WCF, WIF 3.5 and above in .NET Framework, WIF 1.0 component in Windows, WIF Nuget package, and WIF implementation in SharePoint.
An unauthenticated attacker can exploit this by signing a SAML token with any arbitrary symmetric key.
This security update addresses the issue by ensuring all versions of WCF and WIF validate the key used to sign SAML tokens correctly.
</p>
  ",Microsoft CVE-2019-1006: WCF/WIF SAML Token Authentication Bypass Vulnerability,Severe,186.2601776
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows its:// protocol handler unnecessarily sends traffic to a remote site in order to determine the zone of a provided URL. This could potentially result in the disclosure of sensitive information to a malicious site.
To exploit the vulnerability an attacker would have to trick a user into browsing to a malicious website or to an SMB or UNC path destination.  An attacker who successfully tricked a user into disclosing the user&#39;s NTLM hash could attempt a brute-force attack to disclose the corresponding hash password.
The security update addresses the vulnerability by correcting how the Windows its:// protocol handler determines the zone of a request.
</p>
  ",Microsoft CVE-2017-11927: Microsoft Windows Information Disclosure Vulnerability,Severe,344.3370361
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
A denial of service vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file, leading to a scan timeout. An attacker who successfully exploited this vulnerability could prevent the Microsoft Malware Protection Engine from monitoring affected systems until the service is restarted.
    </p>
    
<p>
To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file is scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
    
<p>
The update addresses the vulnerability by correcting how the Microsoft Malware Protection Engine scans specially crafted files.
    </p>
    
<p>
Note: Typically, no action is required of enterprise administrators or end users to install updates for the Microsoft Malware Protection Engine, because the built-in mechanism for the automatic detection and deployment of updates will apply the update within 48 hours of release. The exact time frame depends on the software used, Internet connection, and infrastructure configuration.
    </p>
  ",Microsoft CVE-2017-8539: Microsoft Malware Protection Engine Denial of Service Vulnerability,Severe,123.3565216
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves one publicly disclosed vulnerability and twenty-three privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-010: Cumulative Security Update for Internet Explorer (2909921),Critical,731.7599487
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Microsoft Video Control fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-131: Security Update for Microsoft Video Control (3199151),Critical,601.6043701
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists due to the way the Windows Graphics Component handles objects in memory. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit the vulnerability, and then convince a user to open the document file.

Note that for affected Microsoft Office products, the Preview Pane is an attack vector.
The security update addresses the vulnerability by correcting how the Windows Graphics Component handles objects in the memory.
</p>
  ",Microsoft CVE-2017-0014: Windows Graphics Component Remote Code Execution Vulnerability,Critical,540.4428711
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target server.
To exploit the vulnerability, in most situations, an authenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0278: Windows SMB Remote Code Execution Vulnerability,Severe,471.2038574
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2018-0868: Windows Installer Elevation of Privilege Vulnerability,Severe,406.1339111
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when DirectWrite improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how DirectWrite handles objects in memory.
</p>
  ",Microsoft CVE-2019-1432: DirectWrite Information Disclosure Vulnerability,Severe,230.0734558
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Backup Service improperly handles file operations.To exploit this vulnerability, an attacker would first have to gain execution on the victim system, aka &#39;Windows Backup Service Elevation of Privilege Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0703: Windows Backup Service Elevation of Privilege Vulnerability,Severe,254.039505
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0580: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.2850952
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0906: Jet Database Engine Remote Code Execution Vulnerability,Critical,396.5184021
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Windows kernel initializes objects in memory.
</p>
  ",Microsoft CVE-2019-0767: Windows Kernel Information Disclosure Vulnerability,Moderate,236.4438019
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2018-1016: Microsoft Graphics Remote Code Execution Vulnerability,Critical,501.8901672
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0280: Windows SMB Denial of Service Vulnerability,Severe,217.0018005
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists when Microsoft .NET Framework (and .NET Core) components do not completely validate certificates.
An attacker could present a certificate that is marked invalid for a specific use, but the component uses it for that purpose. This action disregards the Enhanced Key Usage taggings.
The security update addresses the vulnerability by helping to ensure that .NET Framework (and .NET Core) components completely validate certificates.
</p>
  ",Microsoft CVE-2017-0248: .NET Security Feature Bypass Vulnerability,Severe,208.0139465
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A spoofing vulnerability exists when Microsoft browsers render SmartScreen Filter. An attacker who successfully exploited this vulnerability could trick a user by redirecting the user to a specially crafted website. The specially crafted website could then either spoof content or serve as a pivot to chain an attack with other vulnerabilities in web services.
To exploit the vulnerability, the user must click a specially crafted URL. In an email attack scenario, an attacker could send an email message containing the specially crafted URL to the user in an attempt to convince the user to click it.
In a web-based attack scenario, an attacker could host a specially crafted website designed to appear as a legitimate website to the user. However, the attacker would have no way to force the user to visit the specially crafted website. The attacker would have to convince the user to visit the specially crafted website, typically by way of enticement in an email or Instant Messenger message, and then convince the user to interact with content on the website. The update addresses the vulnerability by correcting how Microsoft browsers parse HTML.
</p>
  ",Microsoft CVE-2017-0231: Microsoft Browser Spoofing Vulnerability,Severe,155.0012665
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.
To exploit the vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2018-0975: Windows Kernel Information Disclosure Vulnerability,Moderate,315.1107178
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A tampering vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLM MIC (Message Integrity Check) protection. An attacker who successfully exploited this vulnerability could gain the ability to downgrade NTLM security features.
To exploit this vulnerability, the attacker would need to tamper with the NTLM exchange. The attacker could then modify flags of the NTLM packet without invalidating the signature.
The update addresses the vulnerability by hardening NTLM MIC protection on the server-side.
</p>
  ",Microsoft CVE-2019-1166: Windows NTLM Tampering Vulnerability,Severe,98.68502808
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0578: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.2850952
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0847: Jet Database Engine Remote Code Execution Vulnerability,Critical,413.5971069
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework. The vulnerability could allow security feature bypass if a user visits a specially crafted website. In a web-browsing attack scenario, an attacker who successfully exploited this vulnerability could bypass the Address Space Layout Randomization (ASLR) security feature, which helps protect users from a broad class of vulnerabilities. The security feature bypass by itself does not allow arbitrary code execution. However, an attacker could use this ASLR bypass vulnerability in conjunction with another vulnerability, such as a remote code execution vulnerability, that could take advantage of the ASLR bypass to run arbitrary code.</p>
  ",MS14-046: Vulnerability in .NET Framework Could Allow Security Feature Bypass (2984625),Severe,465.5722656
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0072: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.7970581
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0113: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.5409241
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1250: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.8247375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,269.3335876
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0851: Jet Database Engine Remote Code Execution Vulnerability,Critical,413.5971069
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows fails to properly handle uninitialized memory when parsing certain, specially crafted TIFF image format files. The vulnerability could allow information disclosure if an attacker runs a specially crafted application on an affected system. </p>
  ",MS15-016: Vulnerability in Microsoft Graphics Component Could Allow Information Disclosure (3029944),Severe,452.0192261
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in PowerShell when PSObject wraps a CIM Instance. An attacker who successfully exploited this vulnerability could execute malicious code on a vulnerable system.
In an attack scenario, an attacker could execute malicious code in a PowerShell remote session.
The update addresses the vulnerability by correcting how PowerShell deserializes user supplied scripts.
</p>
  ",Microsoft CVE-2017-8565: Windows PowerShell Remote Code Execution Vulnerability,Critical,557.8262329
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Graphics Device Interface (GDI) handles objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses the vulnerability by correcting how GDI handles objects in memory and by preventing instances of unintended user-mode privilege elevation.
</p>
  ",Microsoft CVE-2017-0005: Windows GDI Elevation of Privilege Vulnerability,Severe,535.6679077
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 8:07:24,9482.484604,"
    
<p>The IIS default installation or &quot;Welcome&quot; page is installed
      on this server.  This usually indicates a newly installed server
      which has not yet been configured properly and which may not be
      known about.</p>
    

<p>In many cases, IIS is installed by default and the user
      may not be aware that the web server is running.  These servers
      are rarely patched and rarely monitored, providing hackers with
      a convenient target that is not likely to trip any alarms.</p>
  ",Microsoft IIS default installation/welcome page installed,Severe,590.1245117
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when .NET and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET (or .NET core) application.
The update addresses the vulnerability by correcting how .NET and .NET Core applications handle XML document processing.
</p>
  ",Microsoft CVE-2018-0765: .NET and .NET Core Denial of Service Vulnerability,Severe,159.2968597
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Kernel API improperly handles registry objects in memory. An attacker who successfully exploited the vulnerability could gain elevated privileges on a targeted system.
A locally authenticated attacker could exploit this vulnerability by running a specially crafted application.
The security update addresses the vulnerability by helping to ensure that the Windows Kernel API properly handles objects in memory.
</p>
  ",Microsoft CVE-2018-8410: Windows Registry Elevation of Privilege Vulnerability,Severe,439.4647217
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</p>
  ",Apache HTTPD: mod_rewrite potential open redirect (CVE-2019-10098),Severe,298.3447571
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_rewrite.  Review your web server configuration for validation.  Redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</p>
  ",Apache HTTPD: mod_rewrite potential open redirect (CVE-2019-10098),Severe,298.3447571
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>linenoise, as used in Redis before 3.2.3, uses world-readable permissions for .rediscli_history, which allows local users to obtain sensitive information by reading the file.</p>
  ",Redis: Information Exposure (CVE-2013-7458),Moderate,379.0996704
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.
An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
The attacker could present to the user a removable drive, or remote share, that contains a malicious .LNK file and an associated malicious binary. When the user opens this drive(or remote share) in Windows Explorer, or any other application that parses the .LNK file, the malicious binary will execute code of the attacker&#8217;s choice, on the target system.
The security update addresses the vulnerability by correcting the processing of shortcut LNK references.
</p>
  ",Microsoft CVE-2019-1280: LNK Remote Code Execution Vulnerability,Critical,370.8247375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework checks the source markup of a file.
</p>
  ",Microsoft CVE-2020-0605: .NET Framework Remote Code Execution Vulnerability,Critical,333.1488647
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in Remote Desktop Services &#226;&#8364;&#8220; formerly known as Terminal Services &#226;&#8364;&#8220; when an authenticated attacker abuses clipboard redirection, aka &#39;Remote Desktop Services&#194; Remote Code Execution Vulnerability&#39;.</p>
  ",Microsoft CVE-2020-0655: Remote Desktop Services Remote Code Execution Vulnerability,Critical,168.7576904
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in the Microsoft Active Accessibility component. The vulnerability could allow remote code execution if an attacker convinces a user to open a legitimate file that is located in the same network directory as a specially crafted dynamic link library (DLL) file. Then, while opening the legitimate file, the Microsoft Active Accessibility component could attempt to load the DLL file and execute any code it contained. For an attack to be successful, a user must visit an untrusted remote file system location or WebDAV share and open a document from this location that is then loaded by a vulnerable application.</p>
  ",MS11-075: Vulnerability in Microsoft Active Accessibility Could Allow Remote Code Execution (2623699),Critical,799.605896
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel fails to properly initialize a memory address. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel initializes memory.
</p>
  ",Microsoft CVE-2017-11849: Windows Kernel Information Disclosure Vulnerability,Moderate,285.6090698
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves fourteen privately reported vulnerabilities in Internet Explorer. The most severe of these vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Customers whose accounts are configured to have fewer user rights on the system could be less impacted than those who operate with administrative user rights.</p>
  ",MS14-056: Cumulative Security Update for Internet Explorer (2987107),Critical,739.6947021
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>
        The server is using a common or default prime number as a parameter during the Diffie-Hellman key exchange.
        This makes the secure session vulnerable to a precomputation attack. An attacker can spend a significant amount
        of time to generate a lookup/rainbow table for a particular prime number. This lookup table can then be used to obtain
        the shared secret for the handshake and decrypt the session.
    </p>
  ",TLS/SSL Server Is Using Commonly Used Prime Numbers,Moderate,169.9320679
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>
        The server is using a common or default prime number as a parameter during the Diffie-Hellman key exchange.
        This makes the secure session vulnerable to a precomputation attack. An attacker can spend a significant amount
        of time to generate a lookup/rainbow table for a particular prime number. This lookup table can then be used to obtain
        the shared secret for the handshake and decrypt the session.
    </p>
  ",TLS/SSL Server Is Using Commonly Used Prime Numbers,Moderate,169.9320679
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves two privately reported vulnerabilities in the Remote Desktop Protocol. The more severe of these vulnerabilities could allow remote code execution if an attacker sends a sequence of specially crafted RDP packets to an affected system. By default, the Remote Desktop Protocol (RDP) is not enabled on any Windows operating system. Systems that do not have RDP enabled are not at risk.</p>
  ",MS12-020: Vulnerabilities in Remote Desktop Could Allow Remote Code Execution (2671387),Critical,818.2462769
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>By design, BIND is intended to limit the number of TCP clients that can be connected at any given time. The number of allowed connections is a tunable parameter which, if unset, defaults to a conservative value for most servers. Unfortunately, the code which was intended to limit the number of simultaneous connections contained an error which could be exploited to grow the number of simultaneous connections beyond this limit. Versions affected: BIND 9.9.0 -&gt; 9.10.8-P1, 9.11.0 -&gt; 9.11.6, 9.12.0 -&gt; 9.12.4, 9.14.0. BIND 9 Supported Preview Edition versions 9.9.3-S1 -&gt; 9.11.5-S3, and 9.11.5-S5. Versions 9.13.0 -&gt; 9.13.7 of the 9.13 development branch are also affected. Versions prior to BIND 9.9.0 have not been evaluated for vulnerability to CVE-2018-5743.</p>
  ",ISC BIND: Limiting simultaneous TCP clients is ineffective (CVE-2018-5743),Severe,88.27976227
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 8:05:03,7147.98671,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
7,win10-atp.vuln.lax.rapid7.com,10.4.18.180,00:50:56:94:65:85,2020-06-16 8:04:59,3298.686417,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 8:07:24,9482.484604,"
    
<p>
         The server&#39;s TLS/SSL certificate is self-signed. Self-signed certificates cannot be
         trusted by default, especially because TLS/SSL man-in-the-middle attacks typically use
         self-signed certificates to eavesdrop on TLS/SSL connections.
      </p>
  ",Self-signed TLS/SSL certificate,Severe,248.7222748
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Remote Procedure Call runtime improperly initializes objects in memory.
To exploit this vulnerability, an authenticated attacker could run a specially crafted application. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
The update addresses the vulnerability by correcting how the Remote Procedure Call runtime i initializes objects in memory.
</p>
  ",Microsoft CVE-2018-8407: Remote Procedure Call runtime Information Disclosure Vulnerability,Moderate,258.5748901
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Microsoft Windows when Windows fails to properly handle certain symbolic links. An attacker who successfully exploited this vulnerability could potentially set certain items to run at a higher level and thereby elevate permissions.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows handles symbolic links.
</p>
  ",Microsoft CVE-2020-0635: Windows Elevation of Privilege Vulnerability,Severe,263.7902222
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Universal Plug and Play (UPnP) service improperly handles objects in memory, aka &#39;Windows UPnP Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0783.</p>
  ",Microsoft CVE-2020-0781: Windows UPnP Service Elevation of Privilege Vulnerability,Severe,244.1436157
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.7818298
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.7818298
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_proxy_ftp.  Review your web server configuration for validation.  Apache HTTP Server versions 2.4.0 to 2.4.41 mod_proxy_ftp use of uninitialized value with malicious FTP backend.</p>
  ",Apache HTTPD: mod_proxy_ftp use of uninitialized value (CVE-2020-1934),Severe,423.7818298
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.33 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerabilty hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.</p>
  ",Apache HTTPD: Possible write of after free on HTTP/2 stream shutdown (CVE-2018-1302),Severe,109.9705582
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>When an HTTP/2 stream was destroyed after being handled, the Apache HTTP Server prior to version 2.4.33 could have written a NULL pointer potentially to an already freed memory. The memory pools maintained by the server make this vulnerabilty hard to trigger in usual configurations, the reporter and the team could not reproduce it outside debug builds, so it is classified as low risk.</p>
  ",Apache HTTPD: Possible write of after free on HTTP/2 stream shutdown (CVE-2018-1302),Severe,109.9705582
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A Win32k information disclosure vulnerability exists when the Windows GDI component improperly discloses kernel memory addresses. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2017-11851: Windows GDI Information Disclosure Vulnerability,Moderate,285.6090698
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An Information Disclosure vulnerability exists when the HTTP.sys server application component improperly handles objects in memory.
An attacker who successfully exploited this vulnerability could obtain information to further compromise the HTTP.sys server application system.
A remote unauthenticated attacker could exploit this vulnerability by issuing a request to the HTTP.sys server application.
The update addresses the vulnerability by correcting how the HTTP.sys server application handles objects in memory.
</p>
  ",Microsoft CVE-2017-8582: Http.sys Information Disclosure Vulnerability,Severe,364.2947083
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An Information disclosure vulnerability exists in the Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (ASLR) bypass. An attacker who successfully exploited the vulnerability could retrieve the memory address of a kernel object.</p>
  ",MS16-135: Security Update for Windows Kernel-Mode Drivers (3199135),Severe,600.8841553
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when .NET and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET (or .NET core) application.
The update addresses the vulnerability by correcting how .NET and .NET Core applications handle XML document processing.
</p>
  ",Microsoft CVE-2018-0764: .NET and .NET Core Denial of Service Vulnerability,Severe,161.7746277
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>&quot;managed-keys&quot; is a feature which allows a BIND resolver to automatically maintain the keys used by trust anchors which operators configure for use in DNSSEC validation. Due to an error in the managed-keys feature it is possible for a BIND server which uses managed-keys to exit due to an assertion failure if, during key rollover, a trust anchor&#39;s keys are replaced with keys which use an unsupported algorithm. Versions affected: BIND 9.9.0 -&gt; 9.10.8-P1, 9.11.0 -&gt; 9.11.5-P1, 9.12.0 -&gt; 9.12.3-P1, and versions 9.9.3-S1 -&gt; 9.11.5-S3 of BIND 9 Supported Preview Edition. Versions 9.13.0 -&gt; 9.13.6 of the 9.13 development branch are also affected. Versions prior to BIND 9.9.0 have not been evaluated for vulnerability to CVE-2018-5745.</p>
  ",ISC BIND: An assertion failure can occur if a trust anchor rolls over to an unsupported key algorithm when using managed-keys (CVE-2018-5745),Severe,64.20155334
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in &quot;Microsoft COM for Windows&quot; when it fails to properly handle serialized objects.
An attacker who successfully exploited the vulnerability could use a specially crafted file or script to perform actions. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file that is designed to exploit the vulnerability. However, an attacker would have no way to force the user to visit the website. Instead, an attacker would have to convince the user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by correcting how &quot;Microsoft COM for Windows&quot; handles serialized objects.
</p>
  ",Microsoft CVE-2018-8349: Microsoft COM for Windows Remote Code Execution Vulnerability,Critical,473.2265015
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>Microsoft has deprecated the Document Signing functionality in XPS Viewer. This functionality relied upon the SHA-1 algorithm and is part of our overall effort to remove this algorithm from our products. This change impacts XPS Viewer on all supported versions of Windows.
FAQ
1. I need to use this deprecated functionality. Is there a way to enable it?
Yes. Please create the following registry entry:
[HKEY_CURRENT_USER\Software\Microsoft\XPSViewer] &quot;EnableDigitalSignatures&quot;=dword:00000001
2. What risks am I accepting by using SHA-1 based document signing?
SHA-1 is a legacy cryptographic hash that many in the security community believe is no longer secure. Using the SHA-1 hashing algorithm in document signing could allow an attacker to spoof content, perform phishing attacks, or otherwise manipulate content of a document. Microsoft, in collaboration with other members of the industry, is working to phase out the SHA-1 algorithm and to warn consumers of the possible risk when they encounter websites using the SHA-1 algorithm.
</p>
  ",Microsoft ADV180005: Document signing deprecation in XPS Viewer,Severe,342.1787415
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in Windows when the Windows SMB Client kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could potentially disclose contents of System memory.
To exploit this vulnerability, an attacker would have to log on to the system first and then run a specially crafted application in user mode.
The security update addresses the vulnerability by correcting how the Windows SMB Client kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1293: Windows SMB Client Driver Information Disclosure Vulnerability,Moderate,199.7899933
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0788, CVE-2020-0877.</p>
  ",Microsoft CVE-2020-0887: Win32k Elevation of Privilege Vulnerability,Severe,244.1436157
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in .NET Framework and Visual Studio software when the software fails to check the source markup of a file.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
Exploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Framework or Visual Studio. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.
The security update addresses the vulnerability by correcting how .NET Framework and Visual Studio check the source markup of a file.
</p>
  ",Microsoft CVE-2019-0613: .NET Framework and Visual Studio Remote Code Execution Vulnerability,Critical,428.3087158
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2019-0792: MS XML Remote Code Execution Vulnerability,Critical,413.5971069
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>Information disclosure vulnerabilities exist when Microsoft XML Core Services (MSXML) explicitly allows the use of Secure Sockets Layer (SSL) 2.0. An attacker who successfully exploited these vulnerabilities could decrypt portions of encrypted network information traffic.</p>
  ",MS15-084: Vulnerabilities in XML Core Services Could Allow Information Disclosure (3080129),Severe,437.0997925
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>
         The database allows any remote system the ability to connect to it. It is 
         recommended to limit direct access to trusted systems because databases may 
         contain sensitive data, and new vulnerabilities and exploits are discovered 
         routinely for them. For this reason, it is a violation of PCI DSS section 
         1.3.6 to have databases listening on ports accessible from the Internet, 
         even when protected with secure authentication mechanisms.
      </p>
  ",Database Open Access,Severe,575.5721436
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 8:07:24,9482.484604,"
    
<p>
         The database allows any remote system the ability to connect to it. It is 
         recommended to limit direct access to trusted systems because databases may 
         contain sensitive data, and new vulnerabilities and exploits are discovered 
         routinely for them. For this reason, it is a violation of PCI DSS section 
         1.3.6 to have databases listening on ports accessible from the Internet, 
         even when protected with secure authentication mechanisms.
      </p>
  ",Database Open Access,Severe,575.5721436
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2017-11824: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,446.1499634
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to stop responding until it is manually restarted. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-0273: Windows SMB Denial of Service Vulnerability,Severe,124.0010071
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Function Discovery Service handles objects in memory, aka &#39;Windows Function Discovery Service Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0679, CVE-2020-0682.</p>
  ",Microsoft CVE-2020-0680: Windows Function Discovery Service Elevation of Privilege Vulnerability,Severe,210.1442413
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0597: Jet Database Engine Remote Code Execution Vulnerability,Critical,428.3087158
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0902: Jet Database Engine Remote Code Execution Vulnerability,Critical,404.1791382
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to the LUAFV driver (luafv.sys). An attacker who successfully exploited this vulnerability could set the short name of a file with a long name to an arbitrary short name, overriding the file system with limited privileges.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability.
The update addresses the vulnerability by correcting how Windows handles calls to LUAFV.
</p>
  ",Microsoft CVE-2019-0796: Windows Elevation of Privilege Vulnerability,Moderate,101.723877
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft .NET Framework and Microsoft Silverlight. The vulnerability could allow remote code execution on a client system if a user views a specially crafted Web page using a Web browser that can run XAML Browser Applications (XBAPs) or Silverlight applications. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights. The vulnerability could also allow remote code execution on a server system running IIS, if that server allows processing ASP.NET pages and an attacker succeeds in uploading a specially crafted ASP.NET page to that server and then executes the page, as could be the case in a Web hosting scenario. This vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions.</p>
  ",MS11-039: Vulnerability in .NET Framework and Microsoft Silverlight Could Allow Remote Code Execution (2514842),Critical,806.7405396
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 8:07:24,9482.484604,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 8:06:56,2572.282822,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
3,integrations-idr-collector.vuln.lax.rapid7.com,10.4.22.91,00:50:56:94:90:7f,2020-06-16 8:02:19,0,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
10,ivm-agent-ub18.vuln.lax.rapid7.com,10.4.29.57,00:50:56:94:a8:d1,2020-06-16 8:03:35,0,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 8:02:18,3036.668457,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 8:05:03,7147.98671,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
8,r7-orchestrator-1-34.vuln.lax.rapid7.com,10.4.20.11,00:50:56:94:95:07,2020-06-16 8:03:17,1546.837173,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
9,vault-centos7.vuln.lax.rapid7.com,10.4.27.199,00:50:56:94:a4:48,2020-06-16 8:02:18,1546.837173,"
    
<p>The remote host responded to an ICMP timestamp request.  The ICMP timestamp response
      contains the remote host&#39;s date and time.  This information could theoretically be
      used against some systems to exploit weak time-based random number generators in
      other services.</p>
    

<p>In addition, the versions of some operating systems can be accurately fingerprinted
      by analyzing their responses to invalid ICMP timestamp requests.</p>
  ",ICMP timestamp response,Moderate,0
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Microsoft Video Control fails to properly handle objects in memory. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS16-122: Security Update for Microsoft Video Control (3195360),Critical,606.2565918
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows Common Log File System (CLFS)&#160;driver improperly handles objects in memory.&#160;In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to bypass security measures on the affected system allowing further exploitation.</p>
  ",MS16-153: Security Update for Common Log File System Driver (3207328),Moderate,364.0349121
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0125: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.5409241
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Graphics Component improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
In a local attack scenario, an attacker could exploit this vulnerability by running a specially crafted application to take control over the affected system.
The update addresses the vulnerability by correcting the way in which the Microsoft Graphics Component handles objects in memory and preventing unintended elevation from user mode.
</p>
  ",Microsoft CVE-2019-1438: Windows Graphics Component Elevation of Privilege Vulnerability,Severe,285.2095947
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0584: Jet Database Engine Remote Code Execution Vulnerability,Critical,437.2850952
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the IOleCvt interface renders ASP webpage content. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit the vulnerability through Microsoft browsers and then convince a user to view the website. An attacker could also embed an ActiveX control marked &quot;safe for initialization&quot; in an application or Microsoft Office document that hosts the browser rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The update addresses the vulnerability by correcting methods exposed when the IOleCvt interface is invoked.
</p>
  ",Microsoft CVE-2019-0845: Windows IOleCvt Interface Remote Code Execution Vulnerability,Critical,413.5971069
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1073: Windows Kernel Information Disclosure Vulnerability,Moderate,212.8782043
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in the way that the Windows Code Integrity Module performs hashing.
An attacker who successfully exploited the vulnerability could cause a system to stop responding. Note that the denial of service condition would not allow an attacker to execute code or to elevate user privileges. However, the denial of service condition could prevent authorized users from using system resources.
An attacker could host a specially crafted file in a website or SMB share. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically via an enticement in email or instant message, or by getting them to open an email attachment.
The security update addresses the vulnerability by modifying how the Code Integrity Module performs hashing.
</p>
  ",Microsoft CVE-2018-1040: Windows Code Integrity Module Denial of Service Vulnerability,Severe,147.6637268
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in RPC if the server has Routing and Remote Access enabled. An attacker who successfully exploited this vulnerability could execute code on the target system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would need to run a specially crafted application against an RPC server which has Routing and Remote Access enabled. Routing and Remote Access is a non-default configuration; systems without it enabled are not vulnerable.
The security update addresses the vulnerability by correcting how the Routing and Remote Access service handles requests.
</p>
  ",Microsoft CVE-2017-11885: Windows RRAS Service Remote Code Execution Vulnerability,Critical,461.0682373
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows kernel fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application to take control of an affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2017-11847: Windows Kernel Elevation of Privilege Vulnerability,Critical,533.0087891
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An Information disclosure vulnerability exists in Windows kernel that could allow an attacker to retrieve information that could lead to a Kernel Address Space Layout Randomization (KASLR) bypass. An attacker who successfully exploited this vulnerability could retrieve the memory address of a kernel object.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how the Windows kernel handles memory addresses.
</p>
  ",Microsoft CVE-2017-8687: Win32k Information Disclosure Vulnerability,Moderate,349.4227295
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the Microsoft JET Database Engine.
An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open/import a specially crafted Microsoft JET Database Engine file. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted file to the user, and then convince the user to open the file.
The security update addresses the vulnerability by modifying how the Microsoft JET Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2018-8423: Microsoft JET Database Engine Remote Code Execution Vulnerability,Critical,459.8622742
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Search handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, the attacker could send specially crafted messages to the Windows Search service. An attacker with access to a target computer could exploit this vulnerability to elevate privileges and take control of the computer. Additionally, in an enterprise scenario, a remote authenticated attacker could remotely trigger the vulnerability through an SMB connection and then take control of a target computer.
The security update addresses the vulnerability by correcting how Windows Search handles objects in memory.
</p>
  ",Microsoft CVE-2018-8450: Windows Search Remote Code Execution Vulnerability,Critical,382.3217468
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that Windows Deployment Services TFTP Server handles objects in memory.
An attacker who successfully exploited the vulnerability could execute arbitrary code with elevated permissions on a target system.
To exploit the vulnerability, an attacker could create a specially crafted request, causing Windows to execute arbitrary code with elevated permissions.
The security update addresses the vulnerability by correcting how Windows Deployment Services TFTP Server handles objects in memory.
</p>
  ",Microsoft CVE-2018-8476: Windows Deployment Services TFTP Server Remote Code Execution Vulnerability,Critical,712.1567993
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
An authenticated attacker could exploit this vulnerability by running a specially crafted application.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8622: Windows Kernel Information Disclosure Vulnerability,Moderate,253.4919281
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory, aka &#39;Win32k Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0691, CVE-2020-0719, CVE-2020-0721, CVE-2020-0722, CVE-2020-0723, CVE-2020-0724, CVE-2020-0725, CVE-2020-0726, CVE-2020-0731.</p>
  ",Microsoft CVE-2020-0720: Win32k Elevation of Privilege Vulnerability,Severe,254.039505
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows fails to properly handle uninitialized memory when parsing certain, specially crafted PNG image format files. The vulnerability could allow information disclosure if an attacker convinces a user to visit a website that contains specially crafted PNG images. </p>
  ",MS15-024: Vulnerability in PNG Processing Could Allow Information Disclosure (3035132),Severe,449.8161926
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in Microsoft Windows, Internet Explorer, and Microsoft Office when files at a medium integrity level become accessible to Internet Explorer running in Enhanced Protection Mode (EPM). </p>
  ",MS15-088: Unsafe Command Line Parameter Passing Could Allow Information Disclosure (3082458),Severe,459.4512024
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  Malicious input to mod_auth_digest will cause the server to crash, and each instance continues to crash even for subsequently valid requests.</p>
  ",Apache HTTPD: DoS vulnerability in mod_auth_digest (CVE-2016-2161),Severe,168.7870483
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  Malicious input to mod_auth_digest will cause the server to crash, and each instance continues to crash even for subsequently valid requests.</p>
  ",Apache HTTPD: DoS vulnerability in mod_auth_digest (CVE-2016-2161),Severe,168.7870483
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>The HTTP TRACE method is normally used to return the full HTTP request back to the requesting client for proxy-debugging purposes.  An attacker can create a webpage using XMLHTTP, ActiveX, or XMLDOM to cause a client to issue a TRACE request and capture the client&#39;s cookies.  This effectively results in a Cross-Site Scripting attack.</p>
  ",HTTP TRACE Method Enabled,Severe,689.2169189
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in the Microsoft Server Block Message (SMB) when an attacker sends specially crafted requests to the server. An attacker who exploited this vulnerability could cause the affected system to crash. To attempt to exploit this issue, an attacker would need to send specially crafted SMB requests to the target system.
Note that the denial of service vulnerability would not allow an attacker to execute code or to elevate their user rights, but it could cause the affected system to stop accepting requests.
The security update addresses the vulnerability by correcting the manner in which SMB handles specially crafted client requests.
</p>
  ",Microsoft CVE-2017-11781: Windows SMB Denial of Service Vulnerability,Critical,286.2424927
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0114: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.5409241
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when Windows fails to properly validate input before loading type libraries. An attacker could use this vulnerability to elevate their privilege level.
To exploit this vulnerability an attacker would first need to have access to the local system and have the ability to execute a malicious application.
The update corrects how Windows validates permissions when loading type libraries.
</p>
  ",Microsoft CVE-2017-0214: Windows COM Elevation of Privilege Vulnerability,Severe,432.0779114
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_crypto.  Review your web server configuration for validation.  Prior to Apache HTTP release 2.4.25, mod_sessioncrypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC. An authentication tag (SipHash MAC) is now added to prevent such attacks.</p>
  ",Apache HTTPD: Padding Oracle in Apache mod_session_crypto (CVE-2016-0736),Severe,515.7859497
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_session_crypto.  Review your web server configuration for validation.  Prior to Apache HTTP release 2.4.25, mod_sessioncrypto was encrypting its data/cookie using the configured ciphers with possibly either CBC or ECB modes of operation (AES256-CBC by default), hence no selectable or builtin authenticated encryption. This made it vulnerable to padding oracle attacks, particularly with CBC. An authentication tag (SipHash MAC) is now added to prevent such attacks.</p>
  ",Apache HTTPD: Padding Oracle in Apache mod_session_crypto (CVE-2016-0736),Severe,515.7859497
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly validates hyperlinks before loading executable libraries.
An attacker who successfully exploited this vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. However, in all cases an attacker would have no way to force a user to view the attacker-controlled content. Instead, an attacker would have to convince a user to take action, typically by an enticement in an email or instant message, or by getting the user to open an attachment sent through email.
The updates address the vulnerability by correcting how Internet Explorer validates hyperlinks before loading executable libraries.
</p>
  ",Microsoft CVE-2018-8316: Internet Explorer Remote Code Execution Vulnerability,Critical,369.6602173
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Microsoft XML Core Services MSXML parser processes user input. An attacker who successfully exploited the vulnerability could run malicious code remotely to take control of the user&#8217;s system.
To exploit the vulnerability, an attacker could host a specially crafted website designed to invoke MSXML through a web browser. However, an attacker would have no way to force a user to visit such a website. Instead, an attacker would typically have to convince a user to either click a link in an email message or instant message that would then take the user to the website. When Internet Explorer parses the XML content, an attacker could run malicious code remotely to take control of the user&#8217;s system.
The update addresses the vulnerability by correcting how the MSXML parser processes user input.
</p>
  ",Microsoft CVE-2018-8494: MS XML Remote Code Execution Vulnerability,Critical,459.8622742
13,fortigate-vm02.vuln.lax.rapid7.com,10.4.22.129,00:50:56:94:42:6b,2020-06-16 8:06:01,7311.624222,"
    
<p>In situations where an attacker receives automated notification of the success or failure of a decryption attempt an attacker, after sending a very large number of messages to be decrypted, can recover a CMS/PKCS7 transported encryption key or decrypt any RSA encrypted message that was encrypted with the public RSA key, using a Bleichenbacher padding oracle attack. Applications are not affected if they use a certificate together with the private RSA key to the CMS_decrypt or PKCS7_decrypt functions to select the correct recipient info to decrypt. Fixed in OpenSSL 1.1.1d (Affected 1.1.1-1.1.1c). Fixed in OpenSSL 1.1.0l (Affected 1.1.0-1.1.0k). Fixed in OpenSSL 1.0.2t (Affected 1.0.2-1.0.2s).</p>
  ",OpenSSL Padding Oracle in PKCS7_dataDecode and CMS_decrypt_set1_pkey (CVE-2019-1563),Severe,241.7933502
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Windows Common Log File System (CLFS) driver when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that this vulnerability would not allow an attacker to execute code or to elevate their user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2020-0615: Windows Common Log File System Driver Information Disclosure Vulnerability,Moderate,172.2711639
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user or application runs or installs a specially crafted, signed portable executable (PE) file on an affected system. </p>
  ",MS13-098: Vulnerability in Windows Could Allow Remote Code Execution (2893294),Critical,695.8289795
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in Microsoft .NET Framework that could allow an unauthenticated attacker to degrade the performance of a .NET-enabled website and disrupt the availability of applications that use Microsoft .NET Framework. The vulnerability exists when Microsoft .NET Framework attempts to decrypt certain specially crafted XML data. </p>
  ",MS15-048: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (3057134),Critical,681.0059814
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory. This vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. </p>
  ",MS15-093: Security Update for Internet Explorer (3088903),Critical,668.3857422
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1096: Win32k Information Disclosure Vulnerability,Moderate,212.8782043
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  The value placeholder in [Proxy-]Authorization headers of type &#39;Digest&#39; was not initialized or reset before or between successive key=value assignments. by mod_auth_digest. Providing an initial key with no &#39;=&#39; assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault.</p>
  ",Apache HTTPD: Uninitialized memory reflection in mod_auth_digest (CVE-2017-9788),Severe,561.8121948
14,misp-2-4.vuln.lax.rapid7.com,10.4.24.13,00:50:56:94:40:60,2020-06-16 8:03:48,14600.75249,"
    
<p>The affected asset is vulnerable to this vulnerability ONLY if it is running one of the following modules: mod_auth_digest.  Review your web server configuration for validation.  The value placeholder in [Proxy-]Authorization headers of type &#39;Digest&#39; was not initialized or reset before or between successive key=value assignments. by mod_auth_digest. Providing an initial key with no &#39;=&#39; assignment could reflect the stale value of uninitialized pool memory used by the prior request, leading to leakage of potentially confidential information, and a segfault.</p>
  ",Apache HTTPD: Uninitialized memory reflection in mod_auth_digest (CVE-2017-9788),Severe,561.8121948
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
      A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file leading to memory corruption.
    </p>
    
<p>
      An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
    </p>
    
<p>
      To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
    </p>
    
<p>
      If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
  ",Microsoft CVE-2017-0290: Malware Protection Engine Remote Code Execution Vulnerability (Security Advisory 4022344),Critical,601.3046875
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in Remote Desktop Protocol (RDP) when an attacker connects to the target system using RDP and sends specially crafted requests. An attacker who successfully exploited this vulnerability could cause the RDP service on the target system to stop responding.
To exploit this vulnerability, an attacker would need to run a specially crafted application against a server which provides Remote Desktop Protocol (RDP) services.
The update addresses the vulnerability by correcting how RDP handles connection requests.
</p>
  ",Microsoft CVE-2018-0976: Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability,Severe,85.48571777
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
        Only the most current version of Internet Explorer for a supported Windows operating system receives security updates. 
        It is recommended to upgrade to the latest version.
     </p>
  ",Obsolete Version of Microsoft Internet Explorer,Critical,913.3096924
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows that allows a sandbox escape. An attacker who successfully exploited the vulnerability could use the sandbox escape to elevate privileges on an affected system.
This vulnerability by itself does not allow arbitrary code execution. However, the vulnerability could allow arbitrary code to run if an attacker uses it in combination with another vulnerability, such as a remote code execution vulnerability or another elevation of privilege vulnerability, that can leverage the elevated privileges when code execution is attempted.
The security update addresses the vulnerability by correcting how Windows parses files.
</p>
  ",Microsoft CVE-2018-8468: Windows Elevation of Privilege Vulnerability,Severe,126.9642715
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
      A remote code execution vulnerability exists when the Microsoft Malware Protection Engine does not properly scan a specially crafted file leading to memory corruption.
      An attacker who successfully exploited this vulnerability could execute arbitrary code in the security context of the LocalSystem account and take control of the system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
      To exploit this vulnerability, a specially crafted file must be scanned by an affected version of the Microsoft Malware Protection Engine. There are many ways that an attacker could place a specially crafted file in a location that is scanned by the Microsoft Malware Protection Engine. For example, an attacker could use a website to deliver a specially crafted file to the victim&#39;s system that is scanned when the website is viewed by the user. An attacker could also deliver a specially crafted file via an email message or in an Instant Messenger message that is scanned when the file is opened. In addition, an attacker could take advantage of websites that accept or host user-provided content, to upload a specially crafted file to a shared location that is scanned by the Malware Protection Engine running on the hosting server.
      If the affected antimalware software has real-time protection turned on, the Microsoft Malware Protection Engine will scan files automatically, leading to exploitation of the vulnerability when the specially crafted file scanned. If real-time scanning is not enabled, the attacker would need to wait until a scheduled scan occurs in order for the vulnerability to be exploited. All systems running an affected version of antimalware software are primarily at risk.
    </p>
  ",Microsoft CVE-2019-1255: Malware Protection Engine Remote Code Execution Vulnerability,Severe,146.9212189
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Windows kernel-mode driver fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how the Windows kernel-mode driver handles objects in memory.
</p>
  ",Microsoft CVE-2019-1362: Win32k Elevation of Privilege Vulnerability,Severe,296.8050537
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-1395: Win32k Elevation of Privilege Vulnerability,Severe,285.2095947
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the Windows Installer when MSI packages process symbolic links, aka &#39;Windows Installer Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0686.</p>
  ",Microsoft CVE-2020-0683: Windows Installer Elevation of Privilege Vulnerability,Severe,260.9824219
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows when the Windows Adobe Type Manager Library improperly handles specially crafted OpenType fonts. An attacker who successfully exploited this vulnerability could take complete control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.</p>
  ",MS15-078: Vulnerability in Microsoft Font Driver Could Allow Remote Code Execution (3079904),Critical,684.1679077
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a user opens a legitimate rich text format file (.rtf), text file (.txt), or Word document (.doc) that is located in the same network directory as a specially crafted dynamic link library (DLL) file. An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS11-071: Vulnerability in Windows Components Could Allow Remote Code Execution (2570947),Critical,801.2297363
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Shell improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code and take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
In a web-based attack scenario, an attacker could host a website used to attempt to exploit the vulnerability. In addition, compromised websites and websites that accept or host user-provided content could contain specially crafted content that could exploit this vulnerability. An attacker would have no way to force users to visit a specially crafted website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email or instant message that takes them to the attacker&#39;s site.
The security update fixes this vulnerability by correcting how Windows Shell handles objects in memory.
</p>
  ",Microsoft CVE-2017-11819: Windows Shell Remote Code Execution Vulnerability,Critical,452.0407715
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by preventing out-of-bound memory access.
</p>
  ",Microsoft CVE-2017-0076: Hyper-V Denial of Service Vulnerability,Moderate,125.2661591
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Server Message Block 1.0 (SMBv1) server handles certain requests. An attacker who successfully exploited this vulnerability could craft a special packet, which could lead to information disclosure from the server.
To exploit the vulnerability, in most situations, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv1 server.
The security update addresses the vulnerability by correcting how SMBv1 handles these specially crafted requests.
</p>
  ",Microsoft CVE-2017-0276: Windows SMB Information Disclosure Vulnerability,Severe,372.0030518
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows font library improperly handles specially crafted embedded fonts. An attacker who successfully exploited the vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit the vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability and then convince users to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.
In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit the vulnerability and then convince users to open the document file.

The security update addresses the vulnerability by correcting how the Windows font library handles embedded fonts.
</p>
  ",Microsoft CVE-2019-1144: Microsoft Graphics Remote Code Execution Vulnerability,Critical,378.8623352
17,qradar-7-2-6.vuln.lax.rapid7.com,10.4.22.151,00:50:56:94:aa:8c,2020-06-16 8:02:48,1046.807602,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.7278137
16,cb-response-dev.vuln.lax.rapid7.com,10.4.24.253,00:50:56:94:62:7a,2020-05-27 8:08:53,7748.99054,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.7278137
11,osquery-cent6.vuln.lax.rapid7.com,10.4.29.253,00:50:56:94:9a:9f,2020-06-16 8:06:56,2572.282822,"
    
<p>
      Cryptanalysis results exploit biases in the RC4 keystream to recover repeatedly encrypted
      plaintexts. As a result, RC4 can no longer be seen as providing a sufficient level of security
      for SSH sessions. It has many single-byte biases, which makes it easier for remote attackers to conduct
      plaintext-recovery attacks via statistical analysis of ciphertext in a large number of sessions that use
      the same plaintext.
    </p>
  ",SSH Server Supports RC4 Cipher Algorithms,Severe,497.7278137
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory via the Microsoft Windows Text Services Framework. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, the attacker could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
An attacker could host a specially crafted website designed to exploit the vulnerability through Internet Explorer, and then convince a user to view the website. The attacker could also take advantage of compromised websites, or websites that accept or host user-provided content or advertisements, by adding specially crafted content that could exploit the vulnerability. In all cases, however, an attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by an enticement in an email or instant message, or by getting them to open an attachment sent through email.
The security update addresses the vulnerability by modifying how the Microsoft Windows Text Services Framework handles objects in memory.
</p>
  ",Microsoft CVE-2017-8727: Internet Explorer Memory Corruption Vulnerability,Critical,452.0407715
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the win32k component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit the vulnerability, an attacker would have to either log on locally to an affected system, or convince a locally authenticated user to execute a specially crafted application.
The security update addresses the vulnerability by correcting how win32k handles objects in memory.
</p>
  ",Microsoft CVE-2017-8486: Win32k Information Disclosure Vulnerability,Moderate,305.8360596
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Shell does not properly validate file copy destinations.
An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
To exploit the vulnerability, a user must open a specially crafted file. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and then convincing the user to open the file. In a web-based attack scenario, an attacker could host a website (or leverage a compromised website that accepts or hosts user-provided content) that contains a specially crafted file designed to exploit the vulnerability. An attacker would have no way to force a user to visit the website. Instead, an attacker would have to convince a user to click a link, typically by way of an enticement in an email or Instant Messenger message, and then convince the user to open the specially crafted file.
The security update addresses the vulnerability by helping to ensure that Windows Shell validates file copy destinations.
</p>
  ",Microsoft CVE-2018-0883: Windows Shell Remote Code Execution Vulnerability,Critical,412.5235291
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in Microsoft Windows that could allow remote code execution if a .LNK file is processed.
An attacker who successfully exploited this vulnerability could gain the same user rights as the local user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
The attacker could present to the user a removable drive, or remote share, that contains a malicious .LNK file and an associated malicious binary. When the user opens this drive(or remote share) in Windows Explorer, or any other application that parses the .LNK file, the malicious binary will execute code of the attacker&#8217;s choice, on the target system.
The security update addresses the vulnerability by correcting the processing of shortcut LNK references.
</p>
  ",Microsoft CVE-2018-8346: LNK Remote Code Execution Vulnerability,Critical,473.2265015
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2019-1228: Windows Kernel Information Disclosure Vulnerability,Moderate,205.6607361
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-1240: Jet Database Engine Remote Code Execution Vulnerability,Critical,370.8247375
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in Remote Desktop Protocol (RDP) when an attacker connects to the target system using RDP and sends specially crafted requests. An attacker who successfully exploited this vulnerability could cause the RDP service on the target system to stop responding.
To exploit this vulnerability, an attacker would need to run a specially crafted application against a server which provides Remote Desktop Protocol (RDP) services.
The update addresses the vulnerability by correcting how RDP handles connection requests.
</p>
  ",Microsoft CVE-2019-1326: Windows Remote Desktop Protocol (RDP) Denial of Service Vulnerability,Critical,256.3738708
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists in Microsoft Windows when a man-in-the-middle attacker is able to successfully bypass the NTLMv2 protection if a client is also sending LMv2 responses. An attacker who successfully exploited this vulnerability could gain the ability to downgrade NTLM security features.
To exploit this vulnerability, the attacker would need to be able to modify NTLM traffic exchange.
The update addresses the vulnerability by hardening NTLMv2 protection on the server-side.
</p>
  ",Microsoft CVE-2019-1338: Windows NTLM Security Feature Bypass Vulnerability,Severe,98.68502808
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information vulnerability exists when Windows Modules Installer Service improperly discloses file information. Successful exploitation of the vulnerability could allow the attacker to read the contents of a log file on disk.
To exploit the vulnerability, an attacker would have to log onto an affected system and run a specially crafted application.
The update addresses the vulnerability by changing the way Windows Modules Installer Service discloses file information.
</p>
  ",Microsoft CVE-2019-1418: Windows Modules Installer Service Information Disclosure Vulnerability,Moderate,186.2593231
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in the MHTML protocol handler in Microsoft Windows. The vulnerability could allow information disclosure if a user visited a specially crafted Web site. In a Web-based attack scenario, a Web site could contain a specially crafted link that is used to exploit this vulnerability. An attacker would have to convince users to visit the Web site and open the specially crafted link.</p>
  ",MS11-026: Vulnerability in MHTML Could Allow Information Disclosure (2503658),Severe,228.6741791
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>
        Microsoft is aware of a new publicly disclosed class of vulnerabilities referred to as &#39;speculative execution side-channel attacks&#39; that affect many modern processors and operating systems including Intel, AMD, and ARM. Note: this issue will affect other systems such as Android, Chrome, iOS, MacOS, so we advise customers to seek out guidance from those vendors.

        An attacker who successfully exploited these vulnerabilities may be able to read privileged data across trust boundaries. In shared resource environments (such as exists in some cloud services configurations), these vulnerabilities could allow one virtual machine to improperly access information from another. In non-browsing scenarios on standalone systems, an attacker would need prior access to the system or an ability to run code on the system to leverage these vulnerabilities.

        Microsoft has released updates to help mitigate these vulnerabilities. To get all available protections, firmware (microcode) and software updates are required. This may include microcode from device OEMs and in some cases updates to AV software as well. In some cases, installing these updates will have a performance impact. We have also taken action to secure our cloud services.

        Microsoft has no information to indicate that these vulnerabilities have been used to attack customers at this time. Microsoft continues working closely with industry partners including chip makers, hardware OEMs, and app vendors to protect customers.

        Please review Microsoft Security Advisory ADV180002 for more details.
    </p>
  ",Microsoft CVE-2017-5715: Guidance to mitigate speculative execution side-channel vulnerabilities,Severe,346.5027771
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Volume Manager Extension Driver component improperly provides kernel information. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how Volume Manager Extension Driver handles objects in memory.
</p>
  ",Microsoft CVE-2017-8668: Volume Manager Extension Driver Information Disclosure Vulnerability,Moderate,332.4530945
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists in Windows DNS Server if the server is configured to answer version queries. An attacker who successfully exploited this vulnerability could cause the DNS Server service to become nonresponsive.
An attacker could exploit this vulnerability by sending malicious DNS queries, resulting in denial of service.
The update addresses the vulnerability by correcting how Windows DNS Server processes DNS queries.
</p>
  ",Microsoft CVE-2017-0171: Windows DNS Server Denial of Service Vulnerability,Severe,124.0010071
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Microsoft Windows Embedded OpenType (EOT) font engine parses specially crafted embedded fonts. An attacker who successfully exploited this vulnerability could potentially read data that was not intended to be disclosed. Note that while this vulnerability would not allow an attacker to either execute code or to elevate user rights directly, it could be used to obtain information in an attempt to further compromise the affected system.
To exploit this vulnerability, an attacker would have to log on to an affected system and open a document containing specially crafted fonts.
The security update addresses the vulnerability by correcting how the Windows EOT font engine handles embedded fonts.
</p>
  ",Microsoft CVE-2018-0761: Windows EOT Font Engine Information Disclosure Vulnerability,Moderate,304.3887939
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise a user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1143: Windows Graphics Component Information Disclosure Vulnerability,Moderate,205.6607361
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in the way that the Windows Kernel handles objects in memory, aka &#39;Windows Kernel Elevation of Privilege Vulnerability&#39;. This CVE ID is unique from CVE-2020-0669, CVE-2020-0670, CVE-2020-0671, CVE-2020-0672.</p>
  ",Microsoft CVE-2020-0668: Windows Kernel Elevation of Privilege Vulnerability,Severe,230.9113617
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that Windows Deployment Services TFTP Server handles objects in memory.
An attacker who successfully exploited the vulnerability could execute arbitrary code with elevated permissions on a target system.
To exploit the vulnerability, an attacker could create a specially crafted request, causing Windows to execute arbitrary code with elevated permissions.
The security update addresses the vulnerability by correcting how Windows Deployment Services TFTP Server handles objects in memory.
</p>
  ",Microsoft CVE-2019-0603: Windows Deployment Services TFTP Server Remote Code Execution Vulnerability,Critical,290.6310425
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in Microsoft Common Controls when it accesses an object in memory that has not been correctly initialized or has been deleted. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited this vulnerability could take complete control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker could exploit the vulnerability by convincing a user to click a specially crafted link, or a link to specially crafted content. The vulnerability is then triggered when the user invokes F12 Developer Tools in Internet Explorer. </p>
  ",MS15-060: Vulnerability in Microsoft Common Controls Could Allow Remote Code Execution (3059317),Critical,677.4666138
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the Microsoft Web Distributed Authoring and Versioning (WebDAV) client that is caused when it explicitly allows the use of Secure Socket Layer (SSL) 2.0. An attacker who successfully exploited this vulnerability could decrypt portions of encrypted traffic. </p>
  ",MS15-089: Vulnerability in WebDAV Could Allow Information Disclosure  (3076949),Moderate,399.2320862
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A security feature bypass vulnerability exists where a NETLOGON message is able to obtain the session key and sign messages.
To exploit this vulnerability, an attacker could send a specially crafted authentication request. An attacker who successfully exploited this vulnerability could access another machine using the original user privileges.
The issue has been addressed by changing how NTLM validates network authentication messages.
</p>
  ",Microsoft CVE-2019-1019: Microsoft Windows Security Feature Bypass Vulnerability,Severe,214.8495483
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves one publicly disclosed vulnerability and seventeen privately reported vulnerabilities in Internet Explorer. These vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS14-012: Cumulative Security Update for Internet Explorer (2925418),Critical,881.1992188
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when Microsoft Hyper-V Network Switch on a host server fails to properly validate input from a privileged user on a guest operating system. To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application that causes a host machine to crash.
To exploit the vulnerability, an attacker who already has a privileged account on a guest operating system, running as a virtual machine, could run a specially crafted application.
The security update addresses the vulnerability by preventing out-of-bound memory access.
</p>
  ",Microsoft CVE-2017-0099: Hyper-V Denial of Service Vulnerability,Moderate,113.4073181
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists when Windows Hyper-V Network Switch on a host server fails to properly validate input from an authenticated user on a guest operating system. To exploit the vulnerability, an attacker could run a specially crafted application on a guest operating system that could cause the Hyper-V host operating system to execute arbitrary code.
An attacker who successfully exploited the vulnerability could execute arbitrary code on the host operating system.
The security update addresses the vulnerability by correcting how Windows Hyper-V Network Switch validates guest operating system network traffic.
</p>
  ",Microsoft CVE-2017-0163: Hyper-V Remote Code Execution Vulnerability,Severe,472.9562378
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when Windows Uniscribe improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document or by convincing a user to visit an untrusted webpage.
The update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0128: Windows Uniscribe Information Disclosure Vulnerability,Severe,399.5409241
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a privately reported vulnerability in the JScript and VBScript scripting engines on 64-bit versions of Microsoft Windows. The vulnerability could allow remote code execution if a user visited a specially crafted website. An attacker would have no way to force users to visit the website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes users to the attacker&#39;s website.</p>
  ",MS12-056: Vulnerability in JScript and VBScript Engines Could Allow Remote Code Execution (2706045),Critical,778.649353
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2018-0844: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,385.5591431
12,ivanti-w16.vuln.lax.rapid7.com,10.4.22.211,00:50:56:94:fc:3a,2020-06-16 8:07:24,9482.484604,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582764
6,ivm-agent-win.vuln.lax.rapid7.com,10.4.30.238,00:50:56:94:42:62,2020-06-16 8:02:18,3036.668457,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582764
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-16 8:04:05,18454.32763,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582764
20,iase-win10.vuln.lax.rapid7.com,10.4.26.101,00:50:56:94:5c:97,2020-06-16 8:05:03,7147.98671,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582764
5,cb-protection.vuln.lax.rapid7.com,10.4.28.244,00:50:56:94:9f:39,2020-06-16 8:05:07,9309.972092,"
    
<p>
      The SMB1 protocol has been deprecated since 2014 and is considered obsolete and insecure.
    </p>
  ",SMB: Service supports deprecated SMBv1 protocol,Severe,520.8582764
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An elevation of privilege vulnerability exists in Windows Adobe Type Manager Font Driver (ATMFD.dll) when it fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code and take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit the vulnerability, an attacker would first have to log on to a target system and then run a specially crafted application.
The security update addresses the vulnerability by correcting how ATMFD.dll handles objects in memory.
</p>
  ",Microsoft CVE-2018-0788: OpenType Font Driver Elevation of Privilege Vulnerability,Severe,424.4659119
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows kernel improperly handles objects in memory. An attacker who successfully exploited this vulnerability could obtain information to further compromise the user&#8217;s system.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to obtain information that could be used to try to further compromise the affected system.
The update addresses the vulnerability by correcting how the Windows kernel handles objects in memory.
</p>
  ",Microsoft CVE-2018-8207: Windows Kernel Information Disclosure Vulnerability,Moderate,248.7597198
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2018-8596: Windows GDI Information Disclosure Vulnerability,Severe,290.1863098
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-1047: Windows GDI Information Disclosure Vulnerability,Severe,258.9508057
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists in the way that Microsoft WordPad parses specially crafted files.
Exploitation of this vulnerability requires that a user open a specially crafted file with an affected version of Microsoft WordPad. In an email attack scenario, an attacker could exploit the vulnerability by sending a specially crafted file to the user and then convincing the user to open the file.
The update addresses the vulnerability by correcting the way that Microsoft WordPad parses specially crafted files, and by enabling API functionality in Windows that Microsoft WordPad will leverage to resolve the identified issue.
</p>
  ",Microsoft CVE-2017-8588: WordPad Remote Code Execution Vulnerability,Critical,473.9259644
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A remote code execution vulnerability exists due to the way Windows Uniscribe handles objects in memory. An attacker who successfully exploited this vulnerability could take control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.
There are multiple ways an attacker could exploit this vulnerability:

In a web-based attack scenario, an attacker could host a specially crafted website designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email or instant message that takes users to the attacker&#39;s website, or by opening an attachment sent through email.

In a file-sharing attack scenario, an attacker could provide a specially crafted document file designed to exploit this vulnerability and then convince a user to open the document file.


The security update addresses the vulnerability by correcting how Windows Uniscribe handles objects in memory.
</p>
  ",Microsoft CVE-2017-0088: Windows Uniscribe Remote Code Execution Vulnerability,Critical,611.7970581
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists in the way that the Windows Graphics Device Interface (GDI)  handles objects in memory, allowing an attacker to retrieve information from a targeted system. By itself, the information disclosure does not allow arbitrary code execution; however, it could allow arbitrary code to be run if the attacker uses it in combination with another vulnerability.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application.
The security update addresses the vulnerability by correcting how GDI handles memory addresses.
</p>
  ",Microsoft CVE-2017-0190: Windows GDI Information Disclosure Vulnerability,Moderate,344.999054
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves one publicly disclosed vulnerability and one privately reported vulnerability in Microsoft Windows. The more severe of these vulnerabilities could allow remote code execution if a user opens a specially crafted document or visits a malicious webpage that embeds TrueType or OpenType font files. An attacker would have to convince users to visit the website, typically by getting them to click a link in an email message that takes them to the attacker&#39;s website.</p>
  ",MS12-078: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2783534),Critical,852.7821045
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>This security update resolves a publicly disclosed vulnerability in Windows DirectWrite. In an Instant Messenger-based attack scenario, the vulnerability could allow denial of service if an attacker sends a specially crafted sequence of Unicode characters directly to an Instant Messenger client. The target application could become unresponsive when DirectWrite renders the specially crafted sequence of Unicode characters. </p>
  ",MS12-019: Vulnerability in DirectWrite Could Allow Denial of Service (2665364),Severe,171.8677979
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>An information disclosure vulnerability exists when VBScript improperly discloses the contents of its memory, which could provide an attacker with information to further compromise the user&#8217;s computer or data.
To exploit the vulnerability, an attacker must know the memory address of where the object was created.
The update addresses the vulnerability by changing the way certain functions handle objects in memory.
</p>
  ",Microsoft CVE-2018-0847: Windows Scripting Engine Memory Corruption Vulnerability,Severe,335.6933289
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,412228.5955,"
    
<p>A denial of service vulnerability exists when Windows improperly handles objects in memory. An attacker who successfully exploited the vulnerability could cause a target system to stop responding.
To exploit this vulnerability, an attacker would have to log on to an affected system and run a specially crafted application or to convince a user to open a specific file on a network share. The vulnerability would not allow an attacker to execute code or to elevate user rights directly, but it could be used to cause a target system to stop responding.
The update addresses the vulnerability by correcting how Windows handles objects in memory.
</p>
  ",Microsoft CVE-2019-1346: Windows Denial of Service Vulnerability,Severe,138.1590424
