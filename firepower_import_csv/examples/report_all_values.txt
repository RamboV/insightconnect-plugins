asset_id,host_name,ip_address,mac_address,last_assessed_for_vulnerabilities,asset_riskscore,vendor,name,version,vulnerability_id,nexpose_id,description,vulnerability_title,vulnerability_severity,severity_score,pci_severity_score,vulnerability_riskscore,cvss_score,cvss_vector,port,protocol_id
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,699,msft-cve-2019-0941,"

<p>A denial of service exists in Microsoft IIS Server when the optional request filtering feature improperly handles requests. An attacker who successfully exploited this vulnerability could perform a temporary denial of service against pages configured to use request filtering.
To exploit this vulnerability, an attacker could send a specially crafted request to a page utilizing request filtering.
The update addresses the vulnerability by changing the way certain requests are processed by the filter.
</p>
  ",Microsoft CVE-2019-0941: Microsoft IIS Server Denial of Service Vulnerability,Severe,5,2,149.9149933,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,701,msft-cve-2019-0943,"

<p>An elevation of privilege vulnerability exists when Windows improperly handles calls to Advanced Local Procedure Call (ALPC).
An attacker who successfully exploited this vulnerability could run arbitrary code in the security context of the local system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control over an affected system.
The update addresses the vulnerability by correcting how Windows handles calls to ALPC.
</p>
  ",Microsoft CVE-2019-0943: Windows ALPC Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,711,msft-cve-2019-0948,"

<p>An information disclosure vulnerability exists in the Windows Event Viewer (eventvwr.msc) when it improperly parses XML input containing a reference to an external entity. An attacker who successfully exploited this vulnerability could read arbitrary files via an XML external entity (XXE) declaration.
To exploit the vulnerability, an attacker could create a file containing specially crafted XML content and convince an authenticated user to import the file.
The update addresses the vulnerability by modifying the way that the Event Viewer parses XML input.
</p>
  ",Microsoft CVE-2019-0948: Windows Event Viewer Information Disclosure Vulnerability,Severe,4,3,270.5437927,5.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,723,msft-cve-2019-0972,"

<p>This security update corrects a denial of service in the Local Security Authority Subsystem Service (LSASS) caused when an authenticated attacker sends a specially crafted authentication request. A remote attacker who successfully exploited this vulnerability could cause a denial of service on the target system&#39;s LSASS service, which triggers an automatic reboot of the system.
The security update addresses the vulnerability by changing the way that LSASS handles specially crafted authentication requests.
</p>
  ",Microsoft CVE-2019-0972: Local Security Authority Subsystem Service Denial of Service Vulnerability,Severe,7,2,122.4161987,6.5,AV:N/AC:L/Au:S/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,724,msft-cve-2019-0973,"

<p>An elevation of privilege vulnerability exists in the Windows Installer when the Windows Installer fails to properly sanitize input leading to an insecure library loading behavior.
A locally authenticated attacker could run arbitrary code with elevated system privileges. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
The security update addresses the vulnerability by correcting the input sanitization error to preclude unintended elevation.
</p>
  ",Microsoft CVE-2019-0973: Windows Installer Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,725,msft-cve-2019-0974,"

<p>A remote code execution vulnerability exists when the Windows Jet Database Engine improperly handles objects in memory. An attacker who successfully exploited this vulnerability could execute arbitrary code on a victim system.
An attacker could exploit this vulnerability by enticing a victim to open a specially crafted file.
The update addresses the vulnerability by correcting the way the Windows Jet Database Engine handles objects in memory.
</p>
  ",Microsoft CVE-2019-0974: Jet Database Engine Remote Code Execution Vulnerability,Critical,9,5,398.1695251,8.8,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,730,msft-cve-2019-0977,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,730,msft-cve-2019-0977,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,730,msft-cve-2019-0977,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,730,msft-cve-2019-0977,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,730,msft-cve-2019-0977,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0977: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,744,msft-cve-2019-0960,"

<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,744,msft-cve-2019-0960,"

<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,744,msft-cve-2019-0960,"

<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,744,msft-cve-2019-0960,"

<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,744,msft-cve-2019-0960,"

<p>An elevation of privilege vulnerability exists in Windows when the Win32k component fails to properly handle objects in memory. An attacker who successfully exploited this vulnerability could run arbitrary code in kernel mode. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.
The update addresses this vulnerability by correcting how Win32k handles objects in memory.
</p>
  ",Microsoft CVE-2019-0960: Win32k Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,745,msft-cve-2019-0961,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0961: Windows GDI Information Disclosure Vulnerability,Severe,4,3,265.0161743,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,754,msft-cve-2019-0968,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,754,msft-cve-2019-0968,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,754,msft-cve-2019-0968,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,754,msft-cve-2019-0968,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,754,msft-cve-2019-0968,"

<p>An information disclosure vulnerability exists when the Windows GDI component improperly discloses the contents of its memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user&#8217;s system.
There are multiple ways an attacker could exploit the vulnerability, such as by convincing a user to open a specially crafted document, or by convincing a user to visit an untrusted webpage.
The security update addresses the vulnerability by correcting how the Windows GDI component handles objects in memory.
</p>
  ",Microsoft CVE-2019-0968: Windows GDI Information Disclosure Vulnerability,Severe,4,3,260.0290833,6.5,AV:N/AC:M/Au:N/C:P/I:N/A:N,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,797,msft-cve-2019-0980,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0980: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,798,msft-cve-2019-0981,"

<p>A denial of service vulnerability exists when .NET Framework or .NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework or .NET Core web application. The vulnerability can be exploited remotely, without authentication.
A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the .NET Framework or .NET Core application.
The update addresses the vulnerability by correcting how .NET Framework or .NET Core web applications handles web requests.
</p>
  ",Microsoft CVE-2019-0981: .Net Framework and .Net Core Denial of Service Vulnerability,Severe,5,2,150.6496887,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,802,msft-cve-2019-0984,"

<p>An elevation of privilege vulnerability exists when the Windows Common Log File System (CLFS) driver improperly handles objects in memory. An attacker who successfully exploited this vulnerability could run processes in an elevated context.
To exploit the vulnerability, an attacker would first have to log on to the system, and then run a specially crafted application to take control over the affected system.
The security update addresses the vulnerability by correcting how CLFS handles objects in memory.
</p>
  ",Microsoft CVE-2019-0984: Windows Common Log File System Driver Elevation of Privilege Vulnerability,Severe,7,5,336.5119324,7.8,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,804,msft-cve-2019-0985,"

<p>A remote code execution vulnerability exists when the Microsoft Speech API (SAPI) improperly handles text-to-speech (TTS) input. The vulnerability could corrupt memory in a way that enables an attacker to execute arbitrary code in the context of the current user.
To exploit the vulnerability, an attacker would need to convince a user to open a specially crafted document containing TTS content invoked through a scripting language.
The update address the vulnerability by modifying how the system handles objects in memory.
</p>
  ",Microsoft CVE-2019-0985: Microsoft Speech API Remote Code Execution Vulnerability,Severe,7,4,329.3701782,7.8,AV:N/AC:M/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,804,msft-cve-2019-0985,"

<p>A remote code execution vulnerability exists when the Microsoft Speech API (SAPI) improperly handles text-to-speech (TTS) input. The vulnerability could corrupt memory in a way that enables an attacker to execute arbitrary code in the context of the current user.
To exploit the vulnerability, an attacker would need to convince a user to open a specially crafted document containing TTS content invoked through a scripting language.
The update address the vulnerability by modifying how the system handles objects in memory.
</p>
  ",Microsoft CVE-2019-0985: Microsoft Speech API Remote Code Execution Vulnerability,Severe,7,4,329.3701782,7.8,AV:N/AC:M/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,804,msft-cve-2019-0985,"

<p>A remote code execution vulnerability exists when the Microsoft Speech API (SAPI) improperly handles text-to-speech (TTS) input. The vulnerability could corrupt memory in a way that enables an attacker to execute arbitrary code in the context of the current user.
To exploit the vulnerability, an attacker would need to convince a user to open a specially crafted document containing TTS content invoked through a scripting language.
The update address the vulnerability by modifying how the system handles objects in memory.
</p>
  ",Microsoft CVE-2019-0985: Microsoft Speech API Remote Code Execution Vulnerability,Severe,7,4,329.3701782,7.8,AV:N/AC:M/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,805,msft-cve-2019-0986,"

<p>An elevation of privilege vulnerability exists when the Windows User Profile Service (ProfSvc) improperly handles symlinks. An attacker who successfully exploited this vulnerability could delete files and folders in an elevated context.
To exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and delete files or folders of their choosing.
The security update addresses the vulnerability by correcting how the Windows User Profile Service handles symlinks.
</p>
  ",Microsoft CVE-2019-0986: Windows User Profile Service Elevation of Privilege Vulnerability,Severe,4,2,146.5085907,7.1,AV:L/AC:L/Au:N/C:N/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3662,windows-hotfix-ms13-001,"

<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,10,5,852.0116577,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3662,windows-hotfix-ms13-001,"

<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,10,5,852.0116577,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3662,windows-hotfix-ms13-001,"

<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,10,5,852.0116577,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3662,windows-hotfix-ms13-001,"

<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,10,5,852.0116577,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3662,windows-hotfix-ms13-001,"

<p>This security update resolves one privately reported vulnerability in Microsoft Windows. The vulnerability could allow remote code execution if a print server received a specially crafted print job. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems connected directly to the Internet have a minimal number of ports exposed.</p>
  ",MS13-001: Vulnerability in Windows Print Spooler Components Could Allow Remote Code Execution (2769369),Critical,10,5,852.0116577,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3663,windows-hotfix-ms13-002,"

<p>This security update resolves two privately reported vulnerabilities in Microsoft XML Core Services. The vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker would have no way to force users to visit such a website. Instead, an attacker would have to convince users to visit the website, typically by getting them to click a link in an email message or Instant Messenger message that takes the user to the attacker&#39;s website.</p>
  ",MS13-002: Vulnerabilities in Microsoft XML Core Services Could Allow Remote Code Execution (2756145),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3667,windows-hotfix-ms13-004,"

<p>This security update resolves four privately reported vulnerabilitiesin the .NET Framework. The most severe of these vulnerabilities could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerabilities could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited these vulnerabilities could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-004: Vulnerabilities in .NET Framework Could Allow Elevation of Privilege (2769324),Critical,9,5,767.7460938,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3672,windows-hotfix-ms13-007,"

<p>This security update resolves a privately reported vulnerability in the Open Data (OData) protocol. The vulnerability could allow denial of service if an unauthenticated attacker sends specially crafted HTTP requests to an affected site. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter. Best practices recommend that systems that are connected to the Internet have a minimal number of ports exposed.</p>
  ",MS13-007: Vulnerability in Open Data Protocol Could Allow Denial of Service (2769327),Critical,8,2,324.5758972,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3691,windows-hotfix-ms13-015,"

<p>This security update resolves one privately reported vulnerabilityin the .NET Framework. The vulnerability could allow elevation of privilege if a user views a specially crafted webpage using a web browser that can run XAML Browser Applications (XBAPs). The vulnerability could also be used by Windows .NET applications to bypass Code Access Security (CAS) restrictions. An attacker who successfully exploited this vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-015: Vulnerability in .NET Framework Could Allow Elevation of Privilege (2800277),Critical,10,5,850.7674561,10,AV:N/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3696,windows-hotfix-ms13-018,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,8,2,324.1018982,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3696,windows-hotfix-ms13-018,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,8,2,324.1018982,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3696,windows-hotfix-ms13-018,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,8,2,324.1018982,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3696,windows-hotfix-ms13-018,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,8,2,324.1018982,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3696,windows-hotfix-ms13-018,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an unauthenticated attacker sends a specially crafted connection termination packet to the server.</p>
  ",MS13-018: Vulnerability in TCP/IP Could Allow Denial of Service (2790655),Critical,8,2,324.1018982,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3723,windows-hotfix-ms13-027,"

<p>This security update resolves three privately reported vulnerabilities in Microsoft Windows. These vulnerabilities could allow elevation of privilege if an attacker gains access to a system.</p>
  ",MS13-027: Vulnerabilities in Kernel-Mode Drivers Could Allow Elevation Of Privilege (2807986),Severe,7,5,744.1512451,7.2,AV:L/AC:L/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3726,windows-hotfix-ms13-029,"

<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,9,5,760.3167725,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3726,windows-hotfix-ms13-029,"

<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,9,5,760.3167725,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3726,windows-hotfix-ms13-029,"

<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,9,5,760.3167725,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3726,windows-hotfix-ms13-029,"

<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,9,5,760.3167725,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3726,windows-hotfix-ms13-029,"

<p>This security update resolves a privately reported vulnerability in Windows Remote Desktop Client. The vulnerability could allow remote code execution if a user views a specially crafted webpage. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-029: Vulnerability in Remote Desktop Client Could Allow Remote Code Execution (2828223),Critical,9,5,760.3167725,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3751,windows-hotfix-ms13-036,"

<p>This security update resolves three privately reported vulnerabilities and one publicly disclosed vulnerability in Microsoft Windows. The most severe of these vulnerabilities could allow elevation of privilege if an attacker logs on to the system and runs a specially crafted application. An attacker must have valid logon credentials and be able to log on locally to exploit the most severe vulnerabilities.</p>
  ",MS13-036: Vulnerabilities in Kernel-Mode Driver Could Allow Elevation Of Privilege (2829996),Severe,7,2,289.6445007,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3772,windows-hotfix-ms13-040,"

<p>This security update resolves one privately reported vulnerability and one publicly disclosed vulnerabilityin the .NET Framework. The more severe of the vulnerabilities could allow spoofing if a .NET application receives a specially crafted XML file. An attacker who successfully exploited the vulnerabilities could modify the contents of an XML file without invalidating the file&#39;s signature and could gain access to endpoint functions as if they were an authenticated user.</p>
  ",MS13-040: Vulnerabilities in .NET Framework Could Allow Spoofing (2836440),Critical,8,5,700.9972534,7.5,AV:N/AC:L/Au:N/C:P/I:P/A:P,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3783,windows-hotfix-ms13-049,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,7,2,287.6039429,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3783,windows-hotfix-ms13-049,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,7,2,287.6039429,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3783,windows-hotfix-ms13-049,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,7,2,287.6039429,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3783,windows-hotfix-ms13-049,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,7,2,287.6039429,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3783,windows-hotfix-ms13-049,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow denial of service if an attacker sends specially crafted packets to the server. Firewall best practices and standard default firewall configurations can help protect networks from attacks that originate outside the enterprise perimeter.</p>
  ",MS13-049: Vulnerability in Kernel-Mode Driver Could Allow Denial of Service (2845690),Severe,7,2,287.6039429,7.1,AV:N/AC:M/Au:N/C:N/I:N/A:C,-1,-1
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3784,dns-bind-cve-2016-2775,"

<p>ISC BIND 9.x before 9.9.9-P2, 9.10.x before 9.10.4-P2, and 9.11.x before 9.11.0b2, when lwresd or the named lwres option is enabled, allows remote attackers to cause a denial of service (daemon crash) via a long request that uses the lightweight resolver protocol.</p>
  ",ISC BIND: A query name which is too long can cause a segmentation fault in lwresd (CVE-2016-2775),Severe,4,2,135.1298981,5.9,AV:N/AC:M/Au:N/C:N/I:N/A:P,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,17
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
15,cuckoo-2-0-5.vuln.lax.rapid7.com,10.4.23.176,00:50:56:94:8e:71,2020-06-22 8:03:52,18477.49935,Ubuntu,Linux,16.04,3785,dns-bind-cve-2016-2776,"

<p>buffer.c in named in ISC BIND 9 before 9.9.9-P3, 9.10.x before 9.10.4-P3, and 9.11.x before 9.11.0rc3 does not properly construct responses, which allows remote attackers to cause a denial of service (assertion failure and daemon exit) via a crafted query.</p>
  ",ISC BIND: Assertion Failure in buffer.c While Building Responses to a Specifically Constructed Request (CVE-2016-2776),Critical,8,2,303.5040588,7.5,AV:N/AC:L/Au:N/C:N/I:N/A:C,53,6
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3790,windows-hotfix-ms13-050,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow elevation of privilege when an authenticated attacker deletes a printer connection. An attacker must have valid logon credentials and be able to log on to exploit this vulnerability.</p>
  ",MS13-050: Vulnerability in Windows Print Spooler Components Could Allow Elevation of Privilege (2839894),Critical,9,5,730.788208,9,AV:N/AC:L/Au:S/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3792,windows-hotfix-ms13-052,"

<p>This security update resolves five privately reported vulnerabilities and two publicly disclosed vulnerabilities in Microsoft .NET Framework and Microsoft Silverlight. The most severe of these vulnerabilities could allow remote code execution if a trusted application uses a particular pattern of code. An attacker who successfully exploited this vulnerability could gain the same user rights as the logged-on user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-052: Vulnerabilities in .NET Framework and Silverlight Could Allow Remote Code Execution (2861561),Critical,9,5,784.2324219,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3799,windows-hotfix-ms13-058,"

<p>This security update resolves a privately reported vulnerability in Windows Defender for Windows 7 and Windows Defender when installed on Windows Server 2008 R2. The vulnerability could allow elevation of privilege due to the pathnames used by Windows Defender. An attacker who successfully exploited this vulnerability could execute arbitrary code and take complete control of an affected system. The attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. An attacker must have valid logon credentials to exploit this vulnerability. The vulnerability could not be exploited by anonymous users.</p>
  ",MS13-058: Vulnerability in Windows Defender Could Allow Elevation of Privilege (2847927),Severe,7,4,711.2946777,6.9,AV:L/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3811,windows-hotfix-ms13-065,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,8,2,321.4908447,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3811,windows-hotfix-ms13-065,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,8,2,321.4908447,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3811,windows-hotfix-ms13-065,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,8,2,321.4908447,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3811,windows-hotfix-ms13-065,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,8,2,321.4908447,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3811,windows-hotfix-ms13-065,"

<p>This security update resolves a privately reported vulnerability in Microsoft Windows. The vulnerability could allow a denial of service if the attacker sends a specially crafted ICMP packet to the target system.</p>
  ",MS13-065: Vulnerability in ICMPv6 could allow Denial of Service (2868623),Critical,8,2,321.4908447,7.8,AV:N/AC:L/Au:N/C:N/I:N/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3856,windows-hotfix-ms13-080,"

<p>This security update resolves one publicly disclosed vulnerability and eight privately reported vulnerabilities in Internet Explorer. The most severe vulnerabilities could allow remote code execution if a user views a specially crafted webpage using Internet Explorer. An attacker who successfully exploited the most severe of these vulnerabilities could gain the same user rights as the current user. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.</p>
  ",MS13-080: Cumulative Security Update for Internet Explorer (2879017),Critical,9,5,895.1342163,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1
18,vagrant-pc,10.0.2.15,08:00:27:33:9f:ce,2020-03-26 10:04:24,413434.8474,Microsoft,Windows 7 Professional Edition,SP1,3857,windows-hotfix-ms13-081,"

<p>This security update resolves seven privately reported vulnerabilities in Microsoft Windows. The most severe of these vulnerabilities could allow remote code execution if a user views shared content that embeds OpenType or TrueType font files. An attacker who successfully exploited these vulnerabilities could take complete control of an affected system.</p>
  ",MS13-081: Vulnerabilities in Windows Kernel-Mode Drivers Could Allow Remote Code Execution (2870008),Critical,9,5,776.539856,9.3,AV:N/AC:M/Au:N/C:C/I:C/A:C,-1,-1

